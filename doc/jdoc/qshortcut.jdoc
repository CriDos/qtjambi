<class name="QShortcut" doc="/**
<p>The QShortcut class is used to create keyboard shortcuts.</p>
<p>The QShortcut class provides a way of connecting keyboard shortcuts to Qt's signals and slots mechanism, so that objects can be informed when a shortcut is executed. The shortcut can be set up to contain all the key presses necessary to describe a keyboard shortcut, including the states of modifier keys such as <b>Shift</b>, <b>Ctrl</b>, and <b>Alt</b>.</p>
<p>For applications that use menus, it may be more convenient to use the convenience functions provided in the QMenu class to assign keyboard shortcuts to menu items as they are created. Alternatively, shortcuts may be associated with other types of actions in the QAction class.</p>
<p>The simplest way to create a shortcut for a particular widget is to construct the shortcut with a key sequence. For example:</p>
<pre>    shortcut = new QShortcut(QKeySequence(tr(&quot;Ctrl+O&quot;, &quot;File|Open&quot;)),
                             parent);</pre>
<p>When the user types the key sequence for a given shortcut, the shortcut's activated() signal is emitted. (In the case of ambiguity, the activatedAmbiguously() signal is emitted.) A shortcut is &quot;listened for&quot; by Qt's event loop when the shortcut's parent widget is receiving events.</p>
<p>A shortcut's key sequence can be set with setKey() and retrieved with key(). A shortcut can be enabled or disabled with setEnabled(), and can have &quot;What's This?&quot; help text set with setWhatsThis().</p>

*/">
    <method name="public QShortcut(com.trolltech.qt.gui.QWidget parent__0)" doc="/**
<p>Constructs a QShortcut object for the <i>parent</i> widget. Since no shortcut key sequence is specified, the shortcut will not emit any signals.</p>

*/"/>
    <method name="public QShortcut(com.trolltech.qt.gui.QKeySequence key__0, com.trolltech.qt.gui.QWidget parent__1, com.trolltech.qt.QNativePointer member__2, com.trolltech.qt.QNativePointer ambiguousMember__3, com.trolltech.qt.core.Qt.ShortcutContext context__4)" doc="/**
<p>Constructs a QShortcut object for the <i>parent</i> widget. The shortcut operates on its parent, listening for QShortcutEvents that match the <i>key</i> sequence. Depending on the ambiguity of the event, the shortcut will call the <i>member</i> function, or the <i>ambiguousMember</i> function, if the key press was in the shortcut's <i>context</i>.</p>

*/"/>
    <method name="public final boolean autoRepeat()"/>
    <method name="public final com.trolltech.qt.core.Qt.ShortcutContext context()"/>
    <method name="public final int id()" doc="/**
<p>Returns the shortcut's ID.</p>

*/"/>
    <method name="public final boolean isEnabled()"/>
    <method name="public final com.trolltech.qt.gui.QKeySequence key()"/>
    <method name="public final com.trolltech.qt.gui.QWidget parentWidget()" doc="/**
<p>Returns the shortcut's parent widget.</p>

*/"/>
    <method name="public final void setAutoRepeat(boolean on__0)"/>
    <method name="public final void setContext(com.trolltech.qt.core.Qt.ShortcutContext context__0)"/>
    <method name="public final void setEnabled(boolean enable__0)"/>
    <method name="public final void setKey(com.trolltech.qt.gui.QKeySequence key__0)"/>
    <method name="public final void setWhatsThis(java.lang.String text__0)"/>
    <method name="public final java.lang.String whatsThis()"/>
    <method name="public boolean event(com.trolltech.qt.core.QEvent e__0)"/>
</class>
