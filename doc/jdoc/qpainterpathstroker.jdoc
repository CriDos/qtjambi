<class name="QPainterPathStroker" doc="/**
<p>The QPainterPathStroker class is used to generate fillable outlines for a given painter path.</p>
<p>By calling the createStroke() function, passing a given QPainterPath as argument, a new painter path representing the outline of the given path is created. The newly created painter path can then be filled to draw the original painter path's outline.</p>
<p>You can control the various design aspects (width, cap styles, join styles and dash pattern) of the outlining using the following functions:</p>
<ul>
<li>setWidth()</li>
<li>setCapStyle()</li>
<li>setJoinStyle()</li>
<li>setDashPattern()</li>
</ul>
<p>The setDashPattern() function accepts both a Qt::PenStyle object and a vector representation of the pattern as argument.</p>
<p>In addition you can specify a curve's threshold, controlling the granularity with which a curve is drawn, using the setCurveThreshold() fucntion. The default threshold is a well adjusted value (0.25), and normally you should not need to modify it. However, you can make the curve's appearance smoother by decreasing its value.</p>
<p>You can also control the miter limit for the generated outline using the setMiterLimit() function. The miter limit describes how far from each join the miter join can extend. The limit is specified in the units of width so the pixelwise miter limit will be <tt>miterlimit * width</tt>. This value is only used if the join style is Qt::MiterJoin.</p>
<p>The painter path generated by the createStroke() function should only be used for outlining the given painter path. Otherwise it may cause unexpected behavior. Generated outlines also require the Qt::WindingFill rule which is set by default.</p>

*/">
    <method name="public QPainterPathStroker()" doc="/**
<p>Creates a new stroker.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.PenCapStyle capStyle()" doc="/**
<p>Returns the cap style of the generated outlines.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QPainterPath createStroke(com.trolltech.qt.gui.QPainterPath path__0)" doc="/**
<p>Generates a new path that is a fillable area representing the outline of the given <i>path</i>.</p>
<p>The various design aspects of the outline are based on the stroker's properties: width(), capStyle(), joinStyle(), dashPattern(), curveThreshold() and miterLimit().</p>
<p>The generated path should only be used for outlining the given painter path. Otherwise it may cause unexpected behavior. Generated outlines also require the Qt::WindingFill rule which is set by default.</p>

*/"/>
    <method name="public final double curveThreshold()" doc="/**
<p>Returns the curve flattening threshold for the generated outlines.</p>

*/"/>
    <method name="public final java.util.List&lt;java.lang.Double&gt; dashPattern()" doc="/**
<p>Returns the dash pattern for the generated outlines.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.PenJoinStyle joinStyle()" doc="/**
<p>Returns the join style of the generated outlines.</p>

*/"/>
    <method name="public final double miterLimit()" doc="/**
<p>Returns the miter limit for the generated outlines.</p>

*/"/>
    <method name="public final void setCapStyle(com.trolltech.qt.core.Qt.PenCapStyle style__0)" doc="/**
<p>Sets the cap style of the generated outlines to <i>style</i>. If a dash pattern is set, each segment of the pattern is subject to the cap <i>style</i>.</p>

*/"/>
    <method name="public final void setCurveThreshold(double threshold__0)" doc="/**
<p>Specifies the curve flattening <i>threshold</i>, controlling the granularity with which the generated outlines' curve is drawn.</p>
<p>The default threshold is a well adjusted value (0.25), and normally you should not need to modify it. However, you can make the curve's appearance smoother by decreasing its value.</p>

*/"/>
    <method name="public final void setDashPattern(com.trolltech.qt.core.Qt.PenStyle arg__0)" doc="/**
<p>Sets the dash pattern for the generated outlines to <i>style</i>.</p>

*/"/>
    <method name="public final void setJoinStyle(com.trolltech.qt.core.Qt.PenJoinStyle style__0)" doc="/**
<p>Sets the join style of the generated outlines to <i>style</i>.</p>

*/"/>
    <method name="public final void setMiterLimit(double length__0)" doc="/**
<p>Sets the miter limit of the generated outlines to <i>limit</i>.</p>
<p>The miter limit describes how far from each join the miter join can extend. The limit is specified in units of the currently set width. So the pixelwise miter limit will be <tt>miterlimit * width</tt>.</p>
<p>This value is only used if the join style is Qt::MiterJoin.</p>

*/"/>
    <method name="public final void setWidth(double width__0)" doc="/**
<p>Sets the width of the generated outline painter path to <i>width</i>.</p>
<p>The generated outlines will extend approximately 50% of <i>width</i> to each side of the given input path's original outline.</p>

*/"/>
    <method name="public final double width()" doc="/**
<p>Returns the width of the generated outlines.</p>

*/"/>
</class>
