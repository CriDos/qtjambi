<class name="QProgressBar" doc="/**
<p>The QProgressBar widget provides a horizontal or vertical progress bar.</p>
<p>A progress bar is used to give the user an indication of the progress of an operation and to reassure them that the application is still running.</p>
<p>The progress bar uses the concept of <i>steps</i>. You set it up by specifying the minumum and maximum possible step values, and it will display the percentage of steps that have been completed when you later give it the current step value. The percentage is calculated by dividing the progress (value() - minimum()) divided by maximum() - minimum().</p>
<p>You can specify the minimum and maximum number of steps with setMinimum() and setMaximum. The current number of steps is set with setValue(). The progress bar can be rewound to the beginning with reset().</p>
<p>If minimum and maximum both are set to 0, the bar shows a busy indicator instead of a percentage of steps. This is useful, for example, when using QFtp or QHttp to download items when they are unable to determine the size of the item being downloaded.</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td><font color=&quote;red&quote;>[Missing image macintosh-progressbar.png]</font></td><td>A progress bar shown in the Macintosh widget style.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td><font color=&quote;red&quote;>[Missing image windowsxp-progressbar.png]</font></td><td>A progress bar shown in the Windows XP widget style.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td><font color=&quote;red&quote;>[Missing image plastique-progressbar.png]</font></td><td>A progress bar shown in the Plastique widget style.</td></tr>
</table></p>

*/">
    <method name="public QProgressBar(com.trolltech.qt.gui.QWidget parent__0)" doc="/**
<p>Constructs a progress bar with the given <i>parent</i>.</p>
<p>By default, the minimum step value is set to 0, and the maximum to 100.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.Alignment alignment()"/>
    <method name="public final java.lang.String format()"/>
    <method name="public final boolean invertedAppearance()"/>
    <method name="public final boolean isTextVisible()"/>
    <method name="public final int maximum()"/>
    <method name="public final int minimum()"/>
    <method name="public final com.trolltech.qt.core.Qt.Orientation orientation()"/>
    <method name="public final void reset()" doc="/**
<p>Reset the progress bar. The progress bar &quot;rewinds&quot; and shows no progress.</p>

*/"/>
    <method name="public final void setAlignment(com.trolltech.qt.core.Qt.Alignment alignment__0)"/>
    <method name="public final void setFormat(java.lang.String format__0)"/>
    <method name="public final void setInvertedAppearance(boolean invert__0)"/>
    <method name="public final void setMaximum(int maximum__0)"/>
    <method name="public final void setMinimum(int minimum__0)"/>
    <method name="public final void setOrientation(com.trolltech.qt.core.Qt.Orientation arg__0)"/>
    <method name="public final void setRange(int minimum__0, int maximum__1)" doc="/**
<p>Sets the progressbar's minimum and maximum values to <i>minimum</i> and <i>maximum</i> respectively.</p>
<p>If <i>maximum</i> is smaller than <i>minimum</i>, <i>minimum</i> becomes the only legal value.</p>
<p>If the current value falls outside the new range, the progressbar is reset with reset().</p>

*/"/>
    <method name="public final void setTextDirection(com.trolltech.qt.gui.QProgressBar.Direction textDirection__0)"/>
    <method name="public final void setTextVisible(boolean visible__0)"/>
    <method name="public final void setValue(int value__0)"/>
    <method name="public final com.trolltech.qt.gui.QProgressBar.Direction textDirection()"/>
    <method name="public final int value()"/>
    <method name="public boolean event(com.trolltech.qt.core.QEvent e__0)"/>
    <method name="public com.trolltech.qt.core.QSize minimumSizeHint()"/>
    <method name="protected void paintEvent(com.trolltech.qt.gui.QPaintEvent arg__0)"/>
    <method name="public com.trolltech.qt.core.QSize sizeHint()"/>
    <method name="public java.lang.String text()"/>
    <enum name="Direction" doc="/**
<p>Specifies the reading direction of the text for vertical progress bars.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The text is rotated 90 degrees clockwise.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The text is rotated 90 degrees counter-clockwise.</td></tr>
</table></p>

*/"/>
</class>
