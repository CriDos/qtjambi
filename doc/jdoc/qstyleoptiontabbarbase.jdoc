<class name="QStyleOptionTabBarBase" doc="/**
<p>The QStyleOptionTabBarBase class is used to describe the base of a tabbar, i.e. the part that the tabbar usually overlaps with.</p>
<p>QStyleOptionTabBarBase contains all the information that QStyle functions need to draw the tab bar base. Note that this is only drawn for a standalone QTabBar (one that isn't part of a QTabWidget).</p>
<p>For performance reasons, the access to the member variables is direct (i.e., using the <tt>.</tt> or <tt>-&gt;</tt> operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</p>
<p>For an example demonstrating how style options can be used, see the Styles example.</p>

*/">
    <method name="public QStyleOptionTabBarBase(com.trolltech.qt.gui.QStyleOptionTabBarBase other__0)" doc="/**
<p>Constructs a copy of <i>other</i>.</p>

*/"/>
    <method name="public QStyleOptionTabBarBase()" doc="/**
<p>Construct a QStyleOptionTabBarBase, initializing the members vaiables to their default values.</p>

*/"/>
    <method name="protected QStyleOptionTabBarBase(int version__0)"/>
    <enum name="StyleOptionVersion" doc="/**
<p>This enum is used to hold information about the version of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>1</td></tr>
</table></p>
<p>The version is used by QStyleOption subclasses to implement extensions without breaking compatibility. If you use qstyleoption_cast(), you normally don't need to check it.</p>

*/"/>
    <enum name="StyleOptionType" doc="/**
<p>This enum is used to hold information about the type of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The type of style option provided (SO_TabBarBase for this class).</td></tr>
</table></p>
<p>The type is used internally by QStyleOption, its subclasses, and qstyleoption_cast() to determine the type of style option. In general you do not need to worry about this unless you want to create your own QStyleOption subclass and your own styles.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QRect selectedTabRect()" doc="/**
<p>the rectangle containing the selected tab</p>
<p>This rectangle is contained within the tabBarRect. The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</p>

*/"/>
    <method name="public final void setSelectedTabRect(com.trolltech.qt.core.QRect selectedTabRect)" doc="/**
<p>the rectangle containing the selected tab</p>
<p>This rectangle is contained within the tabBarRect. The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTabBar.Shape shape()" doc="/**
<p>the shape of the tabbar</p>
<p>The default value is QTabBar::RoundedNorth.</p>

*/"/>
    <method name="public final void setShape(com.trolltech.qt.gui.QTabBar.Shape shape)" doc="/**
<p>the shape of the tabbar</p>
<p>The default value is QTabBar::RoundedNorth.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QRect tabBarRect()" doc="/**
<p>the rectangle containing all the tabs</p>
<p>The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</p>

*/"/>
    <method name="public final void setTabBarRect(com.trolltech.qt.core.QRect tabBarRect)" doc="/**
<p>the rectangle containing all the tabs</p>
<p>The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</p>

*/"/>
</class>
