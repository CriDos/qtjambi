<class name="QUuid" doc="/**
<p>The QUuid class stores a Universally Unique Identifier (UUID).</p>
<p>For objects or declarations that must be uniquely identified, UUIDs (also known as GUIDs) are widely used in order to assign a fixed and easy to compare value to the object or declaration. The 128-bit value of a UUID is generated by an algorithm that guarantees that the value is unique.</p>
<p>In Qt, UUIDs are wrapped by the QUuid struct which provides convenience functions for handling UUIDs. Most platforms provide a tool to generate new UUIDs, for example, <tt>uuidgen</tt> and <tt>guidgen</tt>.</p>
<p>UUIDs generated by QUuid, are based on the <tt>Random</tt> version of the <tt>DCE</tt> (Distributed Computing Environment) standard.</p>
<p>UUIDs can be constructed from numeric values or from strings, or using the static createUuid() function. They can be converted to a string with toString(). UUIDs have a variant() and a version(), and null UUIDs return true from isNull().</p>

*/">
    <method name="public QUuid()" doc="/**
<p>Creates the null UUID {00000000-0000-0000-0000-000000000000}.</p>

*/"/>
    <method name="public QUuid(java.lang.String arg__0)" doc="/**
<p>Creates a QUuid object from the string <i>text</i>. The function can only convert a string in the format {HHHHHHHH-HHHH-HHHH-HHHH-HHHHHHHHHHHH} (where 'H' stands for a hex digit). If the conversion fails a null UUID is created.</p>

*/"/>
    <method name="public QUuid(com.trolltech.qt.QNativePointer arg__0)"/>
    <method name="public QUuid(int l__0, char w1__1, char w2__2, byte b1__3, byte b2__4, byte b3__5, byte b4__6, byte b5__7, byte b6__8, byte b7__9, byte b8__10)" doc="/**
<p>Creates a UUID with the value specified by the parameters, <i>l</i>, <i>w1</i>, <i>w2</i>, <i>b1</i>, <i>b2</i>, <i>b3</i>, <i>b4</i>, <i>b5</i>, <i>b6</i>, <i>b7</i>, <i>b8</i>.</p>
<p>Example:</p>
<pre><span class=&quote;comment&quote;>    // {67C8770B-44F1-410A-AB9A-F9B5446F13EE}</span>
    QUuid IID_MyInterface(0x67c8770b, 0x44f1, 0x410a, 0xab, 0x9a, 0xf9, 0xb5, 0x44, 0x6f, 0x13, 0xee)</pre>

*/"/>
    <method name="public final boolean isNull()" doc="/**
<p>Returns true if this is the null UUID {00000000-0000-0000-0000-000000000000}; otherwise returns false.</p>

*/"/>
    <method name="public final java.lang.String toString()" doc="/**
<p>Returns the string representation of the uuid.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QUuid.Variant variant()" doc="/**
<p>Returns the variant of the UUID. The null UUID is considered to be of an unknown variant.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QUuid.Version version()" doc="/**
<p>Returns the version of the UUID, if the UUID is of the DCE variant; otherwise returns VerUnknown.</p>

*/"/>
    <method name="public native static com.trolltech.qt.core.QUuid createUuid()" doc="/**
<p>Returns a new UUID of <tt>DCE</tt> variant, and <tt>Random</tt> type. The UUIDs generated are based on the platform specific pseudo-random generator, which is usually not a cryptographic-quality random number generator. Therefore, a UUID is not guaranteed to be unique cross application instances.</p>
<p>On Windows, the new UUID is extremely likely to be unique on the same or any other system, networked or not.</p>

*/"/>
    <enum name="Variant" doc="/**
<p>This enum defines the variant of the UUID, which is the scheme which defines the layout of the 128-bits value.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Variant is unknown</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Reserved for NCS (Network Computing System) backward compatibility</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Distributed Computing Environment, the scheme used by QUuid</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Reserved for Microsoft backward compatibility (GUID)</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Reserved for future definition</td></tr>
</table></p>

*/"/>
    <enum name="Version" doc="/**
<p>This enum defines the version of the UUID.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Version is unknown</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Time-based, by using timestamp, clock sequence, and MAC network card address (if available) for the node sections</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>DCE Security version, with embedded POSIX UUIDs</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Name-based, by using values from a name for all sections</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Random-based, by using random numbers for all sections</td></tr>
</table></p>

*/"/>
    <method name="public final int data1()"/>
    <method name="public final void setData1(int data1)"/>
    <method name="public final char data2()"/>
    <method name="public final void setData2(char data2)"/>
    <method name="public final char data3()"/>
    <method name="public final void setData3(char data3)"/>
</class>
