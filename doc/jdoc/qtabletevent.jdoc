<class name="QTabletEvent" doc="/**
<p>The QTabletEvent class contains parameters that describe a Tablet event.</p>
<p>Tablet Events are generated from a Wacom tablet. Most of the time you will want to deal with events from the tablet as if they were events from a mouse; for example, you would retrieve the cursor position with x(), y(), pos(), globalX(), globalY(), and globalPos(). In some situations you may wish to retrieve the extra information provided by the tablet device driver; for example, you might want to do subpixeling with higher resolution coordinates or you may want to adjust color brightness based on pressure. QTabletEvent allows you to read the pressure(), the xTilt(), and yTilt(), as well as the type of device being used with device() (see TabletDevice). It can also give you the minimum and maximum values for each device's pressure and high resolution coordinates.</p>
<p>A tablet event contains a special accept flag that indicates whether the receiver wants the event. You should call QTabletEvent::accept() if you handle the tablet event; otherwise it will be sent to the parent widget. The exception are TabletEnterProximity and TabletLeaveProximity events, these are only sent to QApplication and don't check whether or not they are accepted.</p>
<p>The QWidget::setEnabled() function can be used to enable or disable mouse and keyboard events for a widget.</p>
<p>The event handler QWidget::tabletEvent() receives all three types of tablet events. Qt will first send a tabletEvent then, if it is not accepted, it will send a mouse event. This allows applications that don't utilize tablets to use a tablet like a mouse, while also enabling those who want to use both tablets and mouses differently.</p>

*/">
    <method name="public QTabletEvent(com.trolltech.qt.core.QEvent.Type t__0, com.trolltech.qt.core.QPoint pos__1, com.trolltech.qt.core.QPoint globalPos__2, com.trolltech.qt.core.QPointF hiResGlobalPos__3, int device__4, int pointerType__5, double pressure__6, int xTilt__7, int yTilt__8, double tangentialPressure__9, double rotation__10, int z__11, com.trolltech.qt.core.Qt.KeyboardModifiers keyState__12, long uniqueID__13)" doc="/**
<p>Construct a tablet event of the given <i>type</i>.</p>
<p>The <i>pos</i> parameter indicates where the event occurred in the widget; <i>globalPos</i> is the corresponding position in absolute coordinates. The <i>hiResGlobalPos</i> contains a high resolution measurement of the position.</p>
<p><i>pressure</i> contains the pressure exerted on the <i>device</i>.</p>
<p><i>pointerType</i> describes the type of pen that is being used.</p>
<p><i>xTilt</i> and <i>yTilt</i> contain the device's degree of tilt from the x and y axes respectively.</p>
<p><i>keyState</i> specifies which keyboard modifiers are pressed (e.g., <b>Ctrl</b>).</p>
<p>The <i>uniqueID</i> parameter contains the unique ID for the current device.</p>
<p>The <i>z</i> parameter contains the coordinate of the device on the tablet, this is usually given by a wheel on 4D mouse. If the device does not support a Z-axis, pass zero here.</p>
<p>The <i>tangentialPressure</i> paramater contins the tangential pressure of an air brush. If the device does not support tangential pressure, pass 0 here.</p>
<p><i>rotation</i> contains the device's rotation in degrees. 4D mice support rotation. If the device does not support rotation, pass 0 here.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTabletEvent.TabletDevice device()" doc="/**
<p>Returns the type of device that generated the event.</p>
<p>This is useful if you want to know which end of a pen was used to draw on the tablet.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QPoint globalPos()" doc="/**
<p>Returns the global position of the device <i>at the time of the event</i>. This is important on asynchronous windows systems like X11; whenever you move your widgets around in response to mouse events, globalPos() can differ significantly from the current position QCursor::pos().</p>

*/"/>
    <method name="public final int globalX()" doc="/**
<p>Returns the global x position of the mouse pointer at the time of the event.</p>

*/"/>
    <method name="public final int globalY()" doc="/**
<p>Returns the global y position of the tablet device at the time of the event.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QPointF hiResGlobalPos()" doc="/**
<p>The high precision coordinates delivered from the tablet expressed. Sub pixeling information is in the fractional part of the QPointF.</p>

*/"/>
    <method name="public final double hiResGlobalX()" doc="/**
<p>The high precision x position of the tablet device.</p>

*/"/>
    <method name="public final double hiResGlobalY()" doc="/**
<p>The high precision y position of the tablet device.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTabletEvent.PointerType pointerType()" doc="/**
<p>Returns the type of point that generated the event.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QPoint pos()" doc="/**
<p>Returns the position of the device, relative to the widget that received the event.</p>
<p>If you move widgets around in response to mouse events, use globalPos() instead of this function.</p>

*/"/>
    <method name="public final double pressure()" doc="/**
<p>Returns the pressure for the device. 0.0 indicates that the stylus is not on the tablet, 1.0 indicates the maximum amount of pressure for the stylus.</p>

*/"/>
    <method name="public final double rotation()" doc="/**
<p>Returns the rotation of the current device in degress. This is usually given by a 4D Mouse. If the device doesn't support rotation this value is always 0.0.</p>

*/"/>
    <method name="public final double tangentialPressure()" doc="/**
<p>Returns the tangential pressure for the device. This is typically given by a finger wheel on an airbrush tool. The range is from -1.0 to 1.0. 0.0 indicates a neutral position. Current airbrushes can only move in the positive direction from the neutrual position. If the device does not support tangential pressure, this value is always 0.0.</p>

*/"/>
    <method name="public final long uniqueId()" doc="/**
<p>Returns a unique ID for the current device, making it possible to differentiate between multiple devices being used at the same time on the tablet.</p>
<p>Support of this feature is dependent on the tablet.</p>
<p>Values for the same device may vary from OS to OS.</p>
<p>Later versions of the Wacom driver for Linux will now report the ID information. If you have a tablet that supports unique ID and are not getting the information on Linux, consider upgrading your driver.</p>
<p>As of Qt 4.2, the unique ID is the same regardless of the orientation of the pen. Earlier versions would report a different value when using the eraser-end versus the pen-end of the stylus on some OS's.</p>

*/"/>
    <method name="public final int x()" doc="/**
<p>Returns the x position of the device, relative to the widget that received the event.</p>

*/"/>
    <method name="public final int xTilt()" doc="/**
<p>Returns the angle between the device (a pen, for example) and the perpendicular in the direction of the x axis. Positive values are towards the tablet's physical right. The angle is in the range -60 to +60 degrees.</p>
<p align=&quote;center&quote;><font color=&quote;red&quote;>[Missing image qtabletevent-tilt.png]</font></p>
*/"/>
    <method name="public final int y()" doc="/**
<p>Returns the y position of the device, relative to the widget that received the event.</p>

*/"/>
    <method name="public final int yTilt()" doc="/**
<p>Returns the angle between the device (a pen, for example) and the perpendicular in the direction of the y axis. Positive values are towards the bottom of the tablet. The angle is within the range -60 to +60 degrees.</p>

*/"/>
    <method name="public final int z()" doc="/**
<p>Returns the z position of the device. Typically this is represented by a wheel on a 4D Mouse. If the device does not support a Z-axis, this value is always zero. This is &lt;em&gt;not&lt;/em&gt; the same as pressure.</p>

*/"/>
    <enum name="TabletDevice" doc="/**
<p>This enum defines what type of device is generating the event.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>No device, or an unknown device.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A Puck (a device that is similar to a flat mouse with a transparent circle with cross-hairs).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A Stylus.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>An airbrush</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A 4D Mouse.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A special stylus that also knows about rotation (a 6D stylus).</td></tr>
</table></p>

*/"/>
    <enum name="PointerType" doc="/**
<p>This enum defines what type of point is generating the event.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>An unknown device.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Tip end of a stylus-like device (the narrow end of the pen).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Any puck-like device.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Eraser end of a stylus-like device (the broad end of the pen).</td></tr>
</table></p>

*/"/>
    <method name="protected final long mUnique()"/>
    <method name="protected final void setMUnique(long mUnique)"/>
    <method name="protected final com.trolltech.qt.QNativePointer mExtra()"/>
    <method name="protected final void setMExtra(com.trolltech.qt.QNativePointer mExtra)"/>
    <method name="protected final com.trolltech.qt.core.QPointF mHiResGlobalPos()"/>
    <method name="protected final void setMHiResGlobalPos(com.trolltech.qt.core.QPointF mHiResGlobalPos)"/>
</class>
