<class name="QWheelEvent" doc="/**
<p>The QWheelEvent class contains parameters that describe a wheel event.</p>
<p>Wheel events are sent to the widget under the mouse cursor, but if that widget does not handle the event they are sent to the focus widget. The rotation distance is provided by delta(). The functions pos() and globalPos() return the mouse cursor's location at the time of the event.</p>
<p>A wheel event contains a special accept flag that indicates whether the receiver wants the event. You should call ignore() if you do not handle the wheel event; this ensures that it will be sent to the parent widget.</p>
<p>The QWidget::setEnabled() function can be used to enable or disable mouse and keyboard events for a widget.</p>
<p>The event handler QWidget::wheelEvent() receives wheel events.</p>

*/">
    <method name="public QWheelEvent(com.trolltech.qt.core.QPoint pos__0, int delta__1, com.trolltech.qt.core.Qt.MouseButtons buttons__2, com.trolltech.qt.core.Qt.KeyboardModifiers modifiers__3, com.trolltech.qt.core.Qt.Orientation orient__4)" doc="/**
<p>Constructs a wheel event object.</p>
<p>The position, <i>pos</i>, is the location of the mouse cursor within the widget. The globalPos() is initialized to QCursor::pos() which is usually, but not always, correct. Use the other constructor if you need to specify the global position explicitly.</p>
<p>The <i>buttons</i> describe the state of the mouse buttons at the time of the event, <i>delta</i> contains the rotation distance, <i>modifiers</i> holds the keyboard modifier flags at the time of the event, and <i>orient</i> holds the wheel's orientation.</p>

*/"/>
    <method name="public QWheelEvent(com.trolltech.qt.core.QPoint pos__0, com.trolltech.qt.core.QPoint globalPos__1, int delta__2, com.trolltech.qt.core.Qt.MouseButtons buttons__3, com.trolltech.qt.core.Qt.KeyboardModifiers modifiers__4, com.trolltech.qt.core.Qt.Orientation orient__5)" doc="/**
<p>Constructs a wheel event object.</p>
<p>The <i>pos</i> provides the location of the mouse cursor within the widget. The position in global coordinates is specified by <i>globalPos</i>. <i>delta</i> contains the rotation distance, <i>modifiers</i> holds the keyboard modifier flags at the time of the event, and <i>orient</i> holds the wheel's orientation.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.MouseButtons buttons()" doc="/**
<p>Returns the mouse state when the event occurred.</p>

*/"/>
    <method name="public final int delta()" doc="/**
<p>Returns the distance that the wheel is rotated, in eights of a degree. A positive value indicates that the wheel was rotated forwards away from the user; a negative value indicates that the wheel was rotated backwards toward the user.</p>
<p>Most mouse types work in steps of 15 degrees, in which case the delta value is a multiple of 120 (== 15 * 8).</p>
<p>Example:</p>
<pre>    void MyWidget::wheelEvent(QWheelEvent *event)
    {
        int numDegrees = event-&gt;delta() / 8;
        int numSteps = numDegrees / 15;

        if (event-&gt;orientation() == Qt::Horizontal) {
            scrollHorizontally(numSteps);
        } else {
            scrollVertically(numSteps);
        }
    }</pre>

*/"/>
    <method name="public final com.trolltech.qt.core.QPoint globalPos()" doc="/**
<p>Returns the global position of the mouse pointer <i>at the time of the event</i>. This is important on asynchronous window systems such as X11; whenever you move your widgets around in response to mouse events, globalPos() can differ a lot from the current cursor position returned by QCursor::pos().</p>

*/"/>
    <method name="public final int globalX()" doc="/**
<p>Returns the global x position of the mouse cursor at the time of the event.</p>

*/"/>
    <method name="public final int globalY()" doc="/**
<p>Returns the global y position of the mouse cursor at the time of the event.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.Orientation orientation()" doc="/**
<p>Returns the wheel's orientation.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QPoint pos()" doc="/**
<p>Returns the position of the mouse cursor relative to the widget that received the event.</p>
<p>If you move your widgets around in response to mouse events, use globalPos() instead of this function.</p>

*/"/>
    <method name="public final int x()" doc="/**
<p>Returns the x position of the mouse cursor, relative to the widget that received the event.</p>

*/"/>
    <method name="public final int y()" doc="/**
<p>Returns the y position of the mouse cursor, relative to the widget that received the event.</p>

*/"/>
    <method name="protected final com.trolltech.qt.core.QPoint g()"/>
    <method name="protected final void setG(com.trolltech.qt.core.QPoint g)"/>
    <method name="protected final com.trolltech.qt.core.Qt.MouseButtons mouseState()"/>
    <method name="protected final void setMouseState(com.trolltech.qt.core.Qt.MouseButtons mouseState)"/>
    <method name="protected final com.trolltech.qt.core.Qt.Orientation o()"/>
    <method name="protected final void setO(com.trolltech.qt.core.Qt.Orientation o)"/>
    <method name="protected final com.trolltech.qt.core.QPoint p()"/>
    <method name="protected final void setP(com.trolltech.qt.core.QPoint p)"/>
</class>
