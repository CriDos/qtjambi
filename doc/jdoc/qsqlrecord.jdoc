<class name="QSqlRecord" doc="/**
<p>The QSqlRecord class encapsulates a database record.</p>
<p>The QSqlRecord class encapsulates the functionality and characteristics of a database record (usually a row in a table or view within the database). QSqlRecord supports adding and removing fields as well as setting and retrieving field values.</p>
<p>The values of a record's fields' can be set by name or position with setValue(); if you want to set a field to null use setNull(). To find the position of a field by name use indexOf(), and to find the name of a field at a particular position use fieldName(). Use field() to retrieve a QSqlField object for a given field. Use contains() to see if the record contains a particular field name.</p>
<p>When queries are generated to be executed on the database only those fields for which isGenerated() is true are included in the generated SQL.</p>
<p>A record can have fields added with append() or insert(), replaced with replace(), and removed with remove(). All the fields can be removed with clear(). The number of fields is given by count(); all their values can be cleared (to null) using clearValues().</p>

*/">
    <method name="public QSqlRecord()" doc="/**
<p>Constructs an empty record.</p>

*/"/>
    <method name="public QSqlRecord(com.trolltech.qt.sql.QSqlRecord other__0)" doc="/**
<p>Constructs a copy of <i>other</i>.</p>
<p>QSqlRecord is implicitly shared. This means you can make copies of a record in constant time.</p>

*/"/>
    <method name="public final void clear()" doc="/**
<p>Removes all the record's fields.</p>

*/"/>
    <method name="public final void clearValues()" doc="/**
<p>Clears the value of all fields in the record and sets each field to null.</p>

*/"/>
    <method name="public final boolean contains(java.lang.String name__0)" doc="/**
<p>Returns true if there is a field in the record called <i>name</i>; otherwise returns false.</p>

*/"/>
    <method name="public final int count()" doc="/**
<p>Returns the number of fields in the record.</p>

*/"/>
    <method name="public final com.trolltech.qt.sql.QSqlField field(int i__0)" doc="/**
<p>Returns the field at position <i>index</i>. If the position is out of range, an empty field is returned.</p>

*/"/>
    <method name="public final com.trolltech.qt.sql.QSqlField field(java.lang.String name__0)" doc="/**
<p>Returns the field called <i>name</i>.</p>

*/"/>
    <method name="public final java.lang.String fieldName(int i__0)" doc="/**
<p>Returns the name of the field at position <i>index</i>. If the field does not exist, an empty string is returned.</p>

*/"/>
    <method name="public final int indexOf(java.lang.String name__0)" doc="/**
<p>Returns the position of the field called <i>name</i> within the record, or -1 if it cannot be found. Field names are not case-sensitive. If more than one field matches, the first one is returned.</p>

*/"/>
    <method name="public final void insert(int pos__0, com.trolltech.qt.sql.QSqlField field__1)" doc="/**
<p>Inserts the field <i>field</i> at position <i>pos</i> in the record.</p>

*/"/>
    <method name="public final boolean isEmpty()" doc="/**
<p>Returns true if there are no fields in the record; otherwise returns false.</p>

*/"/>
    <method name="public final boolean isGenerated(java.lang.String name__0)" doc="/**
<p>Returns true if the record has a field called <i>name</i> and this field is to be generated (the default); otherwise returns false.</p>

*/"/>
    <method name="public final boolean isGenerated(int i__0)" doc="/**
<p>Returns true if the record has a field at position <i>index</i> and this field is to be generated (the default); otherwise returns false.</p>

*/"/>
    <method name="public final boolean isNull(int i__0)" doc="/**
<p>Returns true if the field <i>index</i> is null or if there is no field at position <i>index</i>; otherwise returns false.</p>

*/"/>
    <method name="public final boolean isNull(java.lang.String name__0)" doc="/**
<p>Returns true if the field called <i>name</i> is null or if there is no field called <i>name</i>; otherwise returns false.</p>

*/"/>
    <method name="public final void remove(int pos__0)" doc="/**
<p>Removes the field at position <i>pos</i>. If <i>pos</i> is out of range, nothing happens.</p>

*/"/>
    <method name="public final void replace(int pos__0, com.trolltech.qt.sql.QSqlField field__1)" doc="/**
<p>Replaces the field at position <i>pos</i> with the given <i>field</i>. If <i>pos</i> is out of range, nothing happens.</p>

*/"/>
    <method name="public final void setGenerated(java.lang.String name__0, boolean generated__1)" doc="/**
<p>Sets the generated flag for the field called <i>name</i> to <i>generated</i>. If the field does not exist, nothing happens. Only fields that have <i>generated</i> set to true are included in the SQL that is generated by QSqlQueryModel for example.</p>

*/"/>
    <method name="public final void setGenerated(int i__0, boolean generated__1)" doc="/**
<p>Sets the generated flag for the field <i>index</i> to <i>generated</i>.</p>

*/"/>
    <method name="public final void setNull(java.lang.String name__0)" doc="/**
<p>Sets the value of the field called <i>name</i> to null. If the field does not exist, nothing happens.</p>

*/"/>
    <method name="public final void setNull(int i__0)" doc="/**
<p>Sets the value of field <i>index</i> to null. If the field does not exist, nothing happens.</p>

*/"/>
    <method name="public final void setValue(int i__0, java.lang.Object val__1)" doc="/**
<p>Sets the value of the field at position <i>index</i> to <i>val</i>. If the field does not exist, nothing happens.</p>

*/"/>
    <method name="public final void setValue(java.lang.String name__0, java.lang.Object val__1)" doc="/**
<p>Sets the value of the field called <i>name</i> to <i>val</i>. If the field does not exist, nothing happens.</p>

*/"/>
    <method name="public final java.lang.Object value(int i__0)" doc="/**
<p>Returns the value of the field located at position <i>index</i> in the record. If <i>index</i> is out of bounds, an invalid QVariant is returned.</p>

*/"/>
    <method name="public final java.lang.Object value(java.lang.String name__0)" doc="/**
<p>Returns the value of the field called <i>name</i> in the record. If field <i>name</i> does not exist an invalid variant is returned.</p>

*/"/>
    <method name="public void append(com.trolltech.qt.sql.QSqlField field__0)" doc="/**
<p>Append a copy of field <i>field</i> to the end of the record.</p>

*/"/>
</class>
