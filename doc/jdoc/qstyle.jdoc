<class name="QStyle" doc="/**
<p>The QStyle class is an abstract base class that encapsulates the look and feel of a GUI.</p>
<p>Qt contains a set of QStyle subclasses that emulate the styles of the different platforms supported by Qt (QWindowsStyle, QMacStyle, QMotifStyle, etc.). By default, these styles are built into the QtGui library. Styles can also be made available as plugins.</p>
<p>Qt's built-in widgets use QStyle to perform nearly all of their drawing, ensuring that they look exactly like the equivalent native widgets. The diagram below shows a QComboBox in six different styles.</p>
<p align=&quote;center&quote;><font color=&quote;red&quote;>[Missing image qstyle-comboboxes.png]</font></p><p>Topics:</p>
<ul><li><a href=&quote;#setting-a-style&quote;>Setting a Style</a></li>
<li><a href=&quote;#developing-style-aware-custom-widgets&quote;>Developing Style-Aware Custom Widgets</a></li>
<li><a href=&quote;#creating-a-custom-style&quote;>Creating a Custom Style</a></li>
<li><a href=&quote;#using-a-custom-style&quote;>Using a Custom Style</a></li>
<li><a href=&quote;#right-to-left-desktops&quote;>Right-to-Left Desktops</a></li>
</ul>
<a name=&quote;setting-a-style&quote;></a>
<h3>Setting a Style</h3>
<p>The style of the entire application can be set using the QApplication::setStyle() function. It can also be specified by the user of the application, using the <tt>-style</tt> command-line option:</p>
<pre>    ./myapplication -style motif</pre>
<p>If no style is specified, Qt will choose the most appropriate style for the user's platform or desktop environment.</p>
<p>A style can also be set on an individual widget using the QWidget::setStyle() function.</p>
<a name=&quote;developing-style-aware-custom-widgets&quote;></a>
<h3>Developing Style-Aware Custom Widgets</h3>
<p>If you are developing custom widgets and want them to look good on all platforms, you can use QStyle functions to perform parts of the widget drawing, such as drawItemText(), drawItemPixmap(), drawPrimitive(), drawControl(), and drawComplexControl().</p>
<p>Most QStyle draw functions take four arguments:</p>
<ul>
<li>an enum value specifying which graphical element to draw</li>
<li>a QStyleOption specifying how and where to render that element</li>
<li>a QPainter that should be used to draw the element</li>
<li>a QWidget on which the drawing is performed (optional)</li>
</ul>
<p>For example, if you want to draw a focus rectangle on your widget, you can write:</p>
<pre>    void MyWidget::paintEvent(QPaintEvent * <span class=&quote;comment&quote;>/* event */</span>)
    {
        QPainter painter(this);

        QStyleOptionFocusRect option;
        option.initFrom(this);
        option.backgroundColor = palette().color(QPalette::Background);

        style()-&gt;drawPrimitive(QStyle::PE_FrameFocusRect, &amp;option, &amp;painter, this);
    }</pre>
<p>QStyle gets all the information it needs to render the graphical element from QStyleOption. The widget is passed as the last argument in case the style needs it to perform special effects (such as animated default buttons on Mac OS X), but it isn't mandatory. In fact, you can use QStyle to draw on any paint device, not just widgets, by setting the QPainter properly.</p>
<p>QStyleOption has various subclasses for the various types of graphical elements that can be drawn. For example, PE_FrameFocusRect expects a QStyleOptionFocusRect argument.</p>
<p>To ensure that drawing operations are as fast as possible, QStyleOption and its subclasses have public data members. See the QStyleOption class documentation for details on how to use it.</p>
<p>For convenience, Qt provides the QStylePainter class, which combines a QStyle, a QPainter, and a QWidget. This makes it possible to write</p>
<pre>        QStylePainter painter(this);
        ...
        painter.drawPrimitive(QStyle::PE_FrameFocusRect, option);</pre>
<p>instead of</p>
<pre>        QPainter painter(this);
        ...
        style()-&gt;drawPrimitive(QStyle::PE_FrameFocusRect, &amp;option, &amp;painter, this);</pre>
<a name=&quote;creating-a-custom-style&quote;></a>
<h3>Creating a Custom Style</h3>
<p>If you want to design a custom look and feel for your application, the first step is to pick one of the base styles provided with Qt to build your custom style from. The choice will depend on which existing style resembles your style the most.</p>
<p>Depending on which parts of the base style you want to change, you must reimplement the functions that are used to draw those parts of the interface. To illustrate this, we will modify the look of the spin box arrows drawn by QWindowsStyle. The arrows are <i>primitive elements</i> that are drawn by the drawPrimitive() function, so we need to reimplement that function. We need the following class declaration:</p>
<pre>    class CustomStyle : public QWindowsStyle
    {
        Q_OBJECT

    public:
        CustomStyle()
        ~CustomStyle() {}

        void drawPrimitive(PrimitiveElement element, const QStyleOption *option,
                           QPainter *painter, const QWidget *widget) const;
    };</pre>
<p>To draw its up and down arrows, QSpinBox uses the PE_IndicatorSpinUp and PE_IndicatorSpinDown primitive elements. Here's how to reimplement the drawPrimitive() function to draw them differently:</p>
<pre>    void CustomStyle::drawPrimitive(PrimitiveElement element, const QStyleOption *option,
                                    QPainter *painter, const QWidget *widget) const
    {
        if (element == PE_IndicatorSpinUp || element == PE_IndicatorSpinDown) {
            QPolygon points(3);
            int x = option-&gt;rect.x();
            int y = option-&gt;rect.y();
            int w = option-&gt;rect.width() / 2;
            int h = option-&gt;rect.height() / 2;
            x += (option-&gt;rect.width() - w) / 2;
            y += (option-&gt;rect.height() - h) / 2;

            if (element == PE_IndicatorSpinUp) {
                points[0] = QPoint(x, y + h);
                points[1] = QPoint(x + w, y + h);
                points[2] = QPoint(x + w / 2, y);
            } else { <span class=&quote;comment&quote;>// PE_SpinBoxDown</span>
                points[0] = QPoint(x, y);
                points[1] = QPoint(x + w, y);
                points[2] = QPoint(x + w / 2, y + h);
            }

            if (option-&gt;state &amp; State_Enabled) {
                painter-&gt;setPen(option-&gt;palette.mid().color());
                painter-&gt;setBrush(option-&gt;palette.buttonText());
            } else {
                painter-&gt;setPen(option-&gt;palette.buttonText().color());
                painter-&gt;setBrush(option-&gt;palette.mid());
            }
            painter-&gt;drawPolygon(points);
        } else {
            QWindowsStyle::drawPrimitive(element, option, painter, widget);
        }
    }</pre>
<p>Notice that we don't use the <tt>widget</tt> argument, except to pass it on to the QWindowStyle::drawPrimitive() function. As mentioned earlier, the information about what is to be drawn and how it should be drawn is specified by a QStyleOption object, so there is no need to ask the widget.</p>
<p>If you need to use the <tt>widget</tt> argument to obtain additional information, be careful to ensure that it isn't 0 and that it is of the correct type before using it. For example:</p>
<pre>        QSpinBox *spinBox = qobject_cast&lt;QSpinBox *&gt;(widget);
        if (spinBox) {
        ...
        }</pre>
<p>When implementing a custom style, you cannot assume that the widget is a QSpinBox just because the enum value is called PE_IndicatorSpinUp or PE_IndicatorSpinUp.</p>
<p>The documentation for the Styles example covers this topic in more detail.</p>
<a name=&quote;using-a-custom-style&quote;></a>
<h3>Using a Custom Style</h3>
<p>There are several ways of using a custom style in a Qt application. The simplest way is call the QApplication::setStyle() static function before creating the QApplication object:</p>
<pre>    #include &lt;QtGui&gt;

    #include &quot;customstyle.h&quot;

    int main(int argc, char *argv[])
    {
        QApplication::setStyle(new CustomStyle);
        QApplication app(argc, argv);
        QSpinBox spinBox;
        spinBox.show();
        return app.exec();
    }</pre>
<p>You can call QApplication::setStyle() at any time, but by calling it before the constructor, you ensure that the user's preference, set using the <tt>-style</tt> command-line option, is respected.</p>
<p>You may want to make your style available for use in other applications, some of which may not be yours and are not available for you to recompile. The Qt Plugin system makes it possible to create styles as plugins. Styles created as plugins are loaded as shared objects at runtime by Qt itself. Please refer to the Qt Plugin documentation for more information on how to go about creating a style plugin.</p>
<p>Compile your plugin and put it into Qt's <tt>plugins/styles</tt> directory. We now have a pluggable style that Qt can load automatically. To use your new style with existing applications, simply start the application with the following argument:</p>
<pre>    ./myapplication -style custom</pre>
<p>The application will use the look and feel from the custom style you implemented.</p>
<a name=&quote;right-to-left-desktops&quote;></a>
<h3>Right-to-Left Desktops</h3>
<p>Languages written from right to left (such as Arabic and Hebrew) usually also mirror the whole layout of widgets, and require the light to come from the screen's top-right corner instead of top-left.</p>
<p>If you create a custom style, you should take special care when drawing asymmetric elements to make sure that they also look correct in a mirrored layout. An easy way to test your styles is to run applications with the <tt>-reverse</tt> command-line option or to call QApplication::setLayoutDirection() in your <tt>main()</tt> function.</p>
<p>Here are some things to keep in mind when making a style work well in a right-to-left environment:</p>
<ul>
<li>subControlRect() and subElementRect() return rectangles in screen coordinates</li>
<li>QStyleOption::direction indicates in which direction the item should be drawn in</li>
<li>If a style is not right-to-left aware it will display items as if it were left-to-right</li>
<li>visualRect(), visualPos(), and visualAlignment() are helpful functions that will translate from logical to screen representations.</li>
<li>alignedRect() will return a logical rect aligned for the current direction</li>
</ul>

*/">
    <method name="public QStyle()" doc="/**
<p>Constructs a style object.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QIcon standardIcon(com.trolltech.qt.gui.QStyle.StandardPixmap standardIcon__0, com.trolltech.qt.QNativePointer option__1, com.trolltech.qt.gui.QWidget widget__2)" doc="/**
<p>Returns an icon for the given <i>standardIcon</i>.</p>
<p>The <i>standardIcon</i> is a standard pixmap which can follow some existing GUI style or guideline. The <i>option</i> argument can be used to pass extra information required when defining the appropiate icon. The <i>widget</i> argument is optional and can also be used to aid the determination of the icon.</p>
<p><b>Warning:</b> Because of binary compatibility constraints, this function is not virtual. If you want to provide your own icons in a QStyle subclass, reimplement the standardIconImplementation() slot in your subclass instead. The standardIcon() function will dynamically detect the slot and call it.</p>

*/"/>
    <method name="public abstract void drawComplexControl(com.trolltech.qt.gui.QStyle.ComplexControl cc__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.gui.QPainter p__2, com.trolltech.qt.gui.QWidget widget__3)" doc="/**
<p>Draws the given <i>control</i> using the provided <i>painter</i> with the style options specified by <i>option</i>.</p>
<p>The <i>widget</i> argument is optional and can be used as aid in drawing the control.</p>
<p>The <i>option</i> parameter is a pointer to a QStyleOptionComplex object that can be casted to the correct subclass using the qstyleoption_cast() function. Note that the <tt>rect</tt> member of the specified <i>option</i> must be in logical coordinates. Reimplementations of this function should use visualRect() to change the logical coordinates into screen coordinates before calling the drawPrimitive() or drawControl() function.</p>
<p>The table below is listing the complex control elements and their associated style option subclass. The style options contain all the parameters required to draw the controls, including QStyleOption::state which holds the style flags that are used when drawing. The table also describes which flags that are set when casting the given <i>option</i> to the appropiate subclass.</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Complex Control</th><th>QStyleOptionComplex Subclass</th><th>Style Flag</th><th>Remark</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;2&quote;>CC_SpinBox</td><td rowspan=&quote;2&quote;>QStyleOptionSpinBox</td><td>State_Enabled</td><td>Set if the spin box is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the spin box has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;2&quote;>CC_ComboBox</td><td rowspan=&quote;2&quote;>QStyleOptionComboBox</td><td>State_Enabled</td><td>Set if the combobox is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the combobox has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;2&quote;>CC_ScrollBar</td><td rowspan=&quote;2&quote;>QStyleOptionSlider</td><td>State_Enabled</td><td>Set if the scroll bar is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the scroll bar has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;2&quote;>CC_Slider</td><td rowspan=&quote;2&quote;>QStyleOptionSlider</td><td>State_Enabled</td><td>Set if the slider is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the slider has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;2&quote;>CC_Dial</td><td rowspan=&quote;2&quote;>QStyleOptionSlider</td><td>State_Enabled</td><td>Set if the dial is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the dial has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;6&quote;>CC_ToolButton</td><td rowspan=&quote;6&quote;>QStyleOptionToolButton</td><td>State_Enabled</td><td>Set if the tool button is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the tool button has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_DownArrow</td><td>Set if the tool button is down (i.e., a mouse button or the space bar is pressed).</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_On</td><td>Set if the tool button is a toggle button and is toggled on.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_AutoRaise</td><td>Set if the tool button has auto-raise enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Raised</td><td>Set if the button is not down, not on, and doesn't contain the mouse when auto-raise is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CC_TitleBar</td><td>QStyleOptionTitleBar</td><td>State_Enabled</td><td>Set if the title bar is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>CC_Q3ListView</td><td>QStyleOptionQ3ListView</td><td>State_Enabled</td><td>Set if the list view is enabled.</td></tr>
</table></p>

*/"/>
    <method name="public abstract void drawControl(com.trolltech.qt.gui.QStyle.ControlElement element__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.gui.QPainter p__2, com.trolltech.qt.gui.QWidget w__3)" doc="/**
<p>Draws the given <i>element</i> with the provided <i>painter</i> with the style options specified by <i>option</i>.</p>
<p>The <i>widget</i> argument is optional and can be used as aid in drawing the control. The <i>option</i> parameter is a pointer to a QStyleOption object that can be casted to the correct subclass using the qstyleoption_cast() function.</p>
<p>The table below is listing the control elements and their associated style option subclass. The style options contain all the parameters required to draw the controls, including QStyleOption::state which holds the style flags that are used when drawing. The table also describes which flags that are set when casting the given option to the appropiate subclass.</p>
<p>Note that if a control element is not listed here, it is because it uses a plain QStyleOption object.</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Control Element</th><th>QStyleOption Subclass</th><th>Style Flag</th><th>Remark</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;5&quote;>CE_MenuItem, CE_MenuBarItem</td><td rowspan=&quote;5&quote;>QStyleOptionMenuItem</td><td>State_Selected</td><td>The menu item is currently selected item.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Enabled</td><td>The item is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_DownArrow</td><td>Indicates that a scroll down arrow should be drawn.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_UpArrow</td><td>Indicates that a scroll up arrow should be drawn</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_HasFocus</td><td>Set if the menubar has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td rowspan=&quote;5&quote;>CE_PushButton, CE_PushButtonBevel, CE_PushButtonLabel</td><td rowspan=&quote;5&quote;>QStyleOptionButton</td><td>State_Enabled</td><td>Set if the button is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_HasFocus</td><td>Set if the button has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Raised</td><td>Set if the button is not down, not on and not flat.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_On</td><td>Set if the button is a toggle button and is toggled on.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Sunken</td><td>Set if the button is down (i.e., the mouse button or the space bar is pressed on the button).</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;6&quote;>CE_RadioButton, CE_RadioButtonLabel, CE_CheckBox, CE_CheckBoxLabel</td><td rowspan=&quote;6&quote;>QStyleOptionButton</td><td>State_Enabled</td><td>Set if the button is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the button has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_On</td><td>Set if the button is checked.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Off</td><td>Set if the button is not checked.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_NoChange</td><td>Set if the button is in the NoChange state.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Sunken</td><td>Set if the button is down (i.e., the mouse button or the space bar is pressed on the button).</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;2&quote;>CE_ProgressBarContents, CE_ProgressBarLabel, CE_ProgressBarGroove</td><td rowspan=&quote;2&quote;>QStyleOptionProgressBar</td><td>State_Enabled</td><td>Set if the progressbar is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_HasFocus</td><td>Set if the progressbar has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CE_Header, CE_HeaderSection, CE_HeaderLabel</td><td>QStyleOptionHeader</td><td></td><td></td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td rowspan=&quote;7&quote;>CE_ToolButtonLabel</td><td rowspan=&quote;7&quote;>QStyleOptionToolButton</td><td>State_Enabled</td><td>Set if the tool button is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_HasFocus</td><td>Set if the tool button has input focus.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Sunken</td><td>Set if the tool button is down (i.e., a mouse button or the space bar is pressed).</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_On</td><td>Set if the tool button is a toggle button and is toggled on.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_AutoRaise</td><td>Set if the tool button has auto-raise enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_MouseOver</td><td>Set if the mouse pointer is over the tool button.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Raised</td><td>Set if the button is not down and is not on.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CE_ToolBoxTab</td><td>QStyleOptionToolBox</td><td>State_Selected</td><td>The tab is the currently selected tab.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td rowspan=&quote;3&quote;>CE_HeaderSection</td><td rowspan=&quote;3&quote;>QStyleOptionHeader</td><td>State_Sunken</td><td>Indicates that the section is pressed.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_UpArrow</td><td>Indicates that the sort indicator should be pointing up.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_DownArrow</td><td>Indicates that the sort indicator should be pointing down.</td></tr>
</table></p>

*/"/>
    <method name="public void drawItemPixmap(com.trolltech.qt.gui.QPainter painter__0, com.trolltech.qt.core.QRect rect__1, int alignment__2, com.trolltech.qt.gui.QPixmap pixmap__3)" doc="/**
<p>Draws the given <i>pixmap</i> in the specified <i>rectangle</i>, according to the specified <i>alignment</i>, using the provided <i>painter</i>.</p>

*/"/>
    <method name="public void drawItemText(com.trolltech.qt.gui.QPainter painter__0, com.trolltech.qt.core.QRect rect__1, int flags__2, com.trolltech.qt.gui.QPalette pal__3, boolean enabled__4, java.lang.String text__5, com.trolltech.qt.gui.QPalette.ColorRole textRole__6)" doc="/**
<p>Draws the given <i>text</i> in the specified <i>rectangle</i> using the provided <i>painter</i> and <i>palette</i>.</p>
<p>The text is drawn using the painter's pen, and aligned and wrapped according to the specified <i>alignment</i>. If an explicit <i>textRole</i> is specified, the text is drawn using the <i>palette</i>'s color for the given role. The <i>enabled</i> parameter indicates whether or not the item is enabled; when reimplementing this function, the <i>enabled</i> parameter should influence how the item is drawn.</p>

*/"/>
    <method name="public abstract void drawPrimitive(com.trolltech.qt.gui.QStyle.PrimitiveElement pe__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.gui.QPainter p__2, com.trolltech.qt.gui.QWidget w__3)" doc="/**
<p>Draws the given primitive <i>element</i> with the provided <i>painter</i> using the style options specified by <i>option</i>.</p>
<p>The <i>widget</i> argument is optional and may contain a widget that may aid in drawing the primitive element.</p>
<p>The table below is listing the primitive elements and their associated style option subclasses. The style options contain all the parameters required to draw the elements, including QStyleOption::state which holds the style flags that are used when drawing. The table also describes which flags that are set when casting the given option to the appropiate subclass.</p>
<p>Note that if a primitive element is not listed here, it is because it uses a plain QStyleOption object.</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Primitive Element</th><th>QStyleOption Subclass</th><th>Style Flag</th><th>Remark</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PE_FrameFocusRect</td><td>QStyleOptionFocusRect</td><td>State_FocusAtBorder</td><td>Whether the focus is is at the border or inside the widget.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td rowspan=&quote;2&quote;>PE_IndicatorCheckBox</td><td rowspan=&quote;2&quote;>QStyleOptionButton</td><td>State_NoChange</td><td>Indicates a &quot;tri-state&quot; checkbox.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_On</td><td>Indicates the indicator is checked.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PE_IndicatorRadioButton</td><td>QStyleOptionButton</td><td>State_On</td><td>Indicates that a radio button is selected.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td rowspan=&quote;3&quote;>PE_Q3CheckListExclusiveIndicator, PE_Q3CheckListIndicator</td><td rowspan=&quote;3&quote;>QStyleOptionQ3ListView</td><td>State_On</td><td>Indicates whether or not the controller is selected.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_NoChange</td><td>Indicates a &quot;tri-state&quot; controller.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_Enabled</td><td>Indicates the controller is enabled.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td rowspan=&quote;4&quote;>PE_IndicatorBranch</td><td rowspan=&quote;4&quote;>QStyleOption</td><td>State_Children</td><td>Indicates that the control for expanding the tree to show child items, should be drawn.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_Item</td><td>Indicates that a horizontal branch (to show a child item), should be drawn.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>State_Open</td><td>Indicates that the tree branch is expanded.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>State_Sibling</td><td>Indicates that a vertical line (to show a sibling item), should be drawn.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PE_IndicatorHeaderArrow</td><td>QStyleOptionHeader</td><td>State_UpArrow</td><td>Indicates that the arrow should be drawn up; otherwise it should be down.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PE_FrameGroupBox, PE_Frame, PE_FrameLineEdit, PE_FrameMenu, PE_FrameDockWidget</td><td>QStyleOptionFrame</td><td>State_Sunken</td><td>Indicates that the Frame should be sunken.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PE_IndicatorToolBarHandle</td><td>QStyleOption</td><td>State_Horizontal</td><td>Indicates that the window handle is horizontal instead of vertical.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PE_Q3DockWindowSeparator</td><td>QStyleOption</td><td>State_Horizontal</td><td>Indicates that the separator is horizontal instead of vertical.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PE_IndicatorSpinPlus, PE_IndicatorSpinMinus, PE_IndicatorSpinUp, PE_IndicatorSpinDown,</td><td>QStyleOptionSpinBox</td><td>State_Sunken</td><td>Indicates that the button is pressed.</td></tr>
</table></p>

*/"/>
    <method name="public abstract com.trolltech.qt.gui.QPixmap generatedIconPixmap(com.trolltech.qt.gui.QIcon.Mode iconMode__0, com.trolltech.qt.gui.QPixmap pixmap__1, com.trolltech.qt.QNativePointer opt__2)" doc="/**
<p>Returns a copy of the given <i>pixmap</i>, styled to conform to the specified <i>iconMode</i> and taking into account the palette specified by <i>option</i>.</p>
<p>The <i>option</i> parameter can pass extra information, but it must contain a palette.</p>
<p>Note that not all pixmaps will conform, in which case the returned pixmap is a plain copy.</p>

*/"/>
    <method name="public abstract int hitTestComplexControl(com.trolltech.qt.gui.QStyle.ComplexControl cc__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.core.QPoint pt__2, com.trolltech.qt.gui.QWidget widget__3)" doc="/**
<p>Returns the sub control at the given <i>position</i> in the given complex <i>control</i> (with the style options specified by <i>option</i>).</p>
<p>Note that the <i>position</i> is expressed in screen coordinates.</p>
<p>The <i>option</i> argument is a pointer to a QStyleOptionComplex object (or one of its subclasses). The object can be casted to the appropriate type using the qstyleoption_cast() function. See drawComplexControl() for details. The <i>widget</i> argument is optional and can contain additional information for the function.</p>

*/"/>
    <method name="public com.trolltech.qt.core.QRect itemPixmapRect(com.trolltech.qt.core.QRect r__0, int flags__1, com.trolltech.qt.gui.QPixmap pixmap__2)" doc="/**
<p>Returns the area within the given <i>rectangle</i> in which to draw the specified <i>pixmap</i> according to the defined <i>alignment</i>.</p>

*/"/>
    <method name="public com.trolltech.qt.core.QRect itemTextRect(com.trolltech.qt.gui.QFontMetrics fm__0, com.trolltech.qt.core.QRect r__1, int flags__2, boolean enabled__3, java.lang.String text__4)" doc="/**
<p>Returns the area within the given <i>rectangle</i> in which to draw the provided <i>text</i> according to the specified font <i>metrics</i> and <i>alignment</i>. The <i>enabled</i> parameter indicates whether or not the associated item is enabled.</p>
<p>If the given <i>rectangle</i> is larger than the area needed to render the <i>text</i>, the rectangle that is returned will be offset within <i>rectangle</i> according to the specified <i>alignment</i>. For example, if <i>alignment</i> is Qt::AlignCenter, the returned rectangle will be centered within <i>rectangle</i>. If the given <i>rectangle</i> is smaller than the area needed, the returned rectangle will be the smallest rectangle large enough to render the <i>text</i>.</p>

*/"/>
    <method name="public abstract int pixelMetric(com.trolltech.qt.gui.QStyle.PixelMetric metric__0, com.trolltech.qt.QNativePointer option__1, com.trolltech.qt.gui.QWidget widget__2)" doc="/**
<p>Returns the value of the given pixel <i>metric</i>.</p>
<p>The specified <i>option</i> and <i>widget</i> can be used for calculating the metric. In general, the <i>widget</i> argument is not used. The <i>option</i> can be cast to the appropriate type using the qstyleoption_cast() function. Note that the <i>option</i> may be zero even for PixelMetrics that can make use of it. See the table below for the appropriate <i>option</i> casts:</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Pixel Metric</th><th>QStyleOption Subclass</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PM_SliderControlThickness</td><td>QStyleOptionSlider</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PM_SliderLength</td><td>QStyleOptionSlider</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PM_SliderTickmarkOffset</td><td>QStyleOptionSlider</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PM_SliderSpaceAvailable</td><td>QStyleOptionSlider</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PM_ScrollBarExtent</td><td>QStyleOptionSlider</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PM_TabBarTabOverlap</td><td>QStyleOptionTab</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PM_TabBarTabHSpace</td><td>QStyleOptionTab</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PM_TabBarTabVSpace</td><td>QStyleOptionTab</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>PM_TabBarBaseHeight</td><td>QStyleOptionTab</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PM_TabBarBaseOverlap</td><td>QStyleOptionTab</td></tr>
</table></p>

*/"/>
    <method name="public void polish(com.trolltech.qt.QNativePointer arg__0)" doc="/**
<p>Changes the <i>palette</i> acoording to style specific requirements for color palettes (if any).</p>

*/"/>
    <method name="public void polish(com.trolltech.qt.gui.QApplication arg__0)" doc="/**
<p>Late initialization of the given <i>application</i> object.</p>

*/"/>
    <method name="public void polish(com.trolltech.qt.gui.QWidget arg__0)" doc="/**
<p>Initializes the appearance of the given <i>widget</i>.</p>
<p>This function is called for every widget at some point after it has been fully created but just <i>before</i> it is shown for the very first time.</p>
<p>Note that the default implementation does nothing. Reasonable actions in this function might be to call the QWidget::setBackgroundMode() function for the widget. Do not use the function to set, for example, the geometry; reimplementing this function do provide a back-door through which the appearance of a widget can be changed, but with Qt 4.0's style engine there is rarely necessary to implement this function; reimplement the drawItemPixmap(), drawItemText(), drawPrimitive(), etc. instead.</p>
<p>The QWidget::inherits() function may provide enough information to allow class-specific customizations. But because new QStyle subclasses are expected to work reasonably with all current and <i>future</i> widgets, limited use of hard-coded customization is recommended.</p>

*/"/>
    <method name="public abstract com.trolltech.qt.core.QSize sizeFromContents(com.trolltech.qt.gui.QStyle.ContentsType ct__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.core.QSize contentsSize__2, com.trolltech.qt.gui.QWidget w__3)" doc="/**
<p>Returns the size of the element described by the specified <i>option</i> and <i>type</i>, based on the provided <i>contentsSize</i>.</p>
<p>The <i>option</i> argument is a pointer to a QStyleOption or one of its subclasses. The <i>option</i> can be cast to the appropriate type using the qstyleoption_cast() function. The <i>widget</i> is an optional argument and can contain extra information used for calculating the size.</p>
<p>See the table below for the appropriate <i>option</i> casts:</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Contents Type</th><th>QStyleOption Subclass</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CT_PushButton</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>CT_CheckBox</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CT_RadioButton</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>CT_ToolButton</td><td>QStyleOptionToolButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CT_ComboBox</td><td>QStyleOptionComboBox</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>CT_Splitter</td><td>QStyleOption</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CT_Q3DockWindow</td><td>QStyleOptionQ3DockWindow</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>CT_ProgressBar</td><td>QStyleOptionProgressBar</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>CT_MenuItem</td><td>QStyleOptionMenuItem</td></tr>
</table></p>

*/"/>
    <method name="protected com.trolltech.qt.gui.QIcon standardIconImplementation(com.trolltech.qt.gui.QStyle.StandardPixmap standardIcon__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.gui.QWidget widget__2)" doc="/**
<p>Returns an icon for the given <i>standardIcon</i>.</p>
<p>Reimplement this slot to provide your own icons in a QStyle subclass; because of binary compatibility constraints, the standardIcon() function (introduced in Qt 4.1) is not virtual. Instead, standardIcon() will dynamically detect and call <i>this</i> slot. The default implementation simply calls the standardPixmap() function with the given parameters.</p>
<p>The <i>standardIcon</i> is a standard pixmap which can follow some existing GUI style or guideline. The <i>option</i> argument can be used to pass extra information required when defining the appropiate icon. The <i>widget</i> argument is optional and can also be used to aid the determination of the icon.</p>

*/"/>
    <method name="public com.trolltech.qt.gui.QPalette standardPalette()" doc="/**
<p>Returns the style's standard palette.</p>
<p>Note that on systems that support system colors, the style's standard palette is not used.</p>

*/"/>
    <method name="public abstract com.trolltech.qt.gui.QPixmap standardPixmap(com.trolltech.qt.gui.QStyle.StandardPixmap standardPixmap__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.gui.QWidget widget__2)" doc="/**
<p>Returns a pixmap for the given <i>standardPixmap</i>.</p>
<p>A standard pixmap is a pixmap that can follow some existing GUI style or guideline. The <i>option</i> argument can be used to pass extra information required when defining the appropiate pixmap. The <i>widget</i> argument is optional and can also be used to aid the determination of the pixmap.</p>

*/"/>
    <method name="public abstract int styleHint(com.trolltech.qt.gui.QStyle.StyleHint stylehint__0, com.trolltech.qt.QNativePointer opt__1, com.trolltech.qt.gui.QWidget widget__2, com.trolltech.qt.gui.QStyleHintReturn returnData__3)" doc="/**
<p>Returns an integer representing the specified style <i>hint</i> for the given <i>widget</i> described by the provided style <i>option</i>.</p>
<p>Note that currently, the <i>returnData</i> and <i>widget</i> parameters are not used; they are provided for future enhancement. In addition, the <i>option</i> parameter is used only in case of the SH_ComboBox_Popup, SH_ComboBox_LayoutDirection, and SH_GroupBox_TextLabelColor style hints.</p>

*/"/>
    <method name="public abstract com.trolltech.qt.core.QRect subControlRect(com.trolltech.qt.gui.QStyle.ComplexControl cc__0, com.trolltech.qt.QNativePointer opt__1, int sc__2, com.trolltech.qt.gui.QWidget widget__3)" doc="/**
<p>Returns the rectangle containing the specified <i>subControl</i> of the given complex <i>control</i> (with the style specified by <i>option</i>). The rectangle is defined in screen coordinates.</p>
<p>The <i>option</i> argument is a pointer to QStyleOptionComplex or one of its subclasses, and can be casted to the appropiate type using the qstyleoption_cast() function. See drawComplexControl() for details. The <i>widget</i> is optional and can contain additional information for the function.</p>

*/"/>
    <method name="public abstract com.trolltech.qt.core.QRect subElementRect(com.trolltech.qt.gui.QStyle.SubElement subElement__0, com.trolltech.qt.QNativePointer option__1, com.trolltech.qt.gui.QWidget widget__2)" doc="/**
<p>Returns the sub-area for the given <i>element</i> as described in the provided style <i>option</i>. The returned rectangle is defined in screen coordinates.</p>
<p>The <i>widget</i> argument is optional and can be used to aid determining the area. The QStyleOption object can be casted to the appropriate type using the qstyleoption_cast() function. See the table below for the appropriate <i>option</i> casts:</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Sub Element</th><th>QStyleOption Subclass</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>SE_PushButtonContents</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>SE_PushButtonFocusRect</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>SE_CheckBoxIndicator</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>SE_CheckBoxContents</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>SE_CheckBoxFocusRect</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>SE_RadioButtonIndicator</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>SE_RadioButtonContents</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>SE_RadioButtonFocusRect</td><td>QStyleOptionButton</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>SE_ComboBoxFocusRect</td><td>QStyleOptionComboBox</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>SE_Q3DockWindowHandleRect</td><td>QStyleOptionQ3DockWindow</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>SE_ProgressBarGroove</td><td>QStyleOptionProgressBar</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>SE_ProgressBarContents</td><td>QStyleOptionProgressBar</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>SE_ProgressBarLabel</td><td>QStyleOptionProgressBar</td></tr>
</table></p>

*/"/>
    <method name="public void unpolish(com.trolltech.qt.gui.QWidget arg__0)" doc="/**
<p>Uninitialize the given <i>widget</i>'s appearance.</p>
<p>This function is the counterpart to polish(). It is called for every polished widget whenever the style is dynamically changed; the former style has to unpolish its settings before the new style can polish them again.</p>

*/"/>
    <method name="public void unpolish(com.trolltech.qt.gui.QApplication arg__0)" doc="/**
<p>Uninitialize the given <i>application</i>.</p>

*/"/>
    <method name="public final static com.trolltech.qt.core.QRect alignedRect(com.trolltech.qt.core.Qt.LayoutDirection direction__0, com.trolltech.qt.core.Qt.Alignment alignment__1, com.trolltech.qt.core.QSize size__2, com.trolltech.qt.core.QRect rectangle__3)" doc="/**
<p>Returns a new rectangle of the specifed <i>size</i> that is aligned to the given <i>rectangle</i> according to the specified <i>alignment</i> and <i>direction</i>.</p>

*/"/>
    <method name="public native static int sliderPositionFromValue(int min__0, int max__1, int val__2, int space__3, boolean upsideDown__4)" doc="/**
<p>Converts the given <i>logicalValue</i> to a pixel position. The <i>min</i> parameter maps to 0, <i>max</i> maps to <i>span</i> and other values are distributed evenly in-between.</p>
<p>This function can handle the entire integer range without overflow, providing that <i>span</i> is less than 4096.</p>
<p>By default, this function assumes that the maximum value is on the right for horizontal items and on the bottom for vertical items. Set the <i>upsideDown</i> parameter to true to reverse this behavior.</p>

*/"/>
    <method name="public native static int sliderValueFromPosition(int min__0, int max__1, int pos__2, int space__3, boolean upsideDown__4)" doc="/**
<p>Converts the given pixel <i>position</i> to a logical value. 0 maps to the <i>min</i> parameter, <i>span</i> maps to <i>max</i> and other values are distributed evenly in-between.</p>
<p>This function can handle the entire integer range without overflow.</p>
<p>By default, this function assumes that the maximum value is on the right for horizontal items and on the bottom for vertical items. Set the <i>upsideDown</i> parameter to true to reverse this behavior.</p>

*/"/>
    <method name="public final static com.trolltech.qt.core.Qt.Alignment visualAlignment(com.trolltech.qt.core.Qt.LayoutDirection direction__0, com.trolltech.qt.core.Qt.Alignment alignment__1)" doc="/**
<p>Transforms an <i>alignment</i> of Qt::AlignLeft or Qt::AlignRight without Qt::AlignAbsolute into Qt::AlignLeft or Qt::AlignRight with Qt::AlignAbsolute according to the layout <i>direction</i>. The other alignment flags are left untouched.</p>
<p>If no horizontal alignment was specified, the function returns the default alignment for the given layout <i>direction</i>.</p>
<p>QWidget::layoutDirection</p>

*/"/>
    <method name="public final static com.trolltech.qt.core.QPoint visualPos(com.trolltech.qt.core.Qt.LayoutDirection direction__0, com.trolltech.qt.core.QRect boundingRect__1, com.trolltech.qt.core.QPoint logicalPos__2)" doc="/**
<p>Returns the given <i>logicalPosition</i> converted to screen coordinates based on the specified <i>direction</i>. The <i>boundingRectangle</i> is used when performing the translation.</p>

*/"/>
    <method name="public final static com.trolltech.qt.core.QRect visualRect(com.trolltech.qt.core.Qt.LayoutDirection direction__0, com.trolltech.qt.core.QRect boundingRect__1, com.trolltech.qt.core.QRect logicalRect__2)" doc="/**
<p>Returns the given <i>logicalRectangle</i> converted to screen coordinates based on the specified <i>direction</i>. The <i>boundingRectangle</i> is used when performing the translation.</p>
<p>This function is provided to support right-to-left desktops, and is typically used in implementations of the subControlRect() function.</p>

*/"/>
    <enum name="PixelMetric" doc="/**
<p>This enum describes the various available pixel metrics. A pixel metric is a style dependent size represented by a single pixel value.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Amount of whitespace between push button labels and the frame.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of the default-button indicator frame.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of the menu button indicator proportional to the widget height.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Horizontal contents shift of a button when the button is down.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Vertical contents shift of a button when the button is down.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Default frame width (usually 2).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame width of a spin box, defaults to PM_DefaultFrameWidth.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame width of a combo box, defaults to PM_DefaultFrameWidth.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame width of an MDI window.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a minimized MDI window.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The maximum allowed distance between the mouse and a slider when dragging. Exceeding the specified distance will cause the slider to jump back to the original position; a value of -1 disables this behavior.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a vertical scroll bar and the height of a horizontal scroll bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The minimum height of a vertical scroll bar's slider and the minimum width of a horizontal scroll bar's slider.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Total slider thickness.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Thickness of the slider handle.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Length of the slider.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The offset between the tickmarks and the slider.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The available space for the slider to move.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a separator in a horizontal dock window and the height of a separator in a vertical dock window.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of the handle in a horizontal dock window and the height of the handle in a vertical dock window.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame width of a dock window.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Margin of the dock window title.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame width of a menubar, defaults to PM_DefaultFrameWidth.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spacing between menubar items.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spacing between menubar items and left/right of bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spacing between menubar items and top/bottom of bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of the frame around toolbars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a toolbar handle in a horizontal toolbar and the height of the handle in a vertical toolbar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spacing between the toolbar frame and the items.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spacing between toolbar items.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a toolbar separator in a horizontal toolbar and the height of a separator in a vertical toolbar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a toolbar extension button in a horizontal toolbar and the height of the button in a vertical toolbar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Number of pixels the tabs should overlap.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Extra space added to the tab width.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Extra space added to the tab height.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Height of the area between the tab bar and the tab pages.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Number of pixels the tab bar overlaps the tab bar base.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Horizontal pixel shift when a tab is selected.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Vertical pixel shift when a tab is selected.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a chunk in a progress bar indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a splitter.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Height of the title bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a check box indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Height of a checkbox indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Width of a radio button indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Height of a radio button indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Border width (applied on all sides) for a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Additional border (used on left and right) for a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Additional border (used for bottom and top) for a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Height of the scroller area in a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Height of the scroller area in a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Height of a tear off area in a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The frame width for the menu on the desktop.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area (width/height) of the checkbox/radio button in a Q3CheckListItem.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area (width/height) of the controller in a Q3CheckListItem.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Distance between buttons in a dialog buttons widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Minimum width of a button in a dialog buttons widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Minimum height of a button in a dialog buttons widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The size of the sort indicator in a header.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The size of the resize grip in a header.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The size of the margin between the sort indicator and the text.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The height of the optional spin box slider.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The margin for a QProgressDialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default margin for children in a layout.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The spacing between the buttons in a progress dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Default tool bar icon size</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Default small icon size</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Default large icon size</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Horizontal margin that the focus frame will outset the widget by.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Vertical margin that the focus frame will outset the widget by.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default size for icons in an icon view.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default size for icons in a list view.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The frame width for a tool tip label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The spacing between a check box and its label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default icon size for a tab bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The size of a size grip.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The size of the standard icons in a message box</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default size of button icons</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom pixel metrics. Custom values must be greater than this value.</td></tr>
</table></p>

*/"/>
    <enum name="SubControl" doc="/**
<p>This enum describes the available sub controls. A subcontrol is a control element within a complex control (ComplexControl).</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Special value that matches no other sub control.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar add line (i.e., down/right arrow); see also QScrollBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar sub line (i.e., up/left arrow).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar add page (i.e., page down).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar sub page (i.e., page up).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar first line (i.e., home).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar last line (i.e., end).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar slider handle.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Special sub-control which contains the area in which the slider handle may move.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spin widget up/increase; see also QSpinBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spin widget down/decrease.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spin widget frame.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Spin widget edit field.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Combobox edit field; see also QComboBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Combobox arrow button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Combobox frame.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The reference rectangle for the combobox popup. Used to calculate the position of the popup.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Special sub-control which contains the area in which the slider handle may move.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Slider handle.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Slider tickmarks.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Tool button (see also QToolButton).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Sub-control for opening a popup menu in a tool button; see also Q3PopupMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>System menu button (i.e., restore, close, etc.).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Minimize button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Maximize button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Close button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Window title label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Normal (restore) button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Shade button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Unshade button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Context Help button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The list view area.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Expand item (i.e., show/hide child items).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The handle of the dial (i.e. what you use to control the dial).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The groove for the dial.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The tickmarks for the dial.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The frame of a group box.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The title of a group box.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The optional check box of a group box.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The group box contents.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Special value that matches all sub-controls.</td></tr>
</table></p>

*/"/>
    <enum name="StandardPixmap" doc="/**
<p>This enum describes the available standard pixmaps. A standard pixmap is a pixmap that can follow some existing GUI style or guideline.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Minimize button on title bars (e.g., in QWorkspace).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Menu button on a title bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Maximize button on title bars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Close button on title bars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Normal (restore) button on title bars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Shade button on title bars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Unshade button on title bars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The Context help button on title bars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;information&quot; icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;warning&quot; icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;critical&quot; icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;question&quot; icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;desktop&quot; icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;trash&quot; icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;My computer&quot; icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The floppy icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The harddrive icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The CD icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The DVD icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The network icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The open directory icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The closed directory icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The directory icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The link to directory icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The file icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The link to file icon.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;start&quot; icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;end&quot; icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;parent directory&quot; icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The &quot;create new folder&quot; icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The detailed view icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The file info icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The contents view icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The list view icon in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The back arrow in a file dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Close button on dock windows (see also QDockWidget).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Extension button for horizontal toolbars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Extension button for vertical toolbars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard OK button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Cancel button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Help button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Open button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Save button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Close button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Apply button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Reset button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Discard button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard Yes button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon for a standard No button in a QDialogButtonBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon arrow pointing up.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon arrow pointing down.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon arrow pointing left.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Icon arrow pointing right.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Equivalent to SP_ArrowLeft when the current layout direction is Qt::LeftToRight, otherwise SP_ArrowRight.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Equivalent to SP_ArrowRight when the current layout direction is Qt::LeftToRight, otherwise SP_ArrowLeft.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom standard pixmaps; custom values must be greater than this value.</td></tr>
</table></p>

*/"/>
    <enum name="StyleHint" doc="/**
<p>This enum describes the available style hints. A style hint is a general look and/or feel hint.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Disabled text is &quot;etched&quot; as it is on Windows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Disabled text is dithered as it is on Motif.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The GUI style to use.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether or not a scroll bar has a context menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean value. If true, middle clicking on a scroll bar causes the slider to jump to that position. If false, middle clicking is ignored.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean value. If true, left clicking on a scroll bar causes the slider to jump to that position. If false, left clicking will behave as appropriate for each control.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean value. If true, when clicking a scroll bar SubControl, holding the mouse button down and moving the pointer outside the SubControl, the scroll bar continues to scroll. If false, the scollbar stops scrolling when the pointer leaves the SubControl.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean value. If true, when clicking a scroll bar button (SC_ScrollBarAddLine or SC_ScrollBarSubLine) and dragging over to the opposite button (rolling) will press the new button and release the old one. When it is false, the original button is released and nothing happens (like a pushbutton).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The alignment for tabs in a QTabWidget. Possible values are Qt::AlignLeft, Qt::AlignCenter and Qt::AlignRight.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The placement of the sorting indicator may appear in list or table headers. Possible values are Qt::Left or Qt::Right.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Sliders snap to values while moving, as they do on Windows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Key presses handled in a sloppy manner, i.e., left on a vertical slider subtracts a line.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Center button on progress dialogs, like Motif, otherwise right aligned.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The alignment for text labels in progress dialogs; Qt::AlignCenter on Windows, Qt::AlignVCenter otherwise.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Right align buttons in the print dialog, as done on Windows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>One or two pixel space between the menubar and the dockarea, as done on Windows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Select the text in the line edit, or when selecting an item from the listbox, or when the line edit receives focus, as done on Windows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Typing causes a menu to be search for relevant items, otherwise only mnemnonic is considered.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Allows disabled menu items to be active.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Pressing the space bar activates the item, as done on Motif.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The number of milliseconds to wait before opening a submenu (256 on Windows, 96 on Motif).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether popup menus must support scrolling.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether popupmenu's must support sloppy submenu; as implemented on Mac OS.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether scrollviews draw their frame only around contents (like Motif), or around contents, scroll bars and corner widgets (like Windows).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Menu bars items are navigable by pressing Alt, followed by using the arrow keys to select the desired item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Mouse tracking in combobox drop-down lists.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Mouse tracking in popup menus.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Mouse tracking in menubars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether scrolling popups should fill the screen as they are scrolled.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether popups should allow the selections to wrap, that is when selection should the next item be the first item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Gray out selected items when losing focus.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Turn on sharing activation with floating modeless dialogs.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Which type of mouse event should cause a tab to be selected.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Which type of mouse event should cause a list view expansion to be selected.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether a tabbar should suggest a size to prevent scoll arrows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Allows popups as a combobox drop-down menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The workspace should maximize the client area.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The title bar has no border.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Obsolete. Use SH_Slider_StopMouseOverSlider instead.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Stops auto-repeat when the slider reaches the mouse position.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether cursor should blink when text is selected.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether richtext selections should extend to the full width of the document.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>How to vertically align a groupbox's text label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>How to paint a groupbox's text label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Which button gets the default status in a dialog's button widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Boldness of the selected page title in a QToolBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The Unicode character to be used for passwords.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The RGB value of the grid for a table.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Whether shortcuts are underlined.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A QTextCharFormat::UnderlineStyle value that specifies the way misspelled words should be underlined.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Animate a click when up or down is pressed in a spin box.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Auto-repeat interval for spinbox key presses.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Auto-repeat interval for spinbox mouse clicks.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>An integer indicating the opacity for the tip label, 0 is completely transparent, 255 is completely opaque.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates whether or not the menubar draws separators.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates if the titlebar should show a '*' for windows that are modified.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default focus policy for buttons.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom style hints. Custom values must be greater than this value.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean indicating if a menu in the menubar should be dismissed when it is clicked on a second time. (Example: Clicking and releasing on the File Menu in a menubar and then immediately clicking on the File Menu again.)</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean indicating what the to use the border of the buttons (computed as half the button height) for the spacing of the button in a message box.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean indicating whether the buttons in the message box should be centered or not (see QDialogButtonBox::setCentered()).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean indicating if the text in a message box should allow user interfactions (e.g. selection) or not.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A boolean indicating whether controls on a title bar ought to update when the mouse is over them.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>An int indicating the popup delay in milliseconds for menus attached to tool buttons.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The mask of the focus frame.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The mask of the rubber band.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The mask of the window frame.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Determines if the spin controls will shown as disabled when reaching the spin range boundary.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Defines the style's preferred background role (as QPalette::ColorRole) for a dial widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The background mode for a scroll bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The layout direction for the combo box. By default it should be the same as indicated by the QStyleOption::direction variable.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The location where ellipses should be added for item text that is too long to fit in an view item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>When an item in an item view is selected, also highlight the branch or other decoration.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Emit the activated signal when the user single clicks on an item in an item in an item view. Otherwise the signal is emitted when the user double clicks on an item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Which mouse buttons cause a slider to set the value to the position clicked on.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Which mouse buttons cause a slider to page step the value.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default eliding style for a tabbar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Controls how buttons are laid out in a QDialogButtonBox, returns a QDialogButtonBox::ButtonLayout enum.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The frame style used when drawing a combobox popup menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates whether or not StandardButtons in QDialogButtonBox should have icons or not.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The item view is able to indicate a current item without changing the selection.</td></tr>
</table></p>

*/"/>
    <enum name="PrimitiveElement" doc="/**
<p>This enum describes that various primitive elements. A primitive element is a common GUI element, such as a checkbox indicator or button bevel.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Button used to initiate an action, for example, a QPushButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>This frame around a default button, e.g. in a dialog.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Generic panel with a button bevel.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel for a Tool button, used with QToolButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel for a QLineEdit.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicator for a drop down button, for example, a tool button that displays a menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Generic focus indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Generic Up arrow.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Generic Down arrow.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Generic Right arrow.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Generic Left arrow.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Up symbol for a spin widget, for example a QSpinBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Down symbol for a spin widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Increase symbol for a spin widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Decrease symbol for a spin widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>On/off indicator for a view item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>On/off indicator, for example, a QCheckBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Exclusive on/off indicator, for example, a QRadioButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Item separator for Qt 3 compatible dock window and toolbar contents.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Resize handle for dock windows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Generic frame; see also QFrame.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame for popup windows/menus; see also QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel for menu bars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel at the bottom-right (or bottom-left) corner of a scroll area.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel frame for dock windows and toolbars.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame for tab widgets.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel frame for line edits.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel frame around group boxes.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel frame for a button bevel.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Panel frame for a tool button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Arrow used to indicate sorting on a list or table header.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame for a section of a status bar; see also QStatusBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Frame around a MDI window or a docking window.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Qt 3 compatible generic separator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Check mark used in a menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Section of a progress bar indicator; see also QProgressBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Qt 3 compatible controller part of a list view item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Qt 3 compatible checkbox part of a list view item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Qt 3 compatible radio button part of a list view item.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Lines used to represent the branch of a tree in a tree view.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The handle of a toolbar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The separator in a toolbar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The panel for a toolbar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The panel for a tip label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The frame that is drawn for a tabbar, ususally drawn for a tabbar that isn't part of a tab widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>An indicator that a tab is partially scrolled out of the visible tab bar when there are many tabs.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A plain QWidget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom primitive elements. All values above this are reserved for custom use. Custom values must be greater than this value.</td></tr>
</table></p>

*/"/>
    <enum name="ControlElement" doc="/**
<p>This enum represents a control element. A control element is a part of a widget that performs some action or displays information to the user.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A QPushButton, draws CE_PushButtonBevel, CE_PushButtonLabel and PE_FrameFocusRect.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The bevel and default indicator of a QPushButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The label (an icon with text or pixmap) of a QPushButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Dock window title.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Splitter handle; see also QSplitter.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A QCheckBox, draws a PE_IndicatorCheckBox, a CE_CheckBoxLabel and a PE_FrameFocusRect.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The label (text or pixmap) of a QCheckBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A QRadioButton, draws a PE_IndicatorRadioButton, a CE_RadioButtonLabel and a PE_FrameFocusRect.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The label (text or pixmap) of a QRadioButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The tab and label within a QTabBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The tab shape within a tab bar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The label within a tab.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A QProgressBar, draws CE_ProgressBarGroove, CE_ProgressBarContents and CE_ProgressBarLabel.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The groove where the progress indicator is drawn in a QProgressBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The progress indicator of a QProgressBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The text label of a QProgressBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A tool button's label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A menu item in a QMenuBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The empty area of a QMenuBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A menu item in a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scrolling areas in a QMenu when the style supports scrolling.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A menu item representing the tear off section of a QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The area in a menu without menu items.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The horizontal extra space on the left/right of a menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The vertical extra space on the top/bottom of a menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The empty area of a QDockWidget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The toolbox's tab area.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Window resize handle; see also QSizeGrip.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A header.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A header section.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The header's label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar line increase indicator. (i.e., scroll down); see also QScrollBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar line decrease indicator (i.e., scroll up).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scolllbar page increase indicator (i.e., page down).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar page decrease indicator (i.e., page up).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar slider.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar first line indicator (i.e., home).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Scroll bar last line indicator (i.e., end).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Rubber band used in for example an icon view.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Focus frame that is style controlled.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom control elements; custom values must be greater than this value.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The label of a non-editable QComboBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A toolbar like QToolBar.</td></tr>
</table></p>

*/"/>
    <enum name="ContentsType" doc="/**
<p>This enum describes the availble contents types. These are used to calculate sizes for the contents of various widgets.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A check box, like QCheckBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A combo box, like QComboBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A Q3DockWindow.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A header section, like QHeader.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A line edit, like QLineEdit.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A menu, like QMenu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A Qt 3 header section, like Q3Header.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A menu bar, like QMenuBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A menu bar item, like the buttons in a QMenuBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A menu item, like QMenuItem.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A progress bar, like QProgressBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A push button, like QPushButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A radio button, like QRadioButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A size grip, like QSizeGrip.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A slider, like QSlider.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A scroll bar, like QScrollBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A spin box, like QSpinBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A splitter, like QSplitter.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A tab on a tab bar, like QTabBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A tab widget, like QTabWidget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A tool button, like QToolButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A group box, like QGroupBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom contents types. Custom values must be greater than this value.</td></tr>
</table></p>

*/"/>
    <enum name="StateFlag" doc="/**
<p>This enum describes flags that are used when drawing primitive elements.</p>
<p>Note that not all primitives use all of these flags, and that the flags may mean different things to different items.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;40%&quote;>
<tr><th width=&quote;60%&quote;>Constant</th><th width=&quote;40%&quote;>Value</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td></tr>
</table></p>

*/"/>
    <enum name="ComplexControl" doc="/**
<p>This enum describes the available complex controls. Complex controls have different behavior depending upon where the user clicks on them or which keys are pressed.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A spinbox, like QSpinBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A combobox, like QComboBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A scroll bar, like QScrollBar.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A slider, like QSlider.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A tool button, like QToolButton.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A Title bar, like what is used in QWorkspace.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Used for drawing the Q3ListView class.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A group box, like QGroupBox.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>A dial, like QDial.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom complex controls. Custom values must be greater than this value.</td></tr>
</table></p>

*/"/>
    <enum name="SubElement" doc="/**
<p>This enum represents a sub-area of a widget. Style implementations use these areas to draw the different parts of a widget.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area containing the label (icon with text or pixmap).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the focus rect (usually larger than the contents rect).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the state indicator (e.g., check mark).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the label (text or pixmap).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the focus indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Clickable area, defaults to SE_CheckBoxFocusRect.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the state indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the focus indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Clickable area, defaults to SE_RadioButtonFocusRect.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the focus indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the focus indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the tear-off handle.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the groove.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the progress indicator.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the text label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's accept button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's reject button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's apply button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's help button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's all button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's retry button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's abort button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's ignore button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a dialog's custom widget area (in the button row).</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a frame's contents.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the sort indicator for a header.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the label in a header.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a line edit's contents.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the left corner widget in a tab widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the right corner widget in a tab widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the tab bar widget in a tab widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the contents of the tab widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the pane of a tab widget.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a toolbox tab's icon and label.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for a view item's check mark.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the tear indicator on a tab bar with scroll arrows.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Area for the actual disclosure item in a tree branch.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Base value for custom sub-elements. Custom values must be greater than this value.</td></tr>
</table></p>

*/"/>
</class>
