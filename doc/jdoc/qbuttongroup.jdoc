<class name="QButtonGroup" doc="/**
<p>The QButtonGroup class provides a container to organize groups of button widgets.</p>
<p>QButtonGroup provides an abstract container into which button widgets can be placed. It does not provide a visual representation of this container (see QGroupBox for a container widget), but instead manages the states of each of the buttons in the group.</p>
<p>An exclusive button group switches off all checkable (toggle) buttons except the one that was clicked. By default, a button group is exclusive. The buttons in a button group are usually checkable QPushButton's, QCheckBoxes (normally for non-exclusive button groups), or QRadioButtons. If you create an exclusive button group, you should ensure that one of the buttons in the group is initially checked; otherwise, the group will initially be in a state where no buttons are checked.</p>
<p>A button is added to the group with addButton(). It can be removed from the group with removeButton(). If the group is exclusive, the currently checked button is available as checkedButton(). If a button is clicked the buttonClicked() signal is emitted. For a checkable button in an exclusive group this means that the button was checked. The list of buttons in the group is returned by buttons().</p>
<p>In addition, QButtonGroup can map between integers and buttons. You can assign an integer id to a button with setId(), and retrieve it with id(). The id of the currently checked button is available with checkedId(), and there is an overloaded signal buttonClicked() which emits the id of the button. The purpose of the mapping mechanism is to simplify the representation of enum values in a user interface.</p>

*/">
    <method name="public QButtonGroup(com.trolltech.qt.core.QObject parent__0)" doc="/**
<p>Constructs a new, empty button group with the given <i>parent</i>.</p>

*/"/>
    <method name="public final void addButton(com.trolltech.qt.gui.QAbstractButton arg__0, int id__1)" doc="/**
<p>Adds the given <i>button</i> to the button group, with the given <i>id</i>.</p>

*/"/>
    <method name="public final void addButton(com.trolltech.qt.gui.QAbstractButton arg__0)" doc="/**
<p>Adds the given <i>button</i> to the end of the group's internal list of buttons.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QAbstractButton button(int id__0)" doc="/**
<p>Returns the button with the specified <i>id</i>, or 0 if no such button exists.</p>

*/"/>
    <method name="public final java.util.List&lt;com.trolltech.qt.gui.QAbstractButton&gt; buttons()" doc="/**
<p>Returns the list of this groups's buttons. This may be empty.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QAbstractButton checkedButton()" doc="/**
<p>Returns the button group's checked button, or 0 if no buttons are checked.</p>

*/"/>
    <method name="public final int checkedId()" doc="/**
<p>Returns the id of the checkedButton(), or -1 if no button is checked.</p>

*/"/>
    <method name="public final boolean exclusive()"/>
    <method name="public final int id(com.trolltech.qt.gui.QAbstractButton button__0)" doc="/**
<p>Returns the id for the specified <i>button</i>, or -1 if no such button exists.</p>

*/"/>
    <method name="public final void removeButton(com.trolltech.qt.gui.QAbstractButton arg__0)" doc="/**
<p>Removes the given <i>button</i> from the button group.</p>

*/"/>
    <method name="public final void setExclusive(boolean arg__0)"/>
    <method name="public final void setId(com.trolltech.qt.gui.QAbstractButton button__0, int id__1)" doc="/**
<p>Sets the <i>id</i> for the specified <i>button</i>.</p>

*/"/>
</class>
