<class name="QMetaProperty" doc="/**
<p>The QMetaProperty class provides meta-data about a property.</p>
<p>A property has a name() and a type(), as well as various attributes that specify its behavior: isReadable(), isWritable(), isDesignable(), isScriptable(), and isStored().</p>
<p>If the property is an enumeration, isEnumType() returns true; if the property is an enumeration that is also a flag (i.e. its values can be combined using the OR operator), isEnumType() and isFlagType() both return true. The enumerator for these types is available from enumerator().</p>
<p>The property's values are set and retrieved with read(), write(), and reset(); they can also be changed through QObject's set and get functions. See QObject::setProperty() and QObject::property() for details.</p>
<p>You get property meta-data through an object's meta-object. See QMetaObject::property() and QMetaObject::propertyCount() for details.</p>

*/">
    <method name="public QMetaProperty()"/>
    <method name="public final com.trolltech.qt.core.QMetaEnum enumerator()" doc="/**
<p>Returns the enumerator if this property's type is an enumerator type; otherwise the returned value is undefined.</p>

*/"/>
    <method name="public final boolean hasStdCppSet()" doc="/**
<p>Returns true if the property has a C++ setter function that follows Qt's standard &quot;name&quot; / &quot;setName&quot; pattern. Designer and uic query hasStdCppSet() in order to avoid expensive QObject::setProperty() calls. All properties in Qt [should] follow this pattern.</p>

*/"/>
    <method name="public final boolean isDesignable(com.trolltech.qt.core.QObject obj__0)" doc="/**
<p>Returns true if this property is designable for the given <i>object</i>; otherwise returns false.</p>
<p>If no <i>object</i> is given, the function returns false if the <tt>Q_PROPERTY()</tt>'s <tt>DESIGNABLE</tt> attribute is false; otherwise returns true (if the attribute is true or is a function or expression).</p>

*/"/>
    <method name="public final boolean isEditable(com.trolltech.qt.core.QObject obj__0)" doc="/**
<p>Returns true if the property is editable for the given <i>object</i>; otherwise returns false.</p>
<p>If no <i>object</i> is given, the function returns false if the <tt>Q_PROPERTY()</tt>'s <tt>EDITABLE</tt> attribute is false; otherwise returns true (if the attribute is true or is a function or expression).</p>

*/"/>
    <method name="public final boolean isEnumType()" doc="/**
<p>Returns true if the property's type is an enumeration value; otherwise returns false.</p>

*/"/>
    <method name="public final boolean isFlagType()" doc="/**
<p>Returns true if the property's type is an enumeration value that is used as a flag; otherwise returns false.</p>
<p>Flags can be combined using the OR operator. A flag type is implicitly also an enum type.</p>

*/"/>
    <method name="public final boolean isReadable()" doc="/**
<p>Returns true if this property is readable; otherwise returns false.</p>

*/"/>
    <method name="public final boolean isResettable()" doc="/**
<p>Returns true if this property can be reset to a default value; otherwise returns false.</p>

*/"/>
    <method name="public final boolean isScriptable(com.trolltech.qt.core.QObject obj__0)" doc="/**
<p>Returns true if the property is scriptable for the given <i>object</i>; otherwise returns false.</p>
<p>If no <i>object</i> is given, the function returns false if the <tt>Q_PROPERTY()</tt>'s <tt>SCRIPTABLE</tt> attribute is false; otherwise returns true (if the attribute is true or is a function or expression).</p>

*/"/>
    <method name="public final boolean isStored(com.trolltech.qt.core.QObject obj__0)" doc="/**
<p>Returns true if the property is stored for <i>object</i>; otherwise returns false.</p>
<p>If no <i>object</i> is given, the function returns false if the <tt>Q_PROPERTY()</tt>'s <tt>STORED</tt> attribute is false; otherwise returns true (if the attribute is true or is a function or expression).</p>

*/"/>
    <method name="public final boolean isUser(com.trolltech.qt.core.QObject obj__0)" doc="/**
<p>Returns true if this is the property that the user can editable for <i>object</i>; otherwise returns false. I.e. the text property is the user editable property of a QLineEdit.</p>
<p>If no <i>object</i> is given, the function returns false if the <tt>Q_PROPERTY()</tt>'s <tt>USER</tt> attribute is false; otherwise returns true (if the attribute is true or is a function or expression).</p>

*/"/>
    <method name="public final boolean isValid()" doc="/**
<p>Returns true if this property is valid (readable); otherwise returns false.</p>

*/"/>
    <method name="public final boolean isWritable()" doc="/**
<p>Returns true if this property is writable; otherwise returns false.</p>

*/"/>
    <method name="public final com.trolltech.qt.QNativePointer name()" doc="/**
<p>Returns this property's name.</p>

*/"/>
    <method name="public final java.lang.Object read(com.trolltech.qt.core.QObject obj__0)" doc="/**
<p>Reads the property's value from the given <i>object</i>. Returns the value if it was able to read it; otherwise returns an invalid variant.</p>

*/"/>
    <method name="public final boolean reset(com.trolltech.qt.core.QObject obj__0)" doc="/**
<p>Resets the property for the given <i>object</i> with a reset method. Returns true if the reset worked; otherwise returns false.</p>
<p>Reset methods are optional; only a few properties support them.</p>

*/"/>
    <method name="public final int type()" doc="/**
<p>Returns this property's type. The return value is one of the values of the QVariant::Type enumeration.</p>

*/"/>
    <method name="public final com.trolltech.qt.QNativePointer typeName()" doc="/**
<p>Returns the name of this property's type.</p>

*/"/>
    <method name="public final int userType()" doc="/**
<p>Returns this property's user type. The return value is one of the values that are registered with QMetaType, or 0 if the type is not registered.</p>

*/"/>
    <method name="public final boolean write(com.trolltech.qt.core.QObject obj__0, java.lang.Object value__1)" doc="/**
<p>Writes <i>value</i> as the property's value to the given <i>object</i>. Returns true if the write succeeded; otherwise returns false.</p>

*/"/>
</class>
