<class name="QStyleOptionTabWidgetFrame" doc="/**
<p>The QStyleOptionTabWidgetFrame class is used to describe the parameters for drawing the frame around a tab widget.</p>
<p>QStyleOptionTabWidgetFrame contains all the information that QStyle functions need to draw the frame around QTabWidget.</p>
<p>For performance reasons, the access to the member variables is direct (i.e., using the <tt>.</tt> or <tt>-&gt;</tt> operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</p>
<p>For an example demonstrating how style options can be used, see the Styles example.</p>

*/">
    <method name="public QStyleOptionTabWidgetFrame(com.trolltech.qt.gui.QStyleOptionTabWidgetFrame other__0)" doc="/**
<p>Constructs a copy of <i>other</i>.</p>

*/"/>
    <method name="public QStyleOptionTabWidgetFrame()" doc="/**
<p>Constructs a QStyleOptionTabWidgetFrame, initializing the members variables to their default values.</p>

*/"/>
    <method name="protected QStyleOptionTabWidgetFrame(int version__0)"/>
    <enum name="StyleOptionVersion" doc="/**
<p>This enum is used to hold information about the version of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>1</td></tr>
</table></p>
<p>The version is used by QStyleOption subclasses to implement extensions without breaking compatibility. If you use qstyleoption_cast(), you normally don't need to check it.</p>

*/"/>
    <enum name="StyleOptionType" doc="/**
<p>This enum is used to hold information about the type of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The type of style option provided (SO_TabWidgetFrame for this class).</td></tr>
</table></p>
<p>The type is used internally by QStyleOption, its subclasses, and qstyleoption_cast() to determine the type of style option. In general you do not need to worry about this unless you want to create your own QStyleOption subclass and your own styles.</p>

*/"/>
    <method name="public final int lineWidth()" doc="/**
<p>the line width for drawing the panel</p>
<p>The default value is 0.</p>

*/"/>
    <method name="public final void setLineWidth(int lineWidth)" doc="/**
<p>the line width for drawing the panel</p>
<p>The default value is 0.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QSize rightCornerWidgetSize()" doc="/**
<p>The size of the right-corner widget.</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final void setRightCornerWidgetSize(com.trolltech.qt.core.QSize rightCornerWidgetSize)" doc="/**
<p>The size of the right-corner widget.</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QSize tabBarSize()" doc="/**
<p>The size of the tab bar.</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final void setTabBarSize(com.trolltech.qt.core.QSize tabBarSize)" doc="/**
<p>The size of the tab bar.</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTabBar.Shape shape()" doc="/**
<p>the tab shape used to draw the tabs</p>
<p>The default value is QTabBar::RoundedNorth.</p>

*/"/>
    <method name="public final void setShape(com.trolltech.qt.gui.QTabBar.Shape shape)" doc="/**
<p>the tab shape used to draw the tabs</p>
<p>The default value is QTabBar::RoundedNorth.</p>

*/"/>
    <method name="public final int midLineWidth()" doc="/**
<p>the mid-line width for drawing the panel</p>
<p>The mid line width is usually used in drawing sunken or raised frames. The default value is 0.</p>

*/"/>
    <method name="public final void setMidLineWidth(int midLineWidth)" doc="/**
<p>the mid-line width for drawing the panel</p>
<p>The mid line width is usually used in drawing sunken or raised frames. The default value is 0.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QSize leftCornerWidgetSize()" doc="/**
<p>The size of the left-corner widget.</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final void setLeftCornerWidgetSize(com.trolltech.qt.core.QSize leftCornerWidgetSize)" doc="/**
<p>The size of the left-corner widget.</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
</class>
