<class name="QSound" doc="/**
<p>The QSound class provides access to the platform audio facilities.</p>
<p>Qt provides the most commonly required audio operation in GUI applications: asynchronously playing a sound file. This is most easily accomplished using the static play() function:</p>
<pre>    QSound::play(&quot;mysounds/bells.wav&quot;);</pre>
<p>Alternatively, create a QSound object from the sound file first and then call the play() slot:</p>
<pre>    QSound bells(&quot;mysounds/bells.wav&quot;);
    bells.play();</pre>
<p>Once created a QSound object can be queried for its fileName() and total number of loops() (i.e. the number of times the sound will play). The number of repetitions can be altered using the setLoops() function. While playing the sound, the loopsRemaining() function returns the remaining number of repetitions. Use the isFinished() function to determine whether the sound has finished playing.</p>
<p>Sounds played using a QSound object may use more memory than the static play() function, but it may also play more immediately (depending on the underlying platform audio facilities). Use the static isAvailable() function to determine whether sound facilities exist on the platform. Which facilities that are actually used varies:</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Platform</th><th>Audio Facility</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>Microsoft Windows</td><td>The underlying multimedia system is used; only WAVE format sound files are supported.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>X11</td><td>The <a href=&quote;ftp://ftp.x.org/contrib/audio/nas/&quote;>Network Audio System</a> is used if available, otherwise all operations work silently. NAS supports WAVE and AU files.</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>Mac OS X</td><td><a href=&quote;http://quicktime.apple.com/&quote;>QuickTime</a> is used. All QuickTime formats are supported by Qt/Mac.</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>Qtopia Core</td><td>A built-in mixing sound server is used, accessing <tt>/dev/dsp</tt> directly. Only the WAVE format is supported.</td></tr>
</table></p>
<p>Note that QSound does not support resources. This might be fixed in a future Qt version.</p>

*/">
    <method name="public QSound(java.lang.String filename__0, com.trolltech.qt.core.QObject parent__1)" doc="/**
<p>Constructs a QSound object from the file specified by the given <i>filename</i> and with the given <i>parent</i>.</p>
<p>This may use more memory than the static play() function, but it may also play more immediately (depending on the underlying platform audio facilities).</p>

*/"/>
    <method name="public final java.lang.String fileName()" doc="/**
<p>Returns the filename associated with this QSound object.</p>

*/"/>
    <method name="public final boolean isFinished()" doc="/**
<p>Returns true if the sound has finished playing; otherwise returns false.</p>
<p><b>Warning:</b> On Windows this function always returns true for unlooped sounds.</p>

*/"/>
    <method name="public final int loops()" doc="/**
<p>Returns the number of times the sound will play.</p>

*/"/>
    <method name="public final int loopsRemaining()" doc="/**
<p>Returns the remaining number of times the sound will loop (this value decreases each time the sound is played).</p>

*/"/>
    <method name="public final void play()" doc="/**
<p>Starts playing the sound specified by this QSound object.</p>
<p>The function returns immediately. Depending on the platform audio facilities, other sounds may stop or be mixed with the new sound. The sound can be played again at any time, possibly mixing or replacing previous plays of the sound.</p>

*/"/>
    <method name="public final void setLoops(int arg__0)" doc="/**
<p>Sets the sound to repeat the given <i>number</i> of times when it is played.</p>
<p>Note that passing the value -1 will cause the sound to loop indefinitely.</p>

*/"/>
    <method name="public final void stop()" doc="/**
<p>Stops the sound playing.</p>
<p>Note that on Windows the current loop will finish if a sound is played in a loop.</p>

*/"/>
    <method name="public native static boolean isAvailable()" doc="/**
<p>Returns true if sound facilities exist on the platform; otherwise returns false.</p>
<p>If no sound is available, all QSound operations work silently and quickly. An application may choose either to notify the user if sound is crucial to the application or to operate silently without bothering the user.</p>
<p>Note: On Windows this always returns true because some sound card drivers do not implement a way to find out whether it is available or not.</p>

*/"/>
    <method name="public native static void play(java.lang.String filename__0)" doc="/**
<p>Plays the sound stored in the file specified by the given <i>filename</i>.</p>

*/"/>
</class>
