<class name="QWidgetItem" doc="/**
<p>The QWidgetItem class is a layout item that represents a widget.</p>
<p>Normally, you don't need to use this class directly. Qt's built-in layout managers provide the following functions for manipulating widgets in layouts:</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<thead><tr valign=&quote;top&quote; class=&quote;qt-style&quote;><th>Class</th><th>Functions</th></tr></thead>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>QBoxLayout</td><td>addWidget(), insertWidget(), setStretchFactor()</td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>QGridLayout</td><td>addWidget()</td></tr>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td>QStackedLayout</td><td>addWidget(), insertWidget(), currentWidget(), setCurrentWidget(), widget()</td></tr>
</table></p>

*/">
    <method name="public QWidgetItem(com.trolltech.qt.gui.QWidget w__0)" doc="/**
<p>Creates an item containing the given <i>widget</i>.</p>

*/"/>
    <method name="public com.trolltech.qt.core.Qt.Orientations expandingDirections()"/>
    <method name="public com.trolltech.qt.core.QRect geometry()"/>
    <method name="public boolean hasHeightForWidth()"/>
    <method name="public int heightForWidth(int arg__0)"/>
    <method name="public boolean isEmpty()" doc="/**
<p>Returns true if the widget is hidden; otherwise returns false.</p>

*/"/>
    <method name="public com.trolltech.qt.core.QSize maximumSize()"/>
    <method name="public com.trolltech.qt.core.QSize minimumSize()"/>
    <method name="public void setGeometry(com.trolltech.qt.core.QRect arg__0)"/>
    <method name="public com.trolltech.qt.core.QSize sizeHint()"/>
    <method name="public com.trolltech.qt.gui.QWidget widget()" doc="/**
<p>Returns the widget managed by this item.</p>

*/"/>
</class>
