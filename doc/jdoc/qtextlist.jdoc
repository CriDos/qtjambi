<class name="QTextList" doc="/**
<p>The QTextList class provides a decorated list of items in a QTextDocument.</p>
<p>A list contains a sequence of text blocks, each of which is marked with a bullet point or other symbol. Multiple levels of lists can be used, and the automatic numbering feature provides support for ordered numeric and alphabetical lists.</p>
<p>Lists are created by using a text cursor to insert an empty list at the current position or by moving existing text into a new list. The QTextCursor::insertList() function inserts an empty block into the document at the cursor position, and makes it the first item in a list.</p>
<pre>        QTextListFormat listFormat;
        if (list) {
            listFormat = list-&gt;format();
            listFormat.setIndent(listFormat.indent() + 1);
        }

        listFormat.setStyle(QTextListFormat::ListDisc);
        cursor.insertList(listFormat);</pre>
<p>The QTextCursor::createList() function takes the contents of the cursor's current block and turns it into the first item of a new list.</p>
<p>The cursor's current list is found with QTextCursor::currentList().</p>
<p>The number of items in a list is given by count(). Each item can be obtained by its index in the list with the item() function. Similarly, the index of a given item can be found with itemNumber(). The text of each item can be found with the itemText() function.</p>
<p>Note that the items in the list may not be adjacent elements in the document. For example, the top-level items in a multi-level list will be separated by the items in lower levels of the list.</p>
<p>List items can be deleted by index with the removeItem() function. remove() deletes the specified item in the list.</p>
<p>The list's format is set with setFormat() and read with format(). The format describes the decoration of the list itself, and not the individual items.</p>

*/">
    <method name="public QTextList(com.trolltech.qt.gui.QTextDocument doc__0)"/>
    <method name="public final void add(com.trolltech.qt.gui.QTextBlock block__0)" doc="/**
<p>Makes the given <i>block</i> part of the list.</p>

*/"/>
    <method name="public final int count()" doc="/**
<p>Returns the number of items in the list.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTextListFormat format()" doc="/**
<p>Returns the list's format.</p>

*/"/>
    <method name="public final boolean isEmpty()" doc="/**
<p>Returns true if the list has no items; otherwise returns false.</p>
<p><b>Note:</b> Empty lists are automatically deleted by the QTextDocument that owns them.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTextBlock item(int i__0)" doc="/**
<p>Returns the <i>i</i>-th text block in the list.</p>

*/"/>
    <method name="public final int itemNumber(com.trolltech.qt.gui.QTextBlock arg__0)" doc="/**
<p>Returns the index of the list item that corresponds to the given <i>block</i>.</p>

*/"/>
    <method name="public final java.lang.String itemText(com.trolltech.qt.gui.QTextBlock arg__0)" doc="/**
<p>Returns the text of the list item that corresponds to the given <i>block</i>.</p>

*/"/>
    <method name="public final void remove(com.trolltech.qt.gui.QTextBlock arg__0)" doc="/**
<p>Removes the given <i>block</i> from the list.</p>

*/"/>
    <method name="public final void removeItem(int i__0)" doc="/**
<p>Removes the item at item position <i>i</i> from the list. When the last item in the list is removed, the list is automatically deleted by the QTextDocument that owns it.</p>

*/"/>
    <method name="public final void setFormat(com.trolltech.qt.gui.QTextListFormat format__0)" doc="/**
<p>Sets the list's format to <i>format</i>.</p>

*/"/>
</class>
