<class name="QTextBlockFormat" doc="/**
<p>The QTextBlockFormat class provides formatting information for blocks of text in a QTextDocument.</p>
<p>A document is composed of a list of blocks, represented by QTextBlock objects. Each block can contain an item of some kind, such as a paragraph of text, a table, a list, or an image. Every block has an associated QTextBlockFormat that specifies its characteristics.</p>
<p>To cater for left-to-right and right-to-left languages you can set a block's direction with setDirection(). Paragraph alignment is set with setAlignment(). Margins are controlled by setTopMargin(), setBottomMargin(), setLeftMargin(), setRightMargin(). Overall indentation is set with setIndent(), the indentation of the first line with setTextIndent().</p>
<p>Line breaking can be enabled and disabled with setNonBreakableLines().</p>
<p>The brush used to paint the paragraph's background is set with setBackground(), and other aspects of the text's appearance can be customized by using the setProperty() function with the <tt>OutlinePen</tt>, <tt>ForegroundBrush</tt>, and <tt>BackgroundBrush</tt> QTextFormat::Property values.</p>
<p>If a text block is part of a list, it can also have a list format that is accessible with the listFormat() function.</p>

*/">
    <method name="public QTextBlockFormat()" doc="/**
<p>Constructs a new QTextBlockFormat.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.Alignment alignment()" doc="/**
<p>Returns the paragraph's alignment.</p>

*/"/>
    <method name="public final double bottomMargin()" doc="/**
<p>Returns the paragraph's bottom margin.</p>

*/"/>
    <method name="public final int indent()" doc="/**
<p>Returns the paragraph's indent.</p>

*/"/>
    <method name="public final double leftMargin()" doc="/**
<p>Returns the paragraph's left margin.</p>

*/"/>
    <method name="public final boolean nonBreakableLines()" doc="/**
<p>Returns true if the lines in the paragraph are non-breakable; otherwise returns false.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTextFormat.PageBreakFlags pageBreakPolicy()" doc="/**
<p>Returns the currently set page break policy for the paragraph. The default is QTextFormat::PageBreak_Auto.</p>

*/"/>
    <method name="public final double rightMargin()" doc="/**
<p>Returns the paragraph's right margin.</p>

*/"/>
    <method name="public final void setAlignment(com.trolltech.qt.core.Qt.Alignment alignment__0)" doc="/**
<p>Sets the paragraph's <i>alignment</i>.</p>

*/"/>
    <method name="public final void setBottomMargin(double margin__0)" doc="/**
<p>Sets the paragraph's bottom <i>margin</i>.</p>

*/"/>
    <method name="public final void setIndent(int indent__0)" doc="/**
<p>Sets the paragraph's <i>indentation</i>. Margins are set independently of indentation with setLeftMargin() and setTextIdent().</p>

*/"/>
    <method name="public final void setLeftMargin(double margin__0)" doc="/**
<p>Sets the paragraph's left <i>margin</i>. Indentation can be applied separately with setIndent().</p>

*/"/>
    <method name="public final void setNonBreakableLines(boolean b__0)" doc="/**
<p>If <i>b</i> is true, the lines in the paragraph are treated as non-breakable; otherwise they are breakable.</p>

*/"/>
    <method name="public final void setPageBreakPolicy(com.trolltech.qt.gui.QTextFormat.PageBreakFlags flags__0)" doc="/**
<p>Sets the page break policy for the paragraph to <i>policy</i>.</p>

*/"/>
    <method name="public final void setRightMargin(double margin__0)" doc="/**
<p>Sets the paragraph's right <i>margin</i>.</p>

*/"/>
    <method name="public final void setTextIndent(double margin__0)" doc="/**
<p>Sets the <i>indent</i> for the first line in the block. This allows the first line of a paragraph to be indented differently to the other lines, enhancing the readability of the text.</p>

*/"/>
    <method name="public final void setTopMargin(double margin__0)" doc="/**
<p>Sets the paragraph's top <i>margin</i>.</p>

*/"/>
    <method name="public final double textIndent()" doc="/**
<p>Returns the paragraph's text indent.</p>

*/"/>
    <method name="public final double topMargin()" doc="/**
<p>Returns the paragraph's top margin.</p>

*/"/>
    <method name="public boolean isValid()" doc="/**
<p>Returns true if this block format is valid; otherwise returns false.</p>

*/"/>
</class>
