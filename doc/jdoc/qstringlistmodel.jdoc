<class name="QStringListModel" doc="/**
<p>The QStringListModel class provides a model that supplies strings to views.</p>
<p>QStringListModel is an editable model that can be used for simple cases where you need to display a number of strings in a view widget, such as a QListView or a QComboBox.</p>
<p>The model provides all the standard functions of an editable model, representing the data in the string list as a model with one column and a number of rows equal to the number of items in the list.</p>
<p>Model indexes corresponding to items are obtained with the index() function, and item flags are obtained with flags(). Item data is read with the data() function and written with setData(). The number of rows (and number of items in the string list) can be found with the rowCount() function.</p>
<p>The model can be constructed with an existing string list, or strings can be set later with the setStringList() convenience function. Strings can also be inserted in the usual way with the insertRows() function, and removed with removeRows(). The contents of the string list can be retrieved with the stringList() convenience function.</p>
<p>An example usage of QStringListModel:</p>
<pre>        QStringListModel *model = new QStringListModel();
        QStringList list;
        list &lt;&lt; &quot;a&quot; &lt;&lt; &quot;b&quot; &lt;&lt; &quot;c&quot;;
        model-&gt;setStringList(list);</pre>

*/">
    <method name="public QStringListModel(com.trolltech.qt.core.QObject parent__0)" doc="/**
<p>Constructs a string list model with the given <i>parent</i>.</p>

*/"/>
    <method name="public QStringListModel(java.util.List&lt;java.lang.String&gt; strings__0, com.trolltech.qt.core.QObject parent__1)" doc="/**
<p>Constructs a string list model containing the specified <i>strings</i> with the given <i>parent</i>.</p>

*/"/>
    <method name="public final void setStringList(java.util.List&lt;java.lang.String&gt; strings__0)" doc="/**
<p>Sets the model's internal string list to <i>strings</i>. The model will notify any attached views that its underlying data has changed.</p>

*/"/>
    <method name="public final java.util.List&lt;java.lang.String&gt; stringList()" doc="/**
<p>Returns the string list used by the model to store data.</p>

*/"/>
    <method name="public java.lang.Object data(com.trolltech.qt.core.QModelIndex index__0, int role__1)" doc="/**
<p>Returns data for the specified <i>role</i>, from the item with the given <i>index</i>.</p>
<p>If the view requests an invalid index, an invalid variant is returned.</p>

*/"/>
    <method name="public com.trolltech.qt.core.Qt.ItemFlags flags(com.trolltech.qt.core.QModelIndex index__0)" doc="/**
<p>Returns the flags for the item with the given <i>index</i>.</p>
<p>Valid items are enabled, selectable, and editable.</p>

*/"/>
    <method name="public boolean insertRows(int row__0, int count__1, com.trolltech.qt.core.QModelIndex parent__2)" doc="/**
<p>Inserts <i>count</i> rows into the model, beginning at the given <i>row</i>.</p>
<p>The <i>parent</i> index of the rows is optional and is only used for consistency with QAbstractItemModel. By default, a null index is specified, indicating that the rows are inserted in the top level of the model.</p>

*/"/>
    <method name="public boolean removeRows(int row__0, int count__1, com.trolltech.qt.core.QModelIndex parent__2)" doc="/**
<p>Removes <i>count</i> rows from the model, beginning at the given <i>row</i>.</p>
<p>The <i>parent</i> index of the rows is optional and is only used for consistency with QAbstractItemModel. By default, a null index is specified, indicating that the rows are removed in the top level of the model.</p>

*/"/>
    <method name="public int rowCount(com.trolltech.qt.core.QModelIndex parent__0)" doc="/**
<p>Returns the number of rows in the model. This value corresponds to the number of items in the model's internal string list.</p>
<p>The optional <i>parent</i> argument is in most models used to specify the parent of the rows to be counted. Because this is a list if a valid parent is specified, the result will always be 0.</p>

*/"/>
    <method name="public boolean setData(com.trolltech.qt.core.QModelIndex index__0, java.lang.Object value__1, int role__2)" doc="/**
<p>Sets the data for the specifed <i>role</i> in the item with the given <i>index</i> in the model, to the provided <i>value</i>.</p>
<p>The dataChanged() signal is emitted if the item is changed.</p>

*/"/>
    <method name="public void sort(int column__0, com.trolltech.qt.core.Qt.SortOrder order__1)"/>
</class>
