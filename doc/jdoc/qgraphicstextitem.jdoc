<class name="QGraphicsTextItem" doc="/**
<p>The QGraphicsTextItem class provides a text item that you can add to a QGraphicsScene to display formatted text.</p>
<p>To set the item's text, pass a QString to QGraphicsTextItem's constructor, or call setHtml()/setPlainText().</p>
<p>QGraphicsTextItem uses the text's formatted size and the associated font to provide a reasonable implementation of boundingRect(), shape(), and contains(). You can set the font by calling setFont().</p>

*/">
    <method name="public QGraphicsTextItem(com.trolltech.qt.gui.QGraphicsItemInterface parent__0, com.trolltech.qt.gui.QGraphicsScene scene__1)" doc="/**
<p>Constructs a QGraphicsTextItem. <i>parent</i> and <i>scene</i> are passed to QGraphicsItem's constructor.</p>

*/"/>
    <method name="public QGraphicsTextItem(java.lang.String text__0, com.trolltech.qt.gui.QGraphicsItemInterface parent__1, com.trolltech.qt.gui.QGraphicsScene scene__2)" doc="/**
<p>Constructs a QGraphicsTextItem, using <i>text</i> as the default plain text. <i>parent</i> and <i>scene</i> are passed to QGraphicsItem's constructor.</p>

*/"/>
    <method name="public final void adjustSize()" doc="/**
<p>Adjusts the text item to a reasonable size.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QColor defaultTextColor()" doc="/**
<p>Returns the default text color that is used to for unformatted text.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTextDocument document()" doc="/**
<p>Returns the item's text document.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QFont font()" doc="/**
<p>Returns the item's font, which is used to render the text.</p>

*/"/>
    <method name="public final boolean openExternalLinks()"/>
    <method name="public final void setDefaultTextColor(com.trolltech.qt.gui.QColor c__0)" doc="/**
<p>Sets the color for unformatted text to <i>col</i>.</p>

*/"/>
    <method name="public final void setDocument(com.trolltech.qt.gui.QTextDocument document__0)" doc="/**
<p>Sets the text document <i>document</i> on the item.</p>

*/"/>
    <method name="public final void setFont(com.trolltech.qt.gui.QFont font__0)" doc="/**
<p>Sets the font used to render the text item to <i>font</i>.</p>

*/"/>
    <method name="public final void setHtml(java.lang.String html__0)" doc="/**
<p>Sets the item's text to <i>text</i>, assuming that text is HTML formatted.</p>

*/"/>
    <method name="public final void setOpenExternalLinks(boolean open__0)"/>
    <method name="public final void setPlainText(java.lang.String text__0)" doc="/**
<p>Sets the item's text to <i>text</i>.</p>

*/"/>
    <method name="public final void setTextCursor(com.trolltech.qt.gui.QTextCursor cursor__0)"/>
    <method name="public final void setTextInteractionFlags(com.trolltech.qt.core.Qt.TextInteractionFlags flags__0)" doc="/**
<p>Sets the flags <i>flags</i> to specify how the text item should react to user input.</p>
<p>The default for a QGraphicsTextItem is Qt::NoTextInteraction. Setting a value different to Qt::NoTextInteraction will also set the ItemIsFocusable QGraphicsItem flag.</p>

*/"/>
    <method name="public final void setTextWidth(double width__0)" doc="/**
<p>Sets the preferred width for the item's text. If the actual text is wider than the specified width then it will be broken into multiple lines.</p>
<p>If <i>width</i> is set to -1 then the text will not be broken into multiple lines unless it is enforced through an explicit line break or a new paragraph.</p>
<p>The default value is -1.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTextCursor textCursor()"/>
    <method name="public final com.trolltech.qt.core.Qt.TextInteractionFlags textInteractionFlags()" doc="/**
<p>Returns the current text interaction flags.</p>

*/"/>
    <method name="public final double textWidth()" doc="/**
<p>Returns the text width.</p>

*/"/>
    <method name="public final java.lang.String toHtml()" doc="/**
<p>Returns the item's text converted to HTML, or an empty QString if no text has been set.</p>

*/"/>
    <method name="public final java.lang.String toPlainText()" doc="/**
<p>Returns the item's text converted to plain text, or an empty QString if no text has been set.</p>

*/"/>
    <method name="public com.trolltech.qt.core.QRectF boundingRect()"/>
    <method name="public boolean contains(com.trolltech.qt.core.QPointF point__0)"/>
    <method name="public void contextMenuEvent(com.trolltech.qt.gui.QGraphicsSceneContextMenuEvent event__0)"/>
    <method name="public java.lang.Object data(int key__0)"/>
    <method name="public void dragEnterEvent(com.trolltech.qt.gui.QGraphicsSceneDragDropEvent event__0)"/>
    <method name="public void dragLeaveEvent(com.trolltech.qt.gui.QGraphicsSceneDragDropEvent event__0)"/>
    <method name="public void dragMoveEvent(com.trolltech.qt.gui.QGraphicsSceneDragDropEvent event__0)"/>
    <method name="public void dropEvent(com.trolltech.qt.gui.QGraphicsSceneDragDropEvent event__0)"/>
    <method name="public java.lang.Object extension(java.lang.Object variant__0)"/>
    <method name="public void focusInEvent(com.trolltech.qt.gui.QFocusEvent event__0)"/>
    <method name="public void focusOutEvent(com.trolltech.qt.gui.QFocusEvent event__0)"/>
    <method name="public void hoverEnterEvent(com.trolltech.qt.gui.QGraphicsSceneHoverEvent event__0)"/>
    <method name="public void hoverLeaveEvent(com.trolltech.qt.gui.QGraphicsSceneHoverEvent event__0)"/>
    <method name="public void hoverMoveEvent(com.trolltech.qt.gui.QGraphicsSceneHoverEvent event__0)"/>
    <method name="public void inputMethodEvent(com.trolltech.qt.gui.QInputMethodEvent event__0)"/>
    <method name="public java.lang.Object inputMethodQuery(com.trolltech.qt.core.Qt.InputMethodQuery query__0)"/>
    <method name="public boolean isEnabled()"/>
    <method name="public boolean isObscuredBy(com.trolltech.qt.gui.QGraphicsItemInterface item__0)"/>
    <method name="public void keyPressEvent(com.trolltech.qt.gui.QKeyEvent event__0)"/>
    <method name="public void keyReleaseEvent(com.trolltech.qt.gui.QKeyEvent event__0)"/>
    <method name="public com.trolltech.qt.core.QPointF mapFromItem(com.trolltech.qt.gui.QGraphicsItemInterface item__0, double x__1, double y__2)"/>
    <method name="public com.trolltech.qt.core.QPointF mapFromParent(double x__0, double y__1)"/>
    <method name="public com.trolltech.qt.core.QPointF mapToItem(com.trolltech.qt.gui.QGraphicsItemInterface item__0, double x__1, double y__2)"/>
    <method name="public com.trolltech.qt.core.QPointF mapToParent(double x__0, double y__1)"/>
    <method name="public com.trolltech.qt.gui.QMatrix matrix()"/>
    <method name="public void mouseDoubleClickEvent(com.trolltech.qt.gui.QGraphicsSceneMouseEvent event__0)"/>
    <method name="public void mouseMoveEvent(com.trolltech.qt.gui.QGraphicsSceneMouseEvent event__0)"/>
    <method name="public void mousePressEvent(com.trolltech.qt.gui.QGraphicsSceneMouseEvent event__0)"/>
    <method name="public void mouseReleaseEvent(com.trolltech.qt.gui.QGraphicsSceneMouseEvent event__0)"/>
    <method name="public com.trolltech.qt.gui.QPainterPath opaqueArea()"/>
    <method name="public void paint(com.trolltech.qt.gui.QPainter painter__0, com.trolltech.qt.gui.QStyleOptionGraphicsItem option__1, com.trolltech.qt.gui.QWidget widget__2)"/>
    <method name="public boolean sceneEvent(com.trolltech.qt.core.QEvent event__0)"/>
    <method name="public void setData(int key__0, java.lang.Object value__1)"/>
    <method name="public void setExtension(com.trolltech.qt.gui.QGraphicsItem.Extension extension__0, java.lang.Object variant__1)" doc="/**
<p>Note: This is provided as a hook to avoid future problems related to adding virtual functions.</p>

*/"/>
    <method name="public void setPos(double x__0, double y__1)"/>
    <method name="public com.trolltech.qt.gui.QPainterPath shape()"/>
    <method name="public boolean supportsExtension(com.trolltech.qt.gui.QGraphicsItem.Extension extension__0)" doc="/**
<p>Note: This is provided as a hook to avoid future problems related to adding virtual functions.</p>

*/"/>
    <method name="public int type()"/>
</class>
