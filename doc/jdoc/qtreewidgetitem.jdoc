<class name="QTreeWidgetItem" doc="/**
<p>The QTreeWidgetItem class provides an item for use with the QTreeWidget convenience class.</p>
<p>Tree widget items are used to hold rows of information for tree widgets. Rows usually contain several columns of data, each of which can contain a text label and an icon.</p>
<p>The QTreeWidgetItem class is a convenience class that replaces the QListViewItem class in Qt 3. It provides an item for use with the QTreeWidget class.</p>
<p>Items are usually constructed with a parent that is either a QTreeWidget (for top-level items) or a QTreeWidgetItem (for items on lower levels of the tree). For example, the following code constructs a top-level item to represent cities of the world, and adds a entry for Oslo as a child item:</p>
<pre>        QTreeWidgetItem *cities = new QTreeWidgetItem(treeWidget);
        cities-&gt;setText(0, tr(&quot;Cities&quot;));
        QTreeWidgetItem *osloItem = new QTreeWidgetItem(cities);
        osloItem-&gt;setText(0, tr(&quot;Oslo&quot;));
        osloItem-&gt;setText(1, tr(&quot;Yes&quot;));</pre>
<p>Items can be added in a particular order by specifying the item they follow when they are constructed:</p>
<pre>        QTreeWidgetItem *planets = new QTreeWidgetItem(treeWidget, cities);
        planets-&gt;setText(0, tr(&quot;Planets&quot;));</pre>
<p>Each column in an item can have its own background brush which is set with the setBackground() function. The current background brush can be found with background(). The text label for each column can be rendered with its own font and brush. These are specified with the setFont() and setForeground() functions, and read with font() and foreground().</p>
<p>The main difference between top-level items and those in lower levels of the tree is that a top-level item has no parent(). This information can be used to tell the difference between items, and is useful to know when inserting and removing items from the tree. Children of an item can be removed with takeChild() and inserted at a given index in the list of children with the insertChild() function.</p>
<p>By default, items are enabled, selectable, checkable, and can be the source of a drag and drop operation. Each item's flags can be changed by calling setFlags() with the appropriate value (see Qt::ItemFlags). Checkable items can be checked and unchecked with the setCheckState() function. The corresponding checkState() function indicates whether the item is currently checked.</p>
<a name=&quote;subclassing&quote;></a>
<h3>Subclassing</h3>
<p>When subclassing QTreeWidgetItem to provide custom items, it is possible to define new types for them so that they can be distinguished from standard items. The constructors for subclasses that require this feature need to call the base class constructor with a new type value equal to or greater than UserType.</p>

*/">
    <method name="public QTreeWidgetItem(com.trolltech.qt.gui.QTreeWidgetItem parent__0, com.trolltech.qt.gui.QTreeWidgetItem after__1, int type__2)" doc="/**
<p>Constructs a tree widget item of the specified <i>type</i> that is inserted into the <i>parent</i> after the <i>preceding</i> child item.</p>

*/"/>
    <method name="public QTreeWidgetItem(com.trolltech.qt.gui.QTreeWidget view__0, int type__1)" doc="/**
<p>Constructs a tree widget item of the specified <i>type</i> and appends it to the items in the given <i>parent</i>.</p>

*/"/>
    <method name="public QTreeWidgetItem(com.trolltech.qt.gui.QTreeWidget view__0, com.trolltech.qt.gui.QTreeWidgetItem after__1, int type__2)" doc="/**
<p>Constructs a tree widget item of the specified <i>type</i> and inserts it into the given <i>parent</i> after the <i>preceding</i> item.</p>

*/"/>
    <method name="public QTreeWidgetItem(int type__0)" doc="/**
<p>Constructs a tree widget item of the specified <i>type</i>. The item must be inserted into a tree widget.</p>

*/"/>
    <method name="public QTreeWidgetItem(com.trolltech.qt.gui.QTreeWidgetItem parent__0, int type__1)" doc="/**
<p>Constructs a tree widget item and append it to the given <i>parent</i>.</p>

*/"/>
    <method name="public final void addChild(com.trolltech.qt.gui.QTreeWidgetItem child__0)" doc="/**
<p>Appends the <i>child</i> item to the list of children.</p>

*/"/>
    <method name="public final void addChildren(java.util.List&lt;com.trolltech.qt.gui.QTreeWidgetItem&gt; children__0)" doc="/**
<p>Appends the given list of <i>children</i> to the item.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QBrush background(int column__0)" doc="/**
<p>Returns the brush used to render the background of the specified <i>column</i>.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QColor backgroundColor(int column__0)" doc="/**
<p>This function is deprecated. Use background() instead.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.CheckState checkState(int column__0)" doc="/**
<p>Returns the check state of the label in the given <i>column</i>.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTreeWidgetItem child(int index__0)" doc="/**
<p>Returns the item at the given <i>index</i> in the list of the item's children.</p>

*/"/>
    <method name="public final int childCount()" doc="/**
<p>Returns the number of child items.</p>

*/"/>
    <method name="public final int columnCount()" doc="/**
<p>Returns the number of columns in the item.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.Qt.ItemFlags flags()" doc="/**
<p>Returns the flags used to describe the item. These determine whether the item can be checked, edited, and selected.</p>
<p>The default value for flags is Qt::ItemIsSelectable | Qt::ItemIsUserCheckable | Qt::ItemIsEnabled | Qt::ItemIsDragEnabled. If the item was constructed with a parent, flags will in addition contain Qt::ItemIsDropEnabled.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QFont font(int column__0)" doc="/**
<p>Returns the font used to render the text in the specified <i>column</i>.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QBrush foreground(int column__0)" doc="/**
<p>Returns the brush used to render the foreground (e.g. text) of the specified <i>column</i>.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QIcon icon(int column__0)" doc="/**
<p>Returns the icon that is displayed in the specified <i>column</i>.</p>

*/"/>
    <method name="public final int indexOfChild(com.trolltech.qt.gui.QTreeWidgetItem child__0)" doc="/**
<p>Returns the index of the given <i>child</i> in the item's list of children.</p>

*/"/>
    <method name="public final void insertChild(int index__0, com.trolltech.qt.gui.QTreeWidgetItem child__1)" doc="/**
<p>Inserts the <i>child</i> item at <i>index</i> in the list of children.</p>
<p>If the child has already been inserted somewhere else it wont be inserted again.</p>

*/"/>
    <method name="public final void insertChildren(int index__0, java.util.List&lt;com.trolltech.qt.gui.QTreeWidgetItem&gt; children__1)" doc="/**
<p>Inserts the given list of <i>children</i> into the list of the item children at <i>index</i> .</p>
<p>Children that have already been inserted somewhere else wont be inserted.</p>

*/"/>
    <method name="public final boolean isExpanded()" doc="/**
<p>Returns true if the item is expanded, otherwise returns false.</p>

*/"/>
    <method name="public final boolean isHidden()" doc="/**
<p>Returns true if the item is hidden, otherwise returns false.</p>

*/"/>
    <method name="public final boolean isSelected()" doc="/**
<p>Returns true if the item is selected, otherwise returns false.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTreeWidgetItem parent()" doc="/**
<p>Returns the item's parent.</p>

*/"/>
    <method name="public final void setBackground(int column__0, com.trolltech.qt.gui.QBrush brush__1)" doc="/**
<p>Sets the background brush of the label in the given <i>column</i> to the specified <i>brush</i>.</p>

*/"/>
    <method name="public final void setBackgroundColor(int column__0, com.trolltech.qt.gui.QColor color__1)" doc="/**
<p>This function is deprecated. Use setBackground() instead.</p>

*/"/>
    <method name="public final void setCheckState(int column__0, com.trolltech.qt.core.Qt.CheckState state__1)" doc="/**
<p>Sets the item in the given <i>column</i> check state to be <i>state</i>.</p>

*/"/>
    <method name="public final void setExpanded(boolean expand__0)" doc="/**
<p>Expands the item if <i>expand</i> is true, otherwise collapses the item.</p>

*/"/>
    <method name="public final void setFlags(com.trolltech.qt.core.Qt.ItemFlags flags__0)" doc="/**
<p>Sets the flags for the item to the given <i>flags</i>. These determine whether the item can be selected or modified.</p>

*/"/>
    <method name="public final void setFont(int column__0, com.trolltech.qt.gui.QFont font__1)" doc="/**
<p>Sets the font used to display the text in the given <i>column</i> to the given <i>font</i>.</p>

*/"/>
    <method name="public final void setForeground(int column__0, com.trolltech.qt.gui.QBrush brush__1)" doc="/**
<p>Sets the foreground brush of the label in the given <i>column</i> to the specified <i>brush</i>.</p>

*/"/>
    <method name="public final void setHidden(boolean hide__0)" doc="/**
<p>Hides the item if <i>hide</i> is true, otherwise shows the item.</p>

*/"/>
    <method name="public final void setIcon(int column__0, com.trolltech.qt.gui.QIcon icon__1)" doc="/**
<p>Sets the icon to be displayed in the given <i>column</i> to <i>icon</i>.</p>

*/"/>
    <method name="public final void setSelected(boolean select__0)" doc="/**
<p>Sets the selected state of the item to <i>select</i>.</p>

*/"/>
    <method name="public final void setSizeHint(int column__0, com.trolltech.qt.core.QSize size__1)" doc="/**
<p>Sets the size hint for the tree item in the given <i>column</i> to be <i>size</i>. If no size hint is set, the item delegate will compute the size hint based on the item data.</p>

*/"/>
    <method name="public final void setStatusTip(int column__0, java.lang.String statusTip__1)" doc="/**
<p>Sets the status tip for the given <i>column</i> to the given <i>statusTip</i>. QTreeWidget mouse tracking needs to be enabled for this feature to work.</p>

*/"/>
    <method name="public final void setText(int column__0, java.lang.String text__1)" doc="/**
<p>Sets the text to be displayed in the given <i>column</i> to the given <i>text</i>.</p>

*/"/>
    <method name="public final void setTextAlignment(int column__0, int alignment__1)" doc="/**
<p>Sets the text alignment for the label in the given <i>column</i> to the <i>alignment</i> specified (see Qt::AlignmentFlag).</p>

*/"/>
    <method name="public final void setTextColor(int column__0, com.trolltech.qt.gui.QColor color__1)" doc="/**
<p>This function is deprecated. Use setForeground() instead.</p>

*/"/>
    <method name="public final void setToolTip(int column__0, java.lang.String toolTip__1)" doc="/**
<p>Sets the tooltip for the given <i>column</i> to <i>toolTip</i>.</p>

*/"/>
    <method name="public final void setWhatsThis(int column__0, java.lang.String whatsThis__1)" doc="/**
<p>Sets the &quot;What's This?&quot; help for the given <i>column</i> to <i>whatsThis</i>.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QSize sizeHint(int column__0)" doc="/**
<p>Returns the size hint set for the tree item in the given <i>column</i> (see QSize).</p>

*/"/>
    <method name="public final void sortChildren(int column__0, com.trolltech.qt.core.Qt.SortOrder order__1)" doc="/**
<p>Sorts the children of the item using the given <i>order</i>, by the values in the given <i>column</i>.</p>

*/"/>
    <method name="public final java.lang.String statusTip(int column__0)" doc="/**
<p>Returns the status tip for the contents of the given <i>column</i>.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTreeWidgetItem takeChild(int index__0)" doc="/**
<p>Removes the item at <i>index</i> and returns it, otherwise return 0.</p>

*/"/>
    <method name="public final java.util.List&lt;com.trolltech.qt.gui.QTreeWidgetItem&gt; takeChildren()" doc="/**
<p>Removes the list of children and returns it, otherwise return an empty list.</p>

*/"/>
    <method name="public final java.lang.String text(int column__0)" doc="/**
<p>Returns the text in the specified <i>column</i>.</p>

*/"/>
    <method name="public final int textAlignment(int column__0)" doc="/**
<p>Returns the text alignment for the label in the given <i>column</i> (see Qt::AlignmentFlag).</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QColor textColor(int column__0)" doc="/**
<p>This function is deprecated. Use foreground() instead.</p>

*/"/>
    <method name="public final java.lang.String toolTip(int column__0)" doc="/**
<p>Returns the tool tip for the given <i>column</i>.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QTreeWidget treeWidget()" doc="/**
<p>Returns the tree widget that contains the item.</p>

*/"/>
    <method name="public final int type()" doc="/**
<p>Returns the type passed to the QTreeWidgetItem constructor.</p>

*/"/>
    <method name="public final java.lang.String whatsThis(int column__0)" doc="/**
<p>Returns the &quot;What's This?&quot; help for the contents of the given <i>column</i>.</p>

*/"/>
    <method name="public com.trolltech.qt.gui.QTreeWidgetItem clone()" doc="/**
<p>Creates a deep copy of the item and of its children.</p>

*/"/>
    <method name="public java.lang.Object data(int column__0, int role__1)" doc="/**
<p>Returns the value for the item's <i>column</i> and <i>role</i>.</p>

*/"/>
    <method name="public void read(com.trolltech.qt.core.QDataStream in__0)" doc="/**
<p>Reads the item from stream <i>in</i>. This only reads data into a single item.</p>

*/"/>
    <method name="public void setData(int column__0, int role__1, java.lang.Object value__2)" doc="/**
<p>Sets the value for the item's <i>column</i> and <i>role</i> to the given <i>value</i>.</p>
<p>The <i>role</i> describes the type of data specified by <i>value</i>, and is defined by the Qt::ItemDataRole enum.</p>

*/"/>
    <method name="public void write(com.trolltech.qt.core.QDataStream out__0)" doc="/**
<p>Writes the item to stream <i>out</i>. This only writes data from one single item.</p>

*/"/>
    <enum name="ItemType" doc="/**
<p>This enum describes the types that are used to describe tree widget items.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The default type for tree widget items.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The minimum value for custom types. Values below UserType are reserved by Qt.</td></tr>
</table></p>
<p>You can define new user types in QTreeWidgetItem subclasses to ensure that custom items are treated specially; for example, when items are sorted.</p>

*/"/>
</class>
