<class name="QInputDialog" doc="/**
<p>The QInputDialog class provides a simple convenience dialog to get a single value from the user.</p>
<p>The input value can be a string, a number or an item from a list. A label must be set to tell the user what they should enter.</p>
<p>Four static convenience functions are provided: getText(), getInteger(), getDouble() and getItem(). All the functions can be used in a similar way, for example:</p>
<pre>        bool ok;
        QString text = QInputDialog::getText(this, tr(&quot;QInputDialog::getText()&quot;),
                                             tr(&quot;User name:&quot;), QLineEdit::Normal,
                                             QDir::home().dirName(), &amp;ok);
        if (ok &amp;&amp; !text.isEmpty())
            textLabel-&gt;setText(text);</pre>
<p>The <tt>ok</tt> variable is set to true if the user clicks <b>OK</b>; otherwise it is set to false.</p>
<p align=&quote;center&quote;><font color=&quote;red&quote;>[Missing image inputdialogs.png]</font></p><p>The Standard Dialogs example shows how to use QInputDialog as well as other built-in Qt dialogs.</p>

*/">
    <method name="public final static double getDouble(com.trolltech.qt.gui.QWidget parent__0, java.lang.String title__1, java.lang.String label__2, double value__3, double minValue__4, double maxValue__5, int decimals__6, com.trolltech.qt.QNativePointer ok__7, com.trolltech.qt.core.Qt.WindowFlags f__8)" doc="/**
<p>Static convenience function to get a floating point number from the user. <i>title</i> is the text which is displayed in the title bar of the dialog. <i>label</i> is the text which is shown to the user (it should say what should be entered). <i>value</i> is the default floating point number that the line edit will be set to. <i>minValue</i> and <i>maxValue</i> are the minimum and maximum values the user may choose, and <i>decimals</i> is the maximum number of decimal places the number may have.</p>
<p>If <i>ok</i> is non-null, *<i>ok</i> will be set to true if the user pressed OK and to false if the user pressed <b>Cancel</b>. The dialog's parent is <i>parent</i>. The dialog will be modal and uses the widget flags <i>f</i>.</p>
<p>This function returns the floating point number which has been entered by the user.</p>
<p>Use this static function like this:</p>
<pre>        bool ok;
        double d = QInputDialog::getDouble(this, tr(&quot;QInputDialog::getDouble()&quot;),
                                           tr(&quot;Amount:&quot;), 37.56, -10000, 10000, 2, &amp;ok);
        if (ok)
            doubleLabel-&gt;setText(QString(&quot;$%1&quot;).arg(d));</pre>

*/"/>
    <method name="public final static int getInteger(com.trolltech.qt.gui.QWidget parent__0, java.lang.String title__1, java.lang.String label__2, int value__3, int minValue__4, int maxValue__5, int step__6, com.trolltech.qt.QNativePointer ok__7, com.trolltech.qt.core.Qt.WindowFlags f__8)" doc="/**
<p>Static convenience function to get an integer input from the user. <i>title</i> is the text which is displayed in the title bar of the dialog. <i>label</i> is the text which is shown to the user (it should say what should be entered). <i>value</i> is the default integer which the spinbox will be set to. <i>minValue</i> and <i>maxValue</i> are the minimum and maximum values the user may choose, and <i>step</i> is the amount by which the values change as the user presses the arrow buttons to increment or decrement the value.</p>
<p>If <i>ok</i> is non-null *<i>ok</i> will be set to true if the user pressed <b>OK</b> and to false if the user pressed <b>Cancel</b>. The dialog's parent is <i>parent</i>. The dialog will be modal and uses the widget flags <i>f</i>.</p>
<p>This function returns the integer which has been entered by the user.</p>
<p>Use this static function like this:</p>
<pre>        bool ok;
        int i = QInputDialog::getInteger(this, tr(&quot;QInputDialog::getInteger()&quot;),
                                         tr(&quot;Percentage:&quot;), 25, 0, 100, 1, &amp;ok);
        if (ok)
            integerLabel-&gt;setText(tr(&quot;%1%&quot;).arg(i));</pre>

*/"/>
    <method name="public final static java.lang.String getItem(com.trolltech.qt.gui.QWidget parent__0, java.lang.String title__1, java.lang.String label__2, java.util.List&lt;java.lang.String&gt; list__3, int current__4, boolean editable__5, com.trolltech.qt.QNativePointer ok__6, com.trolltech.qt.core.Qt.WindowFlags f__7)" doc="/**
<p>Static convenience function to let the user select an item from a string list. <i>title</i> is the text which is displayed in the title bar of the dialog. <i>label</i> is the text which is shown to the user (it should say what should be entered). <i>list</i> is the string list which is inserted into the combobox, and <i>current</i> is the number of the item which should be the current item. If <i>editable</i> is true the user can enter their own text; if <i>editable</i> is false the user may only select one of the existing items.</p>
<p>If <i>ok</i> is non-null <i>*a</i> ok will be set to true if the user pressed OK and to false if the user pressed <b>Cancel</b>. The dialog's parent is <i>parent</i>. The dialog will be modal and uses the widget flags <i>f</i>.</p>
<p>This function returns the text of the current item, or if <i>editable</i> is true, the current text of the combobox.</p>
<p>Use this static function like this:</p>
<pre>        QStringList items;
        items &lt;&lt; tr(&quot;Spring&quot;) &lt;&lt; tr(&quot;Summer&quot;) &lt;&lt; tr(&quot;Fall&quot;) &lt;&lt; tr(&quot;Winter&quot;);

        bool ok;
        QString item = QInputDialog::getItem(this, tr(&quot;QInputDialog::getItem()&quot;),
                                             tr(&quot;Season:&quot;), items, 0, false, &amp;ok);
        if (ok &amp;&amp; !item.isEmpty())
            itemLabel-&gt;setText(item);</pre>

*/"/>
    <method name="public final static java.lang.String getText(com.trolltech.qt.gui.QWidget parent__0, java.lang.String title__1, java.lang.String label__2, com.trolltech.qt.gui.QLineEdit.EchoMode echo__3, java.lang.String text__4, com.trolltech.qt.QNativePointer ok__5, com.trolltech.qt.core.Qt.WindowFlags f__6)" doc="/**
<p>Static convenience function to get a string from the user. <i>title</i> is the text which is displayed in the title bar of the dialog. <i>label</i> is the text which is shown to the user (it should say what should be entered). <i>text</i> is the default text which is placed in the line edit. The <i>mode</i> is the echo mode the line edit will use. If <i>ok</i> is non-null <i>*a</i> ok will be set to true if the user pressed <b>OK</b> and to false if the user pressed <b>Cancel</b>. The dialog's parent is <i>parent</i>. The dialog will be modal and uses the widget flags <i>f</i>.</p>
<p>This function returns the text which has been entered in the line edit. It will not return an empty string.</p>
<p>Use this static function like this:</p>
<pre>        bool ok;
        QString text = QInputDialog::getText(this, tr(&quot;QInputDialog::getText()&quot;),
                                             tr(&quot;User name:&quot;), QLineEdit::Normal,
                                             QDir::home().dirName(), &amp;ok);
        if (ok &amp;&amp; !text.isEmpty())
            textLabel-&gt;setText(text);</pre>

*/"/>
</class>
