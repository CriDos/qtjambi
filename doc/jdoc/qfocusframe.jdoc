<class name="QFocusFrame" doc="/**
<p>The QFocusFrame widget provides a focus frame which can be outside of a widget's normal paintable area.</p>
<p>Normally an application will not need to create its own QFocusFrame as QStyle will handle this detail for you. A style writer can optionally use a QFocusFrame to have a focus area outside of the widget's paintable geometry. In this way space need not be reserved for the widget to have focus but only set on a QWidget with QFocusFrame::setWidget. It is, however, legal to create your own QFocusFrame on a custom widget and set its geometry manually via QWidget::setGeometry however you will not get auto-placement when the focused widget changes size or placement.</p>

*/">
    <method name="public QFocusFrame(com.trolltech.qt.gui.QWidget parent__0)" doc="/**
<p>Constructs a QFocusFrame.</p>
<p>The focus frame will not monitor <i>parent</i> for updates but rather can be placed manually or by using QFocusFrame::setWidget. A QFocusFrame sets Qt::WA_NoChildEventsForParent attribute; as a result the parent will not receive a QEvent::ChildInserted event, this will make it possible to manually set the geometry of the QFocusFrame inside of a QSplitter or other child event monitoring widget.</p>

*/"/>
    <method name="public final void setWidget(com.trolltech.qt.gui.QWidget widget__0)" doc="/**
<p>QFocusFrame will track changes to <i>widget</i> and resize itself automatically. If the monitored widget's parent changes, QFocusFrame will follow the widget and place itself around the widget automatically. If the monitored widget is deleted, QFocusFrame will set it to zero.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QWidget widget()" doc="/**
<p>Returns the currently monitored widget for automatically resize and update.</p>

*/"/>
    <method name="public boolean event(com.trolltech.qt.core.QEvent e__0)"/>
    <method name="public boolean eventFilter(com.trolltech.qt.core.QObject arg__0, com.trolltech.qt.core.QEvent arg__1)"/>
    <method name="protected void paintEvent(com.trolltech.qt.gui.QPaintEvent arg__0)"/>
</class>
