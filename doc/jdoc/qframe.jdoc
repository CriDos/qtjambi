<class name="QFrame" doc="/**
<p>The QFrame class is the base class of widgets that can have a frame.</p>
<p>QMenu uses this to &quot;raise&quot; the menu above the surrounding screen. QProgressBar has a &quot;sunken&quot; look. QLabel has a flat look. The frames of widgets like these can be changed.</p>
<pre>    QLabel label(...);
    label.setFrameStyle(QFrame::Panel | QFrame::Raised);
    label.setLineWidth(2);

    QProgressBar pbar(...);
    label.setFrameStyle(QFrame::NoFrame);</pre>
<p>The QFrame class can also be used directly for creating simple placeholder frames without any contents.</p>
<p>The frame style is specified by a frame shape and a shadow style that is used to visually separate the frame from surrounding widgets. These properties can be set together using the setFrameStyle() function and read with frameStyle().</p>
<p>The frame shapes are NoFrame, Box, Panel, StyledPanel, HLine and VLine; the shadow styles are Plain, Raised and Sunken.</p>
<p>A frame widget has three attributes that describe the thickness of the border: lineWidth, midLineWidth, and frameWidth.</p>
<ul>
<li>The line width is the width of the frame border. It can be modified to customize the frame's appearance.</li>
<li>The mid-line width specifies the width of an extra line in the middle of the frame, which uses a third color to obtain a special 3D effect. Notice that a mid-line is only drawn for Box, HLine and VLine frames that are raised or sunken.</li>
<li>The frame width is determined by the frame style, and the frameWidth() function is used to obtain the value defined for the style used.</li>
</ul>
<p>The margin between the frame and the contents of the frame can be customized with the QWidget::setContentsMargins() function.</p>
<a name=&quote;picture&quote;></a><p>This table shows some of the combinations of styles and line widths:</p>
<p align=&quote;center&quote;><font color=&quote;red&quote;>[Missing image frames.png]</font></p>
*/">
    <method name="public QFrame(com.trolltech.qt.gui.QWidget parent__0, com.trolltech.qt.core.Qt.WindowFlags f__1)" doc="/**
<p>Constructs a frame widget with frame style NoFrame and a 1-pixel frame width.</p>
<p>The <i>parent</i> and <i>f</i> arguments are passed to the QWidget constructor.</p>

*/"/>
    <method name="protected final void drawFrame(com.trolltech.qt.gui.QPainter arg__0)" doc="/**
<p>Mostly for the sake of Q3Frame</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QRect frameRect()"/>
    <method name="public final com.trolltech.qt.gui.QFrame.Shadow frameShadow()"/>
    <method name="public final com.trolltech.qt.gui.QFrame.Shape frameShape()"/>
    <method name="public final int frameStyle()" doc="/**
<p>Returns the frame style.</p>
<p>The default value is QFrame::NoFrame.</p>

*/"/>
    <method name="public final int frameWidth()"/>
    <method name="public final int lineWidth()"/>
    <method name="public final int midLineWidth()"/>
    <method name="public final void setFrameRect(com.trolltech.qt.core.QRect arg__0)"/>
    <method name="public final void setFrameShadow(com.trolltech.qt.gui.QFrame.Shadow arg__0)"/>
    <method name="public final void setFrameShape(com.trolltech.qt.gui.QFrame.Shape arg__0)"/>
    <method name="public final void setFrameStyle(int arg__0)" doc="/**
<p>Sets the frame style to <i>style</i>.</p>
<p>The <i>style</i> is the bitwise OR between a frame shape and a frame shadow style. See the picture of the frames in the main class documentation.</p>
<p>The frame shapes are given in QFrame::Shape and the shadow styles in QFrame::Shadow.</p>
<p>If a mid-line width greater than 0 is specified, an additional line is drawn for Raised or Sunken Box, HLine, and VLine frames. The mid-color of the current color group is used for drawing middle lines.</p>

*/"/>
    <method name="public final void setLineWidth(int arg__0)"/>
    <method name="public final void setMidLineWidth(int arg__0)"/>
    <method name="protected void changeEvent(com.trolltech.qt.core.QEvent arg__0)"/>
    <method name="public boolean event(com.trolltech.qt.core.QEvent e__0)"/>
    <method name="protected void paintEvent(com.trolltech.qt.gui.QPaintEvent arg__0)"/>
    <method name="public com.trolltech.qt.core.QSize sizeHint()"/>
    <enum name="StyleMask" doc="/**
<p>This enum defines two constants that can be used to extract the two components of frameStyle():</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The Shadow part of frameStyle()</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The Shape part of frameStyle()</td></tr>
</table></p>
<p>Normally, you don't need to use these, since frameShadow() and frameShape() already extract the Shadow and the Shape parts of frameStyle().</p>

*/"/>
    <enum name="Shape" doc="/**
<p>This enum type defines the shapes of frame available.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>QFrame draws nothing</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>QFrame draws a box around its contents</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>QFrame draws a panel to make the contents appear raised or sunken</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>draws a rectangular panel with a look that depends on the current GUI style. It can be raised or sunken.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>QFrame draws a horizontal line that frames nothing (useful as separator)</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>QFrame draws a vertical line that frames nothing (useful as separator)</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>draws a rectangular panel that can be raised or sunken like those in Windows 95. Specifying this shape sets the line width to 2 pixels. WinPanel is provided for compatibility. For GUI style independence we recommend using StyledPanel instead.</td></tr>
</table></p>
<p>When it does not call QStyle, Shape interacts with QFrame::Shadow, the lineWidth() and the midLineWidth() to create the total result. See the picture of the frames in the main class documentation.</p>

*/"/>
    <enum name="Shadow" doc="/**
<p>This enum type defines the types of shadow that are used to give a 3D effect to frames.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>the frame and contents appear level with the surroundings; draws using the palette foreground color (without any 3D effect)</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>the frame and contents appear raised; draws a 3D raised line using the light and dark colors of the current color group</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>the frame and contents appear sunken; draws a 3D sunken line using the light and dark colors of the current color group</td></tr>
</table></p>
<p>Shadow interacts with QFrame::Shape, the lineWidth() and the midLineWidth(). See the picture of the frames in the main class documentation.</p>

*/"/>
</class>
