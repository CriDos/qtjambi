<class name="QRadialGradient" doc="/**
<p>The QRadialGradient class is used in combination with QBrush to specify a radial gradient brush.</p>
<p>Radial gradients interpolate colors between a focal point and end points on a circle surrounding it. Outside the end points the gradient is either padded, reflected or repeated depending on the currently set spread method:</p>
<p><table align=&quote;center&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; border=&quote;0&quote;>
<tr valign=&quote;top&quote; class=&quote;odd&quote;><td><font color=&quote;red&quote;>[Missing image qradialgradient-pad.png]</font></td><td><font color=&quote;red&quote;>[Missing image qradialgradient-reflect.png]</font></td><td><font color=&quote;red&quote;>[Missing image qradialgradient-repeat.png]</font></td></tr>
<tr valign=&quote;top&quote; class=&quote;even&quote;><td>PadSpread (default)</td><td>ReflectSpread</td><td>RepeatSpread</td></tr>
</table></p>
<p>The colors in a gradient is defined using stop points of the QGradientStop type, i.e. a position and a color. Use the QGradient::setColorAt() or the QGradient::setStops() function to define the stop points. It is the gradient's complete set of stop points that describes how the gradient area should be filled. If no stop points have been specified, a gradient of black at 0 to white at 1 is used.</p>
<p>In addition to the functions inherited from QGradient, the QRadialGradient class provides the center(), focalPoint() and radius() functions returning the gradient's center, focal point and radius respectively.</p>

*/">
    <method name="public QRadialGradient()" doc="/**
<p>Constructs a radial gradient with the center and focal point at (0, 0) with a radius of 1.</p>

*/"/>
    <method name="public QRadialGradient(com.trolltech.qt.core.QPointF center__0, double radius__1)" doc="/**
<p>Constructs a radial gradient with the given <i>center</i>, <i>radius</i> and the focal point in the circle center.</p>

*/"/>
    <method name="public QRadialGradient(double cx__0, double cy__1, double radius__2, double fx__3, double fy__4)" doc="/**
<p>Constructs a radial gradient with the given center (<i>cx</i>, <i>cy</i>), <i>radius</i> and focal point (<i>fx</i>, <i>fy</i>).</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QPointF center()" doc="/**
<p>Returns the center of this radial gradient in logical coordinates.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QPointF focalPoint()" doc="/**
<p>Returns the focal point of this radial gradient in logical coordinates.</p>

*/"/>
    <method name="public final double radius()" doc="/**
<p>Returns the radius of this radial gradient in logical coordinates.</p>

*/"/>
    <method name="public final void setCenter(com.trolltech.qt.core.QPointF center__0)" doc="/**
<p>Sets the center of this radial gradient in logical coordinates to <i>center</i>.</p>

*/"/>
    <method name="public final void setCenter(double x__0, double y__1)" doc="/**
<p>Sets the center of this radial gradient in logical coordinates to (<i>x</i>, <i>y</i>).</p>

*/"/>
    <method name="public final void setFocalPoint(com.trolltech.qt.core.QPointF focalPoint__0)" doc="/**
<p>Sets the focal point of this radial gradient in logical coordinates to <i>focalPoint</i>.</p>

*/"/>
    <method name="public final void setFocalPoint(double x__0, double y__1)" doc="/**
<p>Sets the focal point of this radial gradient in logical coordinates to (<i>x</i>, <i>y</i>).</p>

*/"/>
    <method name="public final void setRadius(double radius__0)" doc="/**
<p>Sets the radius of this radial gradient in logical coordinates to <i>radius</i></p>

*/"/>
</class>
