<class name="QStyleOptionButton" doc="/**
<p>The QStyleOptionButton class is used to describe the parameters for drawing buttons.</p>
<p>QStyleOptionButton contains all the information that QStyle functions need to draw graphical elements like QPushButton, QCheckBox, and QRadioButton.</p>
<p>For performance reasons, the access to the member variables is direct (i.e., using the <tt>.</tt> or <tt>-&gt;</tt> operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</p>
<p>For an example demonstrating how style options can be used, see the Styles example.</p>

*/">
    <method name="public QStyleOptionButton(com.trolltech.qt.gui.QStyleOptionButton other__0)" doc="/**
<p>Constructs a copy of the <i>other</i> style option.</p>

*/"/>
    <method name="public QStyleOptionButton()" doc="/**
<p>Constructs a QStyleOptionButton, initializing the members variables to their default values.</p>

*/"/>
    <method name="protected QStyleOptionButton(int version__0)"/>
    <enum name="StyleOptionVersion" doc="/**
<p>This enum is used to hold information about the version of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>1</td></tr>
</table></p>
<p>The version is used by QStyleOption subclasses to implement extensions without breaking compatibility. If you use qstyleoption_cast(), you normally don't need to check it.</p>

*/"/>
    <enum name="ButtonFeature" doc="/**
<p>This enum describles the different types of features a push button can have.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates a normal push button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates a flat push button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates that the button has a drop down menu.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates that the button is a default button.</td></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>Indicates that the button is an auto default button.</td></tr>
</table></p>

*/"/>
    <enum name="StyleOptionType" doc="/**
<p>This enum is used to hold information about the type of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The type of style option provided (SO_Button for this class).</td></tr>
</table></p>
<p>The type is used internally by QStyleOption, its subclasses, and qstyleoption_cast() to determine the type of style option. In general you do not need to worry about this unless you want to create your own QStyleOption subclass and your own styles.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QSize iconSize()" doc="/**
<p>The size of the icon for the button</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final void setIconSize(com.trolltech.qt.core.QSize iconSize)" doc="/**
<p>The size of the icon for the button</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QStyleOptionButton.ButtonFeatures features()" doc="/**
<p>a bitwise OR of the features that describe this button.</p>

*/"/>
    <method name="public final void setFeatures(com.trolltech.qt.gui.QStyleOptionButton.ButtonFeatures features)" doc="/**
<p>a bitwise OR of the features that describe this button.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QIcon icon()" doc="/**
<p>The icon of the button.</p>
<p>The default value is an empty icon, i.e. an icon with neither a pixmap nor a filename.</p>

*/"/>
    <method name="public final void setIcon(com.trolltech.qt.gui.QIcon icon)" doc="/**
<p>The icon of the button.</p>
<p>The default value is an empty icon, i.e. an icon with neither a pixmap nor a filename.</p>

*/"/>
    <method name="public final java.lang.String text()" doc="/**
<p>The text of the button.</p>
<p>The default value is an empty string.</p>

*/"/>
    <method name="public final void setText(java.lang.String text)" doc="/**
<p>The text of the button.</p>
<p>The default value is an empty string.</p>

*/"/>
</class>
