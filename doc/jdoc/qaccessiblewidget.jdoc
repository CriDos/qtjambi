<class name="QAccessibleWidget" doc="/**
<p>The QAccessibleWidget class implements the QAccessibleInterface for QWidgets.</p>
<p>This class is convenient to use as a base class for custom implementations of QAccessibleInterfaces that provide information about widget objects.</p>
<p>The class provides functions to retrieve the parentObject() (the widget's parent widget), and the associated widget(). Controlling signals can be added with addControllingSignal(), and setters are provided for various aspects of the interface implementation, for example setValue(), setDescription(), setAccelerator(), and setHelp().</p>

*/">
    <method name="public QAccessibleWidget(com.trolltech.qt.gui.QWidget o__0, com.trolltech.qt.gui.QAccessible.Role r__1, java.lang.String name__2)" doc="/**
<p>Creates a QAccessibleWidget object for widget <i>w</i>. <i>role</i> and <i>name</i> are optional parameters that set the object's role and name properties.</p>

*/"/>
    <method name="protected final void addControllingSignal(java.lang.String signal__0)" doc="/**
<p>Registers <i>signal</i> as a controlling signal.</p>
<p>An object is a Controller to any other object connected to a controlling signal.</p>

*/"/>
    <method name="protected final com.trolltech.qt.core.QObject parentObject()" doc="/**
<p>Returns the associated widget's parent object, which is either the parent widget, or qApp for top-level widgets.</p>

*/"/>
    <method name="protected final void setAccelerator(java.lang.String accel__0)" doc="/**
<p>Sets the accelerator of this interface implementation to <i>accel</i>.</p>
<p>The default implementation of text() returns the set value for the Accelerator text.</p>
<p>Note that the object wrapped by this interface is not modified.</p>

*/"/>
    <method name="protected final void setDescription(java.lang.String desc__0)" doc="/**
<p>Sets the description of this interface implementation to <i>desc</i>.</p>
<p>The default implementation of text() returns the set value for the Description text.</p>
<p>Note that the object wrapped by this interface is not modified.</p>

*/"/>
    <method name="protected final void setHelp(java.lang.String help__0)" doc="/**
<p>Sets the help of this interface implementation to <i>help</i>.</p>
<p>The default implementation of text() returns the set value for the Help text.</p>
<p>Note that the object wrapped by this interface is not modified.</p>

*/"/>
    <method name="protected final void setValue(java.lang.String value__0)" doc="/**
<p>Sets the value of this interface implementation to <i>value</i>.</p>
<p>The default implementation of text() returns the set value for the Value text.</p>
<p>Note that the object wrapped by this interface is not modified.</p>

*/"/>
    <method name="protected final com.trolltech.qt.gui.QWidget widget()" doc="/**
<p>Returns the associated widget.</p>

*/"/>
    <method name="public java.lang.String actionText(int action__0, com.trolltech.qt.gui.QAccessible.Text t__1, int child__2)" doc="/**
<p>Returns the text property <i>t</i> of the action <i>action</i> supported by the object, or of the object's child if <i>child</i> is not 0.</p>

*/"/>
    <method name="public int childAt(int x__0, int y__1)"/>
    <method name="public int childCount()"/>
    <method name="public boolean doAction(int action__0, int child__1, java.util.List&lt;java.lang.Object&gt; params__2)" doc="/**
<p>Asks the object, or the object's <i>child</i> if <i>child</i> is not 0, to execute <i>action</i> using the parameters, <i>params</i>. Returns true if the action could be executed; otherwise returns false.</p>
<p><i>action</i> can be a predefined or a custom action.</p>

*/"/>
    <method name="public int indexOfChild(com.trolltech.qt.gui.QAccessibleInterface child__0)"/>
    <method name="public int navigate(com.trolltech.qt.gui.QAccessible.RelationFlag rel__0, int entry__1, com.trolltech.qt.QNativePointer target__2)" doc="/**
<p>Navigates from this object to an object that has a relationship <i>relation</i> to this object, and returns the respective object in <i>target</i>. It is the caller's responsibility to delete *<i>target</i> after use.</p>
<p>If an object is found <i>target</i> is set to point to the object, and the index of the child in <i>target</i> is returned. The return value is 0 if <i>target</i> itself is the requested object. <i>target</i> is set to null if this object is the target object (i.e. the requested object is a handled by this object).</p>
<p>If no object is found <i>target</i> is set to null, and the return value is -1.</p>
<p>The <i>entry</i> parameter has two different meanings:</p>
<ul>
<li><i>Hierarchical and Logical relationships</i> -- if multiple objects with the requested relationship exist <i>entry</i> specifies which one to return. <i>entry</i> is 1-based, e.g. use 1 to get the first (and possibly only) object with the requested relationship.<p>The following code demonstrates how to use this function to navigate to the first child of an object:</p>
<pre>    QAccessibleInterface *child = 0;
    int targetChild = object-&gt;navigate(Child, 1, &amp;child);
    if (child) {
        <span class=&quote;comment&quote;>// ...</span>
        delete child;
    }</pre>
</li>
<li><i>Geometric relationships</i> -- the index of the child from which to start navigating in the specified direction. <i>entry</i> can be 0 to navigate to a sibling of this object, or non-null to navigate within contained children that don't provide their own accessible information.</li>
</ul>
<p>Note that the <tt>Descendent</tt> value for <i>relation</i> is not supported.</p>
<p>All objects support navigation.</p>

*/"/>
    <method name="public com.trolltech.qt.core.QRect rect(int child__0)"/>
    <method name="public com.trolltech.qt.gui.QAccessible.Relation relationTo(int child__0, com.trolltech.qt.gui.QAccessibleInterface other__1, int otherChild__2)"/>
    <method name="public com.trolltech.qt.gui.QAccessible.Role role(int child__0)"/>
    <method name="public com.trolltech.qt.gui.QAccessible.State state(int child__0)"/>
    <method name="public java.lang.String text(com.trolltech.qt.gui.QAccessible.Text t__0, int child__1)" doc="/**
<p>Returns the value of the text property <i>t</i> of the object, or of the object's child if <i>child</i> is not 0.</p>
<p>The Name is a string used by clients to identify, find or announce an accessible object for the user. All objects must have a name that is unique within their container.</p>
<p>An accessible object's Description provides textual information about an object's visual appearance. The description is primarily used to provide greater context for vision-impaired users, but is also used for context searching or other applications. Not all objects have a description. An &quot;OK&quot; button would not need a description, but a toolbutton that shows a picture of a smiley would.</p>
<p>The Value of an accessible object represents visual information contained by the object, e.g. the text in a line edit. Usually, the value can be modified by the user. Not all objects have a value, e.g. static text labels don't, and some objects have a state that already is the value, e.g. toggle buttons.</p>
<p>The Help text provides information about the function and usage of an accessible object. Not all objects provide this information.</p>
<p>The Accelerator is a keyboard shortcut that activates the object's default action. A keyboard shortcut is the underlined character in the text of a menu, menu item or widget, and is either the character itself, or a combination of this character and a modifier key like Alt, Ctrl or Shift. Command controls like tool buttons also have shortcut keys and usually display them in their tooltip.</p>
<p>All objects provide a string for Name.</p>

*/"/>
</class>
