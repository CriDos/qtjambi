<class name="QGraphicsRectItem" doc="/**
<p>The QGraphicsRectItem class provides a rectangle item that you can add to a QGraphicsScene.</p>
<p>To set the item's rectangle, pass a QRectF to QGraphicsRectItem's constructor, or call the setRect() function. The rect() function returns the current rectangle.</p>
<p align=&quote;center&quote;><font color=&quote;red&quote;>[Missing image graphicsview-rectitem.png]</font></p><p>QGraphicsRectItem uses the rectangle and the pen width to provide a reasonable implementation of boundingRect(), shape(), and contains(). The paint() function draws the rectangle using the item's associated pen and brush, which you can set by calling the setPen() and setBrush() functions.</p>

*/">
    <method name="public QGraphicsRectItem(double x__0, double y__1, double w__2, double h__3, com.trolltech.qt.gui.QGraphicsItemInterface parent__4, com.trolltech.qt.gui.QGraphicsScene scene__5)" doc="/**
<p>Constructs a QGraphicsRectItem with a default rectangle defined by (<i>x</i>, <i>y</i>) and the given <i>width</i> and <i>height</i>.</p>
<p>The <i>parent</i> parameter is passed to QAbstractGraphicsShapeItem's constructor.</p>

*/"/>
    <method name="public QGraphicsRectItem(com.trolltech.qt.gui.QGraphicsItemInterface parent__0, com.trolltech.qt.gui.QGraphicsScene scene__1)" doc="/**
<p>Constructs a QGraphicsRectItem. The <i>parent</i> and <i>scene</i> parameters are passed to QAbstractGraphicsShapeItem's constructor.</p>

*/"/>
    <method name="public QGraphicsRectItem(com.trolltech.qt.core.QRectF rect__0, com.trolltech.qt.gui.QGraphicsItemInterface parent__1, com.trolltech.qt.gui.QGraphicsScene scene__2)" doc="/**
<p>Constructs a QGraphicsRectItem, using <i>rect</i> as the default rectangle. The <i>parent</i> and <i>scene</i> parameters are passed to QAbstractGraphicsShapeItem's constructor.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QRectF rect()" doc="/**
<p>Returns the item's rectangle.</p>

*/"/>
    <method name="public final void setRect(com.trolltech.qt.core.QRectF rect__0)" doc="/**
<p>Sets the item's rectangle to be the given <i>rectangle</i>.</p>

*/"/>
    <method name="public final void setRect(double x__0, double y__1, double w__2, double h__3)" doc="/**
<p>Sets the item's rectangle to the rectangle defined by (<i>x</i>, <i>y</i>) and the given <i>width</i> and <i>height</i>.</p>
<p>This convenience function is equivalent to calling <tt>setRect(QRectF(x, y, width, height))</tt></p>

*/"/>
    <method name="public com.trolltech.qt.core.QRectF boundingRect()"/>
    <method name="public boolean contains(com.trolltech.qt.core.QPointF point__0)"/>
    <method name="public java.lang.Object extension(java.lang.Object variant__0)"/>
    <method name="public boolean isObscuredBy(com.trolltech.qt.gui.QGraphicsItemInterface item__0)"/>
    <method name="public com.trolltech.qt.gui.QPainterPath opaqueArea()"/>
    <method name="public void paint(com.trolltech.qt.gui.QPainter painter__0, com.trolltech.qt.gui.QStyleOptionGraphicsItem option__1, com.trolltech.qt.gui.QWidget widget__2)"/>
    <method name="public void setExtension(com.trolltech.qt.gui.QGraphicsItem.Extension extension__0, java.lang.Object variant__1)" doc="/**
<p>Note: This is provided as a hook to avoid future problems related to adding virtual functions.</p>

*/"/>
    <method name="public com.trolltech.qt.gui.QPainterPath shape()"/>
    <method name="public boolean supportsExtension(com.trolltech.qt.gui.QGraphicsItem.Extension extension__0)" doc="/**
<p>Note: This is provided as a hook to avoid future problems related to adding virtual functions.</p>

*/"/>
    <method name="public int type()"/>
</class>
