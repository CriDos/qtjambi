<class name="QStyleOptionComboBox" doc="/**
<p>The QStyleOptionComboBox class is used to describe the parameter for drawing a combobox.</p>
<p>QStyleOptionButton contains all the information that QStyle functions need to draw QComboBox.</p>
<p>For performance reasons, the access to the member variables is direct (i.e., using the <tt>.</tt> or <tt>-&gt;</tt> operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</p>
<p>For an example demonstrating how style options can be used, see the Styles example.</p>

*/">
    <method name="public QStyleOptionComboBox(com.trolltech.qt.gui.QStyleOptionComboBox other__0)" doc="/**
<p>Constructs a copy of the <i>other</i> style option.</p>

*/"/>
    <method name="public QStyleOptionComboBox()" doc="/**
<p>Creates a QStyleOptionComboBox, initializing the members variables to their default values.</p>

*/"/>
    <method name="protected QStyleOptionComboBox(int version__0)"/>
    <enum name="StyleOptionVersion" doc="/**
<p>This enum is used to hold information about the version of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>1</td></tr>
</table></p>
<p>The version is used by QStyleOption subclasses to implement extensions without breaking compatibility. If you use qstyleoption_cast(), you normally don't need to check it.</p>

*/"/>
    <enum name="StyleOptionType" doc="/**
<p>This enum is used to hold information about the type of the style option, and is defined for each QStyleOption subclass.</p>
<p><table border=&quote;1&quote; cellpadding=&quote;2&quote; cellspacing=&quote;1&quote; width=&quote;100%&quote;>
<tr><th width=&quote;25%&quote;>Constant</th><th width=&quote;15%&quote;>Value</th><th width=&quote;60%&quote;>Description</th></tr>
<tr><td valign=&quote;top&quote;><tt></tt></td><td align=&quote;center&quote; valign=&quote;top&quote;>&nbsp;</td><td valign=&quote;top&quote;>The type of style option provided (SO_ComboBox for this class).</td></tr>
</table></p>
<p>The type is used internally by QStyleOption, its subclasses, and qstyleoption_cast() to determine the type of style option. In general you do not need to worry about this unless you want to create your own QStyleOption subclass and your own styles.</p>

*/"/>
    <method name="public final java.lang.String currentText()" doc="/**
<p>the text for the current item of the combo box</p>
<p>The default value is an empty string.</p>

*/"/>
    <method name="public final void setCurrentText(java.lang.String currentText)" doc="/**
<p>the text for the current item of the combo box</p>
<p>The default value is an empty string.</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QSize iconSize()" doc="/**
<p>the icon size for the current item of the combo box</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final void setIconSize(com.trolltech.qt.core.QSize iconSize)" doc="/**
<p>the icon size for the current item of the combo box</p>
<p>The default value is QSize(-1, -1), i.e. an invalid size.</p>

*/"/>
    <method name="public final boolean editable()" doc="/**
<p>whether or not the combobox is editable or not; the default value is false</p>

*/"/>
    <method name="public final void setEditable(boolean editable)" doc="/**
<p>whether or not the combobox is editable or not; the default value is false</p>

*/"/>
    <method name="public final boolean frame()" doc="/**
<p>indicates whether whether the combo box has a frame; the default value is true</p>

*/"/>
    <method name="public final void setFrame(boolean frame)" doc="/**
<p>indicates whether whether the combo box has a frame; the default value is true</p>

*/"/>
    <method name="public final com.trolltech.qt.core.QRect popupRect()" doc="/**
<p>The popup rectangle for the combobox.</p>
<p>The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</p>
<p>This variable is currently unused. You can safely ignore it.</p>

*/"/>
    <method name="public final void setPopupRect(com.trolltech.qt.core.QRect popupRect)" doc="/**
<p>The popup rectangle for the combobox.</p>
<p>The default value is a null rectangle, i.e. a rectangle with both the width and the height set to 0.</p>
<p>This variable is currently unused. You can safely ignore it.</p>

*/"/>
    <method name="public final com.trolltech.qt.gui.QIcon currentIcon()" doc="/**
<p>the icon for the current item of the combo box</p>
<p>The default value is an empty icon, i.e. an icon with neither a pixmap nor a filename.</p>

*/"/>
    <method name="public final void setCurrentIcon(com.trolltech.qt.gui.QIcon currentIcon)" doc="/**
<p>the icon for the current item of the combo box</p>
<p>The default value is an empty icon, i.e. an icon with neither a pixmap nor a filename.</p>

*/"/>
</class>
