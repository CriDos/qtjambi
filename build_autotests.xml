<!--
    TODO:
    - We work the target names into "tests.*" namespace "compile.java" => "tests.compile.java".
-->
<project default="all" basedir=".">

    <property environment="env"/>

    <tstamp/>

    <property file="tests.properties"/>

    <property name="jambiLib" value="${outputDir}/tests/lib" />
    <property name="qtLib" value="${outputDir}/platform-output/lib" />
    <property name="junit.exists" value="tests.junit.exists" />

    <condition property="qtjambi.osx">
        <os family="mac"/>
    </condition>

    <target name="help"
                description="Provides detailed help.">
        <echo>Generates an executable .jar file that runs the generator example...</echo>
    </target>

    <target name="tests.clean" description="Cleans built test files">
        <delete dir="${outputDir}/tests/autotest-generator"/>
        <delete dir="${outputDir}/tests/autotests"/>
        <delete dir="${outputDir}/tests/auto"/>
        <delete dir="${outputDir}/tests"/>
    </target>

    <target name="reports.clean" description="Cleans the Unit Test results">
        <delete dir="${outputDir}/tests/junitxml"/>
        <delete dir="${outputDir}/tests/TestResults"/>
    </target>

    <target name="check.junit">
        <available property="junit.path" type="file" file="${tests.junit}"/>
        <fail message="Path to JUnit is required to build the Unit Tests. Specify the path in tests.properties">
            <condition>
                    <not>
                        <isset property="junit.path"/>
                    </not>
            </condition>
        </fail>
    </target>

    <target name="compile.native.generator" depends="init">
        <mkdir dir="${outputDir}/tests/autotest-generator"/>
        <generator dir="${generatorDir}"
                debugTools="${qtjambi.debug-tools}"
                inputDirectory="${generatorDir}${psep}${basedir}/autotestlib"
                outputDirectory="${outputDir}/tests/autotest-generator"
                generatorDirectory="${generator.builddir}"
                typesystem="${basedir}/autotestlib/build.txt"
                header="${basedir}/autotestlib/global.h"
                qtincludedirectory="${qtjambi.qt.includedir}"
                qtlibdirectory="${qtjambi.tools.qt.libdir}"
                includepaths="${basedir}/autotestlib${psep}${generator.includepaths}"
                outputPreprocessFile="preprocessed_autotests.tmp"
            />
    </target>

    <target name="compile.native" depends="init">
        <qmake  dir="${outputDir}/tests/autotest-generator"
                pro="${basedir}/autotestlib/autotestlib.pro"
                config="${qtjambi.configuration}"
                qtconfig="${qtjambi.qtconfig}"
                debugTools="${qtjambi.debug-tools}"
                qmakebinary="${qmake.binary}"/>

        <make dir="${outputDir}/tests/autotest-generator" />
    </target>

    <target name="compile.deps">
<!--        <mkdir dir="${outputDir}/tests/autotests" />
        <javac destdir="${outputDir}/tests/autotests" debug="true"
                includeantruntime="false"
                source="1.5" target="1.5">
            <classpath>
                <pathelement location="${basedir}/jars/qtjambi.jar" />
                <pathelement location="." />
            </classpath>
        </javac> -->
    </target>

    <target name="compile.java" depends="init, compile.deps, check.junit">
        <mkdir dir="${outputDir}/tests/auto"/>
        <!-- encoding="UTF-8" required due to some file tests (I18N) using
        no ASCII/ISO-8859-1 characters and the MacOSX Java using "MacRoman"
        character set by default. -->
        <javac destdir="${outputDir}/tests/auto" debug="true"
                includeantruntime="false"
                source="1.5" target="1.5" encoding="UTF-8">
            <compilerarg value="-Xlint:deprecation" />
            <compilerarg value="-Xlint:unchecked" />
            <classpath>
                <pathelement location="${basedir}/jars/qtjambi.jar" />
                <pathelement location="${tests.junit}" />
                <pathelement location="${outputDir}/tests/autotests" />
                <pathelement location="${basedir}/src/java/autotest" />
            </classpath>
            <src path="${basedir}/src/java/autotest"/>
            <!-- pick up the generated code from compile.native -->
            <src path="${outputDir}/tests/autotest-generator/java"/>
            <include name="com/trolltech/autotests/**/*.java"/>
            <include name="com/trolltech/generatortests/**/*.java"/>
            <exclude name="com/trolltech/unittests/**/*.java"/>
            <exclude name="com/trolltech/autotests/**/*QPlastiqueStyle.java" if="qt.feature.QT_NO_STYLE_PLASTIQUE"/>
        </javac>
        <mkdir dir="${outputDir}/tests/unit"/>
        <javac destdir="${outputDir}/tests/unit" debug="true"
                includeantruntime="false"
                source="1.5" target="1.5" encoding="UTF-8">
            <compilerarg value="-Xlint:deprecation" />
            <compilerarg value="-Xlint:unchecked" />
            <classpath>
                <pathelement location="${basedir}/jars/qtjambi.jar" />
                <pathelement location="${tests.junit}" />
                <pathelement location="${outputDir}/tests/unittests" />
                <pathelement location="${basedir}/src/java/autotest" />
            </classpath>
            <src path="src/java/autotest/com/trolltech/unittests"/>
        </javac>
    </target>

    <!-- NOTES: This should be merged with the normal target as the only difference is the -XstartOnFirstThread option.
         In order to execute I needed to "export DYLD_LIBRARY_PATH=$QTDIR/lib:$(pwd)/build/platform-output/lib"
         and then run the usual "ant compile.tests tests.run"
      -->
    <target name="run.osx" if="qtjambi.osx" depends="init">
        <qtjambi-resolve-path var="absOutputDir" path="${outputDir}" />
        <qtjambi-resolve-path var="absQtLib"     path="${qtLib}" />
        <qtjambi-resolve-path var="absJambiLib"  path="${jambiLib}" />
        <delete dir="${outputDir}/tests/junitxml" />
        <delete dir="${outputDir}/tests/TestResults" />
        <mkdir dir="${outputDir}/tests/junitxml"/>
        <mkdir dir="${outputDir}/tests/TestResults"/>
        <junit fork="yes" printsummary="true" haltonfailure="no" timeout="600000" showoutput="yes" logfailedtests="yes">
            <classpath>
                <pathelement location="${tests.junit}" />
                <pathelement location="${tests.hamcrest}" />
                <pathelement location="${basedir}/jars/qtjambi.jar" />
<!--                <pathelement location="${outputDir}/qtjambi-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version}.jar" />                -->
                <pathelement path="src/java/qtjambi-examples" />
                <pathelement path="${absOutputDir}/tests/auto" />
                <pathelement path="${absOutputDir}/tests/unit" />
                <pathelement path="${absOutputDir}/tests/autotests" />
                <pathelement path="${basedir}/src/java/qtjambi-examples" />
                <!-- examples: is needed to pickup some images and non-code resource files to work with  -->
                <!-- this is needed by 2 tests in com/trolltech/autotests/TestInjectedCode.java#testIODevicePeek() -->
                <pathelement path="src/java/autotest" />
            </classpath>
            <jvmarg value="-XstartOnFirstThread"/>
            <jvmarg value="-d32"/><!-- This option can force 32bit JRE when
            we're built using fat binaries supporting both 32 and 64bit -->
            <jvmarg value="-Djava.library.path=${absQtLib}${psep}${absJambiLib}"/>
            <!-- <jvmarg value="-Dcom.trolltech.qt.verbose-loading=true"/> -->
            <!-- <jvmarg value="-Dcom.trolltech.qt.debug=true"/> --><!-- This should not be needed now, it loads default from MANIFEST.MF -->
            <jvmarg value="-Dcom.trolltech.qt.debug.inhibitNativeResourceThread=true"/>
            <!-- <jvmarg value="-Dcom.trolltech.qt.debug.level=255"/> -->
            <jvmarg value="-Dcom.trolltech.qt.exceptions-for-messages=none"/>
            <jvmarg value="-Xrs"/><!-- This stops JVM intercepting SIGSEGV
            from native code (so we can see where/why it crashed) otherwise
            the JVM may promote SIGSEGV to NullPointerException, which is
            not that useful for debugging. -->
            <jvmarg value="-Xcheck:jni"/>
            <env key="QTJAMBI_DEBUG_TRACE" value="true"/>
            <formatter type="xml" usefile="yes" />
            <batchtest fork="yes" todir="${outputDir}/tests/junitxml">
                <fileset dir="src/java/autotest">
                    <include name="**/com/trolltech/autotests/**/Test*.java"/>
                    <exclude name="**/com/trolltech/autotests/**/*QPlastiqueStyle.java" if="qt.feature.QT_NO_STYLE_PLASTIQUE"/>
                    <exclude name="**/com/trolltech/autotests/**/TestInjectedCodeV2LookupHost.java" if="qtjambi.javac.sunjdk5.compiler"/>
                </fileset>
                <fileset dir="src/java/autotest" includes="**/com/trolltech/unittests/**/Test*.java"/>
                <fileset dir="src/java/autotest" includes="**/com/trolltech/generatortests/**/Test*.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="run.other" unless="qtjambi.osx" depends="init, check.junit">
        <qtjambi-resolve-path var="absOutputDir" path="${outputDir}" />
        <qtjambi-resolve-path var="absQtLib"     path="${qtLib}" />
        <qtjambi-resolve-path var="absJambiLib"  path="${jambiLib}" />
        <delete dir="${outputDir}/tests/junitxml" />
        <delete dir="${outputDir}/tests/TestResults" />
        <mkdir dir="${outputDir}/tests/junitxml"/>
        <mkdir dir="${outputDir}/tests/TestResults"/>
        <!-- files contained in todir being accessed from the tests -->
        <copy todir="${outputDir}/tests/auto/com/trolltech/autotests">
            <fileset dir="src/java/autotest/com/trolltech/autotests" excludes="**/*.java"/>
        </copy>
        <copy todir="${outputDir}/tests/auto/com/trolltech/unittests">
            <fileset dir="src/java/autotest/com/trolltech/unittests" excludes="**/*.java"/>
        </copy>
        <junit fork="yes" printsummary="true" haltonfailure="no" timeout="600000" showoutput="yes" logfailedtests="yes">
            <classpath>
                <pathelement location="${tests.junit}" />
                <pathelement location="${tests.hamcrest}" />
                <pathelement location="${basedir}/jars/qtjambi.jar" />
<!--                <pathelement location="${outputDir}/qtjambi-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version}.jar" />                -->
                <pathelement path="src/java/qtjambi-examples" />
                <pathelement path="${absOutputDir}/tests/auto" />
                <pathelement path="${absOutputDir}/tests/unit" />
                <pathelement path="${absOutputDir}/tests/autotests" />
                <pathelement path="${basedir}/src/java/qtjambi-examples" />
                <!-- examples: is needed to pickup some images and non-code resource files to work with  -->
                <!-- this is needed by 2 tests in com/trolltech/autotests/TestInjectedCode.java#testIODevicePeek() -->
                <pathelement path="src/java/autotest" />
            </classpath>
<!-- ${qtLib}${psep} -->
            <jvmarg value="-Djava.library.path=${absQtLib}${psep}${absJambiLib}"/>
            <!-- <jvmarg value="-Dcom.trolltech.qt.verbose-loading=true"/> -->
            <!-- <jvmarg value="-Dcom.trolltech.qt.debug=true"/> --><!-- This should not be needed now, it loads default from MANIFEST.MF -->
            <jvmarg value="-Dcom.trolltech.qt.debug.inhibitNativeResourceThread=true"/>
            <!-- <jvmarg value="-Dcom.trolltech.qt.debug.level=255"/> -->
            <jvmarg value="-Dcom.trolltech.qt.exceptions-for-messages=none"/>
            <jvmarg value="-Xrs"/><!-- This stops JVM intercepting SIGSEGV
            from native code (so we can see where/why it crashed) otherwise
            the JVM may promote SIGSEGV to NullPointerException, which is
            not that useful for debugging. -->
            <jvmarg value="-Xcheck:jni"/>
            <env key="QTJAMBI_DEBUG_TRACE" value="true"/>
<!--            <jvmarg value="-verbose"/> -->
            <formatter type="xml" usefile="yes" />
            <batchtest fork="yes" todir="${outputDir}/tests/junitxml">
                <fileset dir="src/java/autotest">
                    <include name="**/com/trolltech/autotests/**/Test*.java"/>
                    <exclude name="**/com/trolltech/autotests/**/*QPlastiqueStyle.java" if="qt.feature.QT_NO_STYLE_PLASTIQUE"/>
                    <exclude name="**/com/trolltech/autotests/**/TestInjectedCodeV2LookupHost.java" if="qtjambi.javac.sunjdk5.compiler"/>
                </fileset>
                <fileset dir="src/java/autotest" includes="**/com/trolltech/unittests/**/Test*.java"/>
                <fileset dir="src/java/autotest" includes="**/com/trolltech/generatortests/**/Test*.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="run" depends="init, run.other, run.osx">
        <junitreport todir="${outputDir}/tests/junitxml">
            <fileset dir="${outputDir}/tests/junitxml">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${outputDir}/tests/TestResults" />
        </junitreport>
    </target>

    <target name="tests.compile"
            depends="compile.native.generator, compile.native, compile.java" description="Builds tests and required libraries"/>

    <target name="tests.run"
            depends="init, run" description="Runs tests and generates report in TestReport subdir"/>

</project>
