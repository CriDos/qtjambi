<project default="all" basedir=".">

    <property environment="env"/>

    <tstamp/>

    <property file="buildpath.properties"/>

    <property name="sourceDir" value="."/>
    <property name="outputDir" value="."/>

    <property name="jambiLib" value="${outputDir}/lib"/>

    <mkdir dir="${outputDir}/cpp"/>

    <!--
        Classpath for Java compiling
    -->
    <path id="java.compile.classpath">
        <fileset dir="${jardir}" includes="*.jar"/>
    </path>

    <!--
        Macro for compiling Java sources and generating jars.
    -->

    <macrodef name="dojar">
        <attribute name="component"/>
        <sequential>
            <mkdir dir="${java.outdir}/@{component}"/>
            <mkdir dir="${jardir}"/>
            <javac source="1.5" target="1.5" debug="true" deprecation="true"
                srcdir="${java.srcdir}/@{component}"
                destdir="${java.outdir}/@{component}">
                <classpath refid="java.compile.classpath"/>
            </javac>
            <copy todir="${java.outdir}/@{component}" includeemptydirs="false">
                <fileset dir="${java.srcdir}/@{component}">
                    <include name="**/*"/>
                    <exclude name="**/*.java"/>
                </fileset>
            </copy>
            <jar basedir="${java.outdir}/@{component}"
                destfile="${jardir}/@{component}.jar"/>
        </sequential>
    </macrodef>

    <target name="help" description="Provides detailed help.">
        <echo>
To build Qt Jambi, run ant without parameters.

To get a description of all tasks run: ant -projecthelp

Available build properties:
    -Dqtjambi.config=debug|release    Decide what native libraries
                                      should be included.
    -Dqtjambi.useJumpTable=true       Use jump tables for native functions (experimental)
    -Dqtjambi.force=true              Skip up-to-date check and force all targets to build

You can also see the Qt Jambi intallation document at:
http://doc.trolltech.com/qtjambi/com/trolltech/qt/qtjambi-installation.html
        </echo>
    </target>

    <target name="qtjambi.util.jar">
        <dojar component="qtjambi-util"/>
    </target>

    <target name="init.ant" depends="qtjambi.util.jar"
        description="Creates a .jar file containing all the Qt Jambi ant tasks.">
        <dojar component="ant-qtjambi"/>
        <!--
            We don't want ant-qtjambi.jar to be in the classpath: move it out of
            the way so that we don't have to worry about it anymore
        -->
        <mkdir dir="${jardir}/nobundle"/>
        <move file="${jardir}/ant-qtjambi.jar" todir="${jardir}/nobundle"/>
    </target>

    <target name="init.jumptable.do"
        description="Initialize the jump table..." if="qtjambi.useJumpTable">
      <echo>Using Native Jump Table. Please note that this feature is experimental...</echo>
      <property name="qtjambi.config.jumptable" value="jumptable"/>
      <property name="qtjambi.generator.jumptable" value="--native-jump-table"/>
    </target>
    <target name="init.jumptable.dont"
        description="Initialize the jump table..." unless="qtjambi.useJumpTable">
      <property name="qtjambi.config.jumptable" value=""/>
      <property name="qtjambi.generator.jumptable" value=""/>
    </target>

    <target name="init.taskdef"
        depends="init.ant, init.jumptable.do, init.jumptable.dont">
        <taskdef resource="com/trolltech/tools/ant/ant-qtjambi.xml">
            <classpath>
                <pathelement path="${jardir}/qtjambi-util.jar"/>
                <pathelement path="${jardir}/nobundle/ant-qtjambi.jar"/>
            </classpath>
        </taskdef>
    </target>

    <target name="clean" description="Cleans everything.">
        <delete dir="${java.outdir}"/>
        <delete dir="${jardir}"/>
      <delete file="${outputDir}/qtjambi-${qtjambi.version}.jar"/>
      <delete file="${outputDir}/qtjambi-examples-${qtjambi.version}.jar"/>
      <delete file="${outputDir}/qtjambi-designer-${qtjambi.version}.jar"/>
      <delete file="${outputDir}/qtjambi-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version}.jar"/>
      <delete file="${outputDir}/.compile.timestamp"/>
      <delete file="${outputDir}/generator/.compile.timestamp"/>
      <delete file="${outputDir}/generator/.run.timestamp"/>
      <delete dir="${outputDir}/bin"/>
      <delete dir="${outputDir}/lib"/>
      <delete dir="${outputDir}/cpp"/>
      <delete includeEmptyDirs="true">
        <fileset dir="${outputDir}" includes="**/*.class"/>
        <fileset dir="${outputDir}" includes="**/*.o"/>
        <fileset dir="${outputDir}" includes="**/moc_*.cpp"/>
        <fileset dir="${outputDir}" includes="**/*.obj"/>
        <fileset dir="${outputDir}" includes="**/*.pdb"/>
        <fileset dir="${outputDir}" includes="**/*.ilk"/>
        <fileset dir="${outputDir}" includes="**/release"/>
        <fileset dir="${outputDir}" includes="**/debug"/>
        <fileset dir="${outputDir}" includes="**/Makefile*"/>
      </delete>
    </target>

    <condition property="examples.juicfiles.uptodate"> 
        <and>
            <not>
                <isset property="qtjambi.force" />
            </not>
            <uptodate targetfile=".juic.run">
              <srcfiles dir="${outputDir}/com/trolltech/examples" includes="**/*.jui"/>
              <srcfiles dir="${outputDir}/com/trolltech/launcher" includes="*.jui"/>
              <srcfiles dir="${outputDir}/com/trolltech/demos" includes="**/*.jui"/>
            </uptodate>
        </and>
    </condition>

    <target name="examples.juic"
            depends="init"
            description="Generates Java source files from JUI files created by designer."
	    unless="examples.juicfiles.uptodate">
        <juic message="Running Juic for all it is worth"
          outputDir="${outputDir}"
              trFunction=""
              classNamePrefix=""
              alwaysUpdate="true"
          classpath="${sourceDir}">
         <include name="com/**/**.jui"/>
        </juic>
	<touch file="${outputDir}/.juic.run"/>
    </target>

    <target name="library.java.compile" depends="init">
      <javac memoryMaximumSize="1024m"
             fork="true"
             destdir="${outputDir}"
             debug="true"
             target="1.5">
        <src path="${outputDir}"/>
        <src path="${sourceDir}"/>
        <include name="com/trolltech/qt/*.java"/>
        <include name="com/trolltech/qt/*/*.java"/>
    <include name="com/trolltech/extensions/signalhandler/*.java"/>
      </javac>
    </target>


    <target name="library.java.bundle" depends="library.java.compile">
        <jar destfile="${outputDir}/qtjambi-${qtjambi.version}.jar"
             basedir="${outputDir}"
             includes="com/trolltech/qt/*.class,com/trolltech/qt/*/*.class,com/trolltech/extensions/signalhandler/*.class"
             includesfile="${sourceDir}/com/trolltech/images/qt-logo.png">
            <manifest>
                <attribute name="Built-By" value="${user.name} - ${TODAY}"/>
            </manifest>
        </jar>
    </target>

    <target name="examples.phonon"
        depends="init"
        if="qtjambi.phonon">
        <javac destdir="${outputDir}" target="1.5" debug="true">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/demos/phonon/*.java"/>
            <include name="com/trolltech/examples/phonon/*.java"/>
        </javac>
    </target>

    <target name="examples.webkit"
        depends="init"
        if="qtjambi.webkit">
        <javac destdir="${outputDir}" target="1.5" debug="true">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/demos/webkit/*.java"/>
            <include name="com/trolltech/examples/webkit/*.java"/>
        </javac>
    </target>

    <target name="examples.xmlpatterns"
        depends="init"
        if="qtjambi.xmlpatterns">
        <javac destdir="${outputDir}" target="1.5" debug="true">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/demos/xmlpatterns/*.java"/>
            <include name="com/trolltech/examples/xmlpatterns/*.java"/>
        </javac>
    </target>

    <target name="examples.compile"
            depends="init, examples.phonon, examples.webkit, examples.xmlpatterns">
        <javac destdir="${outputDir}"
           debug="true"
           fork="true"
           memoryMaximumSize="1024m"
           target="1.5">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/demos/**/*.java"/>
            <include name="com/trolltech/examples/**/*.java"/>
            <include name="com/trolltech/launcher/*.java"/>
            <exclude name="com/trolltech/demos/phonon/*.java"/>
            <exclude name="com/trolltech/demos/xmlpatterns/*.java"/>
            <exclude name="com/trolltech/demos/webkit/*.java"/>
            <exclude name="com/trolltech/examples/phonon/*.java"/>
            <exclude name="com/trolltech/examples/xmlpatterns/*.java"/>
            <exclude name="com/trolltech/examples/webkit/*.java"/>
            <exclude name="com/trolltech/examples/generator/*.java"/>
            <exclude name="com/trolltech/demos/HelloGL.java"/>
            <exclude name="com/trolltech/examples/GeneratorExample.java"/>
        </javac>

        <copy todir="${outputDir}">
            <fileset dir="${sourceDir}">
                <include name="com/trolltech/examples/**/*"/>
                <include name="com/trolltech/demos/**/*"/>
                <include name="com/trolltech/launcher/*"/>
                <include name="com/trolltech/images/**/*"/>
                <exclude name="com/trolltech/**/*.java"/>
                <exclude name="com/trolltech/**/*.jui"/>
            </fileset>
        </copy>
    </target>


    <target name="examples.bundle"
        depends="examples.compile">
      <jar destfile="${outputDir}/qtjambi-examples-${qtjambi.version}.jar"
             basedir="${outputDir}/">
            <include name="com/trolltech/examples/**/*"/>
            <include name="com/trolltech/demos/**/*"/>
            <include name="com/trolltech/launcher/*"/>
            <include name="com/trolltech/images/**/*"/>
            <exclude name="com/trolltech/**/*.jui"/>
            <manifest>
                <attribute name="Built-By" value="${user.name} - ${TODAY}"/>
            </manifest>
        </jar>
    </target>

    <!-- 
	 ************************************************************
	 Library Compilation etc ...
	 ************************************************************
      -->

    <condition property="qtjambi.library.makefiles.uptodate">
        <and>
            <not>
                <isset property="qtjambi.force" />
            </not>
            <uptodate targetfile="${outputDir}/Makefile">
              <srcfiles dir="${outputDir}/cpp" includes="**/*.pri"/>
              <srcfiles dir="${outputDir}" includes="**/qtjambi_*.pro"/>
              <srcfiles dir="${outputDir}/juic" includes="juic.pro"/>
              <srcfiles dir="${outputDir}/qtjambi" includes="*.pr*"/>
              <srcfiles dir="${outputDir}/designer-integration" includes="**/*.pr*"/>
            </uptodate>
        </and>
    </condition>

    <condition property="qtjambi.library.cppfiles.uptodate"> 
        <and>
            <not>
                <isset property="qtjambi.force" />
            </not>
            <uptodate targetfile="${outputDir}/.compile.timestamp">
              <srcfiles dir="${outputDir}/cpp" includes="**/*.cpp"/>
              <srcfiles dir="${outputDir}/cpp" includes="**/*.h"/>
              <srcfiles dir="${outputDir}/qtjambi" includes="*.cpp"/>
              <srcfiles dir="${outputDir}/qtjambi" includes="*.h"/>
              <srcfiles dir="${outputDir}/qtjambi_core/" includes="*.cpp"/>
              <srcfiles dir="${outputDir}/qtjambi_core/" includes="*.h"/>
              <srcfiles dir="${outputDir}/qtjambi_gui/" includes="*.cpp"/>
              <srcfiles dir="${outputDir}/qtjambi_gui/" includes="*.h"/>
              <srcfiles dir="${outputDir}/qtjambi_designer/" includes="*.cpp"/>
              <srcfiles dir="${outputDir}/qtjambi_designer/" includes="*.h"/>
              <srcfiles dir="${outputDir}/juic" includes="*.cpp"/>
              <srcfiles dir="${outputDir}/juic" includes="*.h"/>
              <srcfiles dir="${outputDir}/designer-integration" includes="**/*.cpp"/>
              <srcfiles dir="${outputDir}/designer-integration" includes="**/*.h"/>
            </uptodate>
        </and>
    </condition>

    <target name="library.native.qmake"
            depends="init"
            description="Runs qmake on the Qt Jambi project."
	    unless="qtjambi.library.makefiles.uptodate">
        <delete dir="${jambiLib}" />
	<qmake recursive="true"
               dir="${outputDir}"
               pro="${sourceDir}/java.pro"
               config="${qtjambi.configuration} ${qtjambi.config.jumptable}"
               debugTools="${qtjambi.debug-tools}"/>
    </target>

    <target name="library.native.compile"
            depends="init"
            description="Compiles the C++ Qt Jambi bindings."
	    unless="qtjambi.library.cppfiles.uptodate">
      <make dir="${outputDir}"/>
      <touch file="${outputDir}/.compile.timestamp"/>
    </target>

    <target name="library.designer.compile" 
	    depends="init">
        <javac destdir="${outputDir}" target="1.5" debug="true">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/tools/designer/*.java"/>
        </javac>
    </target>

    <target name="library.designer.bundle" 
	    depends="library.designer.compile" 
	    unless="qtjambi.library.cppfiles.uptodate">
        <jar destfile="${outputDir}/qtjambi-designer-${qtjambi.version}.jar"
             basedir="${outputDir}">
            <include name="com/trolltech/tools/designer/*"/>
            <exclude name="com/trolltech/tools/designer/*.java"/>
           <manifest>
                <attribute name="Built-By" value="${user.name} - ${TODAY}"/>
            </manifest>
        </jar>
    </target>

    <target name="library.native.bundle"
            depends="init"
            description="Creates a .jar file file containing native libraries."
	    unless="qtjambi.library.cppfiles.uptodate">

        <qtjambi-platform-jar cacheKey="${qtjambi.compiler}-${DSTAMP}-${TSTAMP}"
                              outdir="${outputDir}/platform-output">

            <!-- Qt Libraries... -->
            <library name="QtCore"    type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtGui"     type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtXml"     type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtSql"     type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtSvg"     type="qt" rootPath="${qtjambi.qtdir}" load="yes" />
            <library name="QtNetwork" type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtOpenGL"  type="qt" rootPath="${qtjambi.qtdir}" if="${qtjambi.opengl}"/>
            <library name="QtWebKit"  type="qt" rootPath="${qtjambi.qtdir}" if="${qtjambi.webkit}"/>
            <library name="QtXmlPatterns" type="qt" rootPath="${qtjambi.qtdir}" if="${qtjambi.xmlpatterns}"/>
            <library name="phonon"    type="qt" rootPath="${qtjambi.qtdir}" if="${qtjambi.phonon}"/>
            <library name="QtDBus"    type="qt" rootPath="${qtjambi.qtdir}" if="${qtjambi.dbus}"/>
            <library name="phonon_ds9" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/phonon_backend" load="never" if="${qtjambi.phonon_ds9}" />
            <library name="phonon_gstreamer" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/phonon_backend" load="never" if="${qtjambi.phonon_gstreamer}" />
            <library name="phonon_qt7" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/phonon_backend" load="never" if="${qtjambi.phonon_qt7}" />

            <!-- Qt Plugins... -->
            <library name="qjpeg" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qgif" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qmng" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qtiff" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qsvg" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qsvgicon" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/iconengines" load="never"/>
            <library name="qcncodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qjpcodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qkrcodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qtwcodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qtaccessiblewidgets" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/accessible" load="never"/>
            <library name="qsqlite" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/sqldrivers" load="never" if="${qtjambi.sqlite}" />

            <!-- Qt Jambi Libraries -->
            <library name="qtjambi"                  type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_core"    type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_gui"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_xml"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_sql"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_svg"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_network" type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_opengl"  type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_phonon"  type="qtjambi" rootPath="${outputDir}" if="${qtjambi.phonon}"/>
            <library name="com_trolltech_qt_webkit"  type="qtjambi" rootPath="${outputDir}" if="${qtjambi.webkit}"/>
            <library name="com_trolltech_qt_xmlpatterns"  type="qtjambi" rootPath="${outputDir}" if="${qtjambi.xmlpatterns}"/>

        <plugin path="plugins" />

        </qtjambi-platform-jar>

        <jar destfile="${outputDir}/qtjambi-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version}.jar">
            <fileset dir="${outputDir}/platform-output" />
            <manifest>
                <attribute name="Built-By" value="${user.name} - ${TODAY}"/>
            </manifest>
        </jar>

        <delete dir="${outputDir}/platform-output"/>
    </target>



    <!-- 
	 ************************************************************
	 Building and running the Generator...
	 ************************************************************
      -->
    <condition property="qtjambi.generator_pro.uptodate">
        <and>
            <not>
                <isset property="qtjambi.force" />
            </not>    
            <uptodate targetfile="${outputDir}/generator/Makefile">
              <srcfiles dir="${sourceDir}/generator" includes="generator.pr*"/>
              <srcfiles dir="${sourceDir}/generator/parser" includes="rxx.pr*"/>
              <srcfiles dir="${sourceDir}/generator/parser/rpp" includes="rpp.pri"/>
            </uptodate>
        </and>
    </condition>
    
    <target name="generator.qmake"
            depends="init, generator.xmlmerge"
            description="Runs qmake on the generator project." 
	    unless="qtjambi.generator_pro.uptodate">
      <mkdir dir="${outputDir}/generator"/>
      <qmake config="${qtjambi.configuration}"
             dir="${outputDir}/generator"
             pro="${sourceDir}/generator/generator.pro"
             debugTools="${qtjambi.debug-tools}"/>
    </target>

    <condition property="qtjambi.generator_compile.uptodate">
        <and>
            <not>
                <isset property="qtjambi.force" />
            </not>
            <uptodate targetfile="${outputDir}/generator/.compile.timestamp">
              <srcfiles dir="${sourceDir}/generator" includes="**/*.cpp"/>
              <srcfiles dir="${sourceDir}/generator" includes="**/*.h"/>
              <srcfiles dir="${sourceDir}/generator" includes="Makefile"/>
              <srcfiles dir="${sourceDir}/generator" includes="*.qrc"/>
              <srcfiles dir="${sourceDir}/generator" includes="*.txt"/>
              <srcfiles dir="${sourceDir}/generator" includes="*.xml"/>
            </uptodate>
        </and>
    </condition>
    
    <target name="generator.compile"
            depends="init, generator.qmake"
            description="Compiles the Qt Jambi generator."
	    unless="qtjambi.generator_compile.uptodate">
      <make dir="${outputDir}/generator" />
      <touch file="${outputDir}/generator/.compile.timestamp"/>
    </target>

    <available file="${outputDir}/generator/.run.timestamp" type="file"
        property="qtjambi.generator_run.uptodate"/>

    <target name="generator.run" depends="init, generator.compile"
        unless="qtjambi.generator_run.uptodate"
        description="Runs the Qt Jambi generator on the Qt sources, using the Qt version found at the QTDIR variable.">
        <generator dir="${outputDir}/generator" outputDirectory="${outputDir}"
            typesystem="${sourceDir}/generator/build_all.txt"
            header="${sourceDir}/generator/qtjambi_masterinclude.h"
            options="${qtjambi.generator.jumptable}"/>
	<touch file="${outputDir}/generator/.run.timestamp"/>
    </target>



    <!-- 
        ************************************************************
        XML Merging for the generator...
        ************************************************************
    -->

    <macrodef name="xmlmerge">
        <attribute name="victim"/>
        <sequential>
            <xslt force="true" style="${sourceDir}/generator/merge.xsl"
                in="${sourceDir}/generator/typesystem_@{victim}-common.xml"
                out="${outputDir}/generator/typesystem_@{victim}.xml">
                <param name="source"
                    expression="typesystem_@{victim}-java.xml"/>
            </xslt>
        </sequential>
    </macrodef>

    <target name="generator.xmlmerge.check">
        <uptodate property="common.xml.uptodate">
            <srcfiles dir="${sourceDir}/generator">
                <include name="typesystem_*-common.xml"/>
            </srcfiles>
            <mapper type="regexp" from="^typesystem_([^_-]+)-common\.xml$"
                to="typesystem_\1.xml"/>
        </uptodate>
        <uptodate property="java.java.uptodate">
            <srcfiles dir="${sourceDir}/generator">
                <include name="typesystem_*-java.java"/>
            </srcfiles>
            <mapper type="regexp" from="^typesystem_([^_-]+)-java\.java$"
                to="typesystem_\1.xml"/>
        </uptodate>
        <uptodate property="java.xml.uptodate">
            <srcfiles dir="${sourceDir}/generator">
                <include name="typesystem_*-java.xml"/>
            </srcfiles>
            <mapper type="regexp" from="^typesystem_([^_-]+)-java\.xml$"
                to="typesystem_\1.xml"/>
        </uptodate>
        <condition property="generator.xmlmerge.done">
            <and>
                <isset property="common.xml.uptodate"/>
                <isset property="java.java.uptodate"/>
                <isset property="java.xml.uptodate"/>
            </and>
        </condition>
    </target>

    <target name="generator.xmlmerge" depends="generator.xmlmerge.check"
        unless="generator.xmlmerge.done"
        description="Merges the XML files used by the Qt Jambi generator.">
        <xmlmerge victim="core"/>
        <xmlmerge victim="gui"/>
        <xmlmerge victim="xml"/>
        <xmlmerge victim="network"/>
        <xmlmerge victim="opengl"/>
        <xmlmerge victim="sql"/>
        <xmlmerge victim="svg"/>
        <xmlmerge victim="webkit"/>
        <xmlmerge victim="phonon"/>
        <xmlmerge victim="xmlpatterns"/>
        <xmlmerge victim="designer"/>
    </target>

    <target name="init"
        depends="init.ant, init.taskdef"
        description="Initializes the Qt Jambi build environment." >
      <qtjambi-initialize verbose="true" configuration="${qtjambi.config}" />
    </target>

    <target name="generator"
        depends="init, generator.xmlmerge, generator.qmake, generator.compile, generator.run"
        description="Compiles and runs the Qt Jambi Generator."/>

    <target name="library.native"
        depends="library.native.qmake, library.native.compile, library.native.bundle"
        description="Compiles and bundles the Qt Jambi native libraries."/>

    <target name="library.java"
        depends="library.java.compile, library.java.bundle"
        description="Compiles and bundles the Qt Jambi java libraries."/>

    <target name="library.designer"
        depends="library.designer.compile, library.designer.bundle"
        description="Compiles and bundles the Qt Jambi designer libraries."/>

    <target name="library"
        depends="init, library.native, library.java, library.designer"
        description="Compiles and bundles the Qt Jambi libraries."/>

    <target name="examples"
        depends="init, examples.juic, examples.bundle"
        description="Compiles and bundles the Qt Jambi examples."/>

    <target name="all"
            description="Generates, builds and bundles the Qt Jambi libraries."
            depends="init, generator, library, examples" />
</project>
