<project default="qtjambi" basedir=".">

    <property environment="env"/> 

    <tstamp/>

    <property name="sourceDir" value="." />
    <property name="outputDir" value="." />

    <property name="jambiLib" value="${outputDir}/lib" />

    <target name="help"
            description="Provides detailed help.">
	<echo>To build Qt Jambi, run ant without parameters.</echo>
	<echo></echo>
        <echo>To get a description of all tasks run: ant -projecthelp</echo>
	<echo/>
	<echo>Available build properties:</echo>
	<echo>    -Dqtjambi.config=debug|release    Decide what native libraries</echo>
	<echo>                                      should be included.</echo>
	<echo/>
	<echo>You can also see the Qt Jambi intallation document at:</echo>
	<echo>http://doc.trolltech.com/qtjambi/com/trolltech/qt/qtjambi-installation.html</echo>
    </target>

    <uptodate property="ant-qtjambi.jar.uptodate"
              targetfile="${outputDir}/ant-qtjambi.jar" >
        <srcfiles dir= "${sourceDir}"
                  includes="com/trolltech/tools/ant/*.java"/>
    </uptodate>

    <target name="ant-qtjambi.jar"
            unless="ant-qtjambi.jar.uptodate"
            description="Create a jar containing all the Qt Jambi ant tasks.">
        <mkdir dir="${outputDir}/ant-qtjambi"/>
        <javac srcdir="${sourceDir}" destdir="${outputDir}/ant-qtjambi">
            <include name="com/trolltech/tools/ant/*.java"/>
            <include name="com/trolltech/qt/internal/Version.java"/>
        </javac>
        <jar destfile="${outputDir}/ant-qtjambi.jar">
            <fileset dir="${outputDir}/ant-qtjambi"/>
        </jar>
        <delete dir="${outputDir}/ant-qtjambi"/>
    </target>

    <target name="qtjambi.init"
            depends="ant-qtjambi.jar">
        <taskdef name="juic"      classpath="${outputDir}/ant-qtjambi.jar" classname="com.trolltech.tools.ant.JuicTask"/>
        <taskdef name="qmake"     classpath="${outputDir}/ant-qtjambi.jar" classname="com.trolltech.tools.ant.QMakeTask"/>
        <taskdef name="make"      classpath="${outputDir}/ant-qtjambi.jar" classname="com.trolltech.tools.ant.MakeTask"/>
        <taskdef name="generator" classpath="${outputDir}/ant-qtjambi.jar" classname="com.trolltech.tools.ant.GeneratorTask"/>
        <taskdef name="qtjambi-platform-jar" classpath="${outputDir}/ant-qtjambi.jar" classname="com.trolltech.tools.ant.PlatformJarTask"/>
        <taskdef name="qtjambi-initialize" classpath="${outputDir}/ant-qtjambi.jar" classname="com.trolltech.tools.ant.InitializeTask"/>
        
        <qtjambi-initialize verbose="true" configuration="${qtjambi.config}" />
    </target>

    <target name="clean"
            description="Clean everything.">
        <delete file="${outputDir}/ant-qtjambi.jar"/>
	<delete file="${outputDir}/qtjambi-${qtjambi.version}.jar"/>
	<delete file="${outputDir}/qtjambi-examples-${qtjambi.version}.jar"/>
	<delete file="${outputDir}/qtjambi-designer-${qtjambi.version}.jar"/>
        <delete dir="${outputDir}/bin"/>
	<delete dir="${outputDir}/lib"/>
        <delete dir="${outputDir}/cpp"/>
        <delete includeEmptyDirs="true">
          <fileset dir="${outputDir}" includes="**/*.class"/>
          <fileset dir="${outputDir}" includes="**/*.o"/>
          <fileset dir="${outputDir}" includes="**/moc_*.cpp"/>
          <fileset dir="${outputDir}" includes="**/*.obj"/>
          <fileset dir="${outputDir}" includes="**/*.pdb"/>
          <fileset dir="${outputDir}" includes="**/*.ilk"/>
          <fileset dir="${outputDir}" includes="**/release"/>
          <fileset dir="${outputDir}" includes="**/debug"/>
          <fileset dir="${outputDir}" includes="**/Makefile*"/>
        </delete>
    </target>

    <target name="qmake.qtjambi"
            depends="qtjambi.init"
            description="Run qmake on the Qt Jambi project.">
        <delete dir="${jambiLib}" />
	<qmake recursive="true" 
               dir="${outputDir}"
               pro="${sourceDir}/java.pro"
               config="${qtjambi.configuration}"/>

        <!-- FIXME // Temporary put in here so we get teamtester to compile all files. -->
        <qmake recursive="true" 
               dir="${outputDir}"
               pro="${sourceDir}/java.pro"
               config="${qtjambi.configuration}"/>
    </target>

    <target name="qmake.generator"
            depends="qtjambi.init, merge.typesystem"
            description="Run qmake on the generator project.">
	<qmake config="${qtjambi.configuration}" 
               dir="${outputDir}/generator"
               pro="${sourceDir}/generator/generator.pro"/>
    </target>

    <target name="compile.generator" 
	    depends="qtjambi.init, qmake.generator"
            description="Compile the Qt Jambi generator.">
        <make dir="${outputDir}/generator" />
    </target>

    <target name="generator.qtjambi" 
            depends="qtjambi.init, compile.generator"
            description="Run the Qt Jambi generator on the Qt source. It will use the Qt version found at the QTDIR variable.">
        <generator dir="${outputDir}/generator"
                   outputDirectory="${outputDir}"
                   typesystem="${sourceDir}/generator/build_all.txt"
                   header="${sourceDir}/generator/qtjambi_masterinclude.h"/>
    </target>

    <target name="compile.qtjambi" 
            depends="qtjambi.init"
            description="Compile the c++ Qt Jambi bindings.">
	<make dir="${outputDir}"/>
    </target>

    <target name="juic"
            depends="qtjambi.init"
            description="Generates Java source files from JUI files created by designer.">
        <juic message="Running Juic for all it is worth"
	      outputDir="${outputDir}"
              trFunction=""
              classNamePrefix=""
              alwaysUpdate="true"
	      classpath="${sourceDir}">
	     <include name="com/**/**.jui"/>
        </juic>
    </target>

    <target name="qtjambi.jar" depends="qtjambi.init">
        <javac memoryMaximumSize="1024m"
	       fork="true"
               destdir="${outputDir}">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/qt/*.java"/>
            <include name="com/trolltech/qt/*/*.java"/>
	    <include name="com/trolltech/extensions/signalhandler/*.java"/>
        </javac>
        <jar destfile="${outputDir}/qtjambi-${qtjambi.version}.jar"
             basedir="${outputDir}"
             includes="com/trolltech/qt/*.class,com/trolltech/qt/*/*.class,com/trolltech/extensions/signalhandler/*.class"
             includesfile="${sourceDir}/com/trolltech/images/qt-logo.png">
            <manifest>
                <attribute name="Built-By" value="${user.name} - ${TODAY}"/>
            </manifest>
        </jar>
    </target>



    <target name="qtjambi-generator-example" 
	    depends="qtjambi.init"
	    if="qtjambi.generatorexample">

        <generator dir="${outputDir}/generator_example"
		   outputDirectory="${outputDir}"
		   typesystem="${sourceDir}/generator_example/typesystem_generatorexample.txt"
		   header="${sourceDir}/generator_example/global.h"/>

	<qmake config="${qtjambi.configuration}"
	       dir="${outputDir}/generator_example"
	       pro="${sourceDir}/generator_example/generator_example.pro" />

	<make dir="${outputDir}/generator_example" />

	<javac destdir="${outputDir}"
	       debug="true">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/examples/generator/*.java"/>
            <include name="com/trolltech/examples/GeneratorExample.java"/>
	</javac>

    </target>

    <target name="qtjambi-phonon-examples"
	    depends="qtjambi.init"
	    if="${qtjambi.phonon}">
        <javac destdir="${outputDir}">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/demos/phonon/*.java"/>
            <include name="com/trolltech/examples/phonon/*.java"/>
        </javac>
    </target>

    <target name="qtjambi-webkit-examples"
	    depends="qtjambi.init"
	    if="${qtjambi.webkit}">
        <javac destdir="${outputDir}">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/demos/webkit/*.java"/>
            <include name="com/trolltech/examples/webkit/*.java"/>
        </javac>
    </target>

    <target name="qtjambi-examples.jar"
            depends="qtjambi.init, qtjambi-phonon-examples, qtjambi-webkit-examples, qtjambi-generator-example">
        <javac destdir="${outputDir}" debug="true">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/demos/**/*.java"/>
            <include name="com/trolltech/examples/**/*.java"/>
            <include name="com/trolltech/launcher/*.java"/>
	    <exclude name="com/trolltech/demos/phonon/*.java"/>
            <exclude name="com/trolltech/examples/generator/*.java"/>
            <exclude name="com/trolltech/demos/HelloGL.java"/>
            <exclude name="com/trolltech/examples/GeneratorExample.java"/>
        </javac>

        <copy todir="${outputDir}">
            <fileset dir="${sourceDir}">
                <include name="com/trolltech/examples/**/*"/>
                <include name="com/trolltech/demos/**/*"/>
                <include name="com/trolltech/launcher/*"/>
                <include name="com/trolltech/images/**/*"/>
                <exclude name="com/trolltech/**/*.java"/>
                <exclude name="com/trolltech/**/*.jui"/>
            </fileset>
        </copy>

        <jar destfile="${outputDir}/qtjambi-examples-${qtjambi.version}.jar"
             basedir="${outputDir}/">
            <include name="com/trolltech/examples/**/*"/>
            <include name="com/trolltech/demos/**/*"/>
            <include name="com/trolltech/launcher/*"/>
            <include name="com/trolltech/images/**/*"/>
            <exclude name="com/trolltech/**/*.java"/>
            <exclude name="com/trolltech/**/*.jui"/>
            <manifest>
                <attribute name="Built-By" value="${user.name} - ${TODAY}"/>
                <attribute name="Main-Class" value="com.trolltech.launcher.Launcher"/>
                <attribute name="Class-Path" value="qtjambi-${qtjambi.version}.jar qtjambi-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version}.jar" />

            </manifest>
        </jar>
    </target>

    <target name="qtjambi-designer.jar" depends="qtjambi.init">
        <javac destdir="${outputDir}">
            <src path="${outputDir}"/>
            <src path="${sourceDir}"/>
            <include name="com/trolltech/tools/designer/*.java"/>
        </javac>

        <jar destfile="${outputDir}/qtjambi-designer-${qtjambi.version}.jar"
             basedir="${outputDir}">
            <include name="com/trolltech/tools/designer/*"/> 
            <exclude name="com/trolltech/tools/designer/*.java"/>
           <manifest>
                <attribute name="Built-By" value="${user.name} - ${TODAY}"/>
            </manifest>
        </jar>
    </target>

    <target name="qtjambi-platform.jar"
	    depends="qtjambi.init"
	    description="Creating .jar file with native libs...">

        <qtjambi-platform-jar cacheKey="${qtjambi.compiler}-${DSTAMP}-${TSTAMP}"
                              outdir="${outputDir}/platform-output">

            <!-- Qt Libraries... -->
            <library name="QtCore"    type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtGui"     type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtXml"     type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtSql"     type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtSvg"     type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtNetwork" type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtOpenGL"  type="qt" rootPath="${qtjambi.qtdir}" />
            <library name="QtWebKit"  type="qt" rootPath="${qtjambi.qtdir}" if="${qtjambi.webkit}"/>
            <library name="phonon"    type="qt" version="5" rootPath="${qtjambi.qtdir}" if="${qtjambi.phonon}"/>
            <library name="phonon_ds9" type="unversioned-plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/phonon_backend" load="never" if="${qtjambi.phonon_ds9}" /> 
            <library name="phonon_gstreamer" type="unversioned-plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/phonon_backend" load="never" if="${qtjambi.phonon_gstreamer}" />
            <library name="phonon_qt7" type="unversioned-plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/phonon_backend" load="never" if="${qtjambi.phonon_qt7}" />

            <!-- Qt Plugins... -->
            <library name="qjpeg" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qgif" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qmng" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qtiff" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qsvg" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/imageformats" load="never"/>
            <library name="qsvg" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/iconengines" load="never"/>
            <library name="qcncodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qjpcodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qkrcodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qtwcodecs" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/codecs" load="never" />
            <library name="qtaccessiblewidgets" type="plugin" rootPath="${qtjambi.qtdir}" subdir="plugins/accessible" load="never"/>

            <!-- Qt Jambi Libraries -->
            <library name="qtjambi"                  type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_core"    type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_gui"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_xml"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_sql"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_svg"     type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_network" type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_opengl"  type="qtjambi" rootPath="${outputDir}" />
            <library name="com_trolltech_qt_phonon"  type="qtjambi" rootPath="${outputDir}" if="${qtjambi.phonon}"/>
            <library name="com_trolltech_qt_webkit"  type="qtjambi" rootPath="${outputDir}" if="${qtjambi.webkit}"/>

	    <plugin path="plugins" />

        </qtjambi-platform-jar>

        <jar destfile="${outputDir}/qtjambi-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version}.jar">
            <fileset dir="${outputDir}/platform-output" />
        </jar>

        <delete dir="${outputDir}/platform-output"/>
        
    </target>

    <target name="merge.typesystem">
        <xslt in="${sourceDir}/generator/typesystem_core-common.xml" 
              out="${outputDir}/generator/typesystem_core.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_core-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_gui-common.xml" 
              out="${outputDir}/generator/typesystem_gui.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_gui-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_network-common.xml" 
              out="${outputDir}/generator/typesystem_network.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_network-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_svg-common.xml" 
              out="${outputDir}/generator/typesystem_svg.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_svg-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_xml-common.xml" 
              out="${outputDir}/generator/typesystem_xml.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_xml-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_xmlpatterns-common.xml" 
              out="${outputDir}/generator/typesystem_xmlpatterns.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_xmlpatterns-java.xml"/>
        </xslt>
        <xslt in="generator/typesystem_opengl-common.xml" 
              out="${outputDir}/generator/typesystem_opengl.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_opengl-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_sql-common.xml" 
              out="${outputDir}/generator/typesystem_sql.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_sql-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_designer-common.xml" 
              out="${outputDir}/generator/typesystem_designer.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_designer-java.xml"/>
        </xslt>
         <xslt in="${sourceDir}/generator/typesystem_webkit-common.xml" 
              out="${outputDir}/generator/typesystem_webkit.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_webkit-java.xml"/>
        </xslt>
        <xslt in="${sourceDir}/generator/typesystem_phonon-common.xml" 
              out="${outputDir}/generator/typesystem_phonon.xml"
              style="${sourceDir}/generator/merge.xsl"
              force="yes">
            <param name="source"
                   expression="typesystem_phonon-java.xml"/>
        </xslt>        
    </target>

    <target name="qtjambi"
            description="Make QT Jambi."
            depends="qtjambi.init,qmake.generator, compile.generator, generator.qtjambi, qmake.qtjambi, compile.qtjambi, juic, qtjambi.jar, qtjambi-examples.jar, qtjambi-designer.jar, qtjambi-platform.jar" />

</project>
