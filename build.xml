<project default="all" basedir="." name="qtjambi.main">

    <property file="build.properties"/>

    <property name="sourceDir" value="build"/>
    <property name="outputDir" value="build"/>
    <property name="generatorDir" value="generator"/>

    <path id="java.compile.classpath">
        <fileset dir="${jardir}" includes="*.jar"/>
    </path>

    <!--
        Import files containing tasks for the compilation.
    -->

    <import file="setenv.xml"/>
    <import file="antfiles/bundle.xml"/>
    <import file="antfiles/java.xml"/>
    <import file="antfiles/clean.xml"/>
    <import file="antfiles/generator.xml"/>

    <!-- 
        Runs qmake for Jambi source
    -->
    <target name="library.native.qmake" depends="init, generator.cppsrc"
        unless="qtjambi.library.makefiles.uptodate"
        description="Runs qmake on the Qt Jambi native library">
        <delete dir="lib"/>
        <qmake recursive="true" dir="${outputDir}"
            pro="java.pro"
            config="${qtjambi.configuration} ${qtjambi.config.jumptable}"
            qtconfig="${qtjambi.qtconfig}"
            includepath="${qtjambi.phonon.includedir}"
            debugTools="${qtjambi.debug-tools}"
            qmakebinary="${qmake.binary}"/>
    </target>

    <!--
        Runs make for Jambi source
    -->
    <target name="library.native.compile" depends="library.native.qmake"
        description="Compiles the C++ Qt Jambi library">
        <make dir="${outputDir}"/>
    </target>

    <!--
        Initialization tasks. Note that the init.taskdef task depends on a jar
        task, since ant-qtjambi.jar must be set in order for the
        <qtjambi-initialize> task to be set at all.
    -->

    <target name="init.taskdef" depends="setenv, jar.ant-qtjambi">
        <taskdef resource="com/trolltech/tools/ant/ant-qtjambi.xml">
            <classpath>
                <pathelement path="${jardir}/qtjambi-util.jar"/>
                <pathelement path="${jardir}/nobundle/ant-qtjambi.jar"/>
            </classpath>
        </taskdef>
    </target>

    <target name="init" depends="init.taskdef"
        description="Initializes the Qt Jambi build environment." >
        <qtjambi-initialize verbose="true" configuration="${qtjambi.config}"/>
        <!--<copy file="version.properties" todir="${java.srcdir}/qtjambi/"/>-->

        <!-- copy jogl to the jar dir. needed for compilation examples  -->
        <!--<copy file="jogl/jogl.jar" todir="${jardir}"/>-->
    </target>

    <!--
        END of initilization tasks
    -->

    <!--
        Tools building
    -->

    <target name="tools.generator.qmake" depends="init, generator.xmlmerge">
        <qmake dir="generator" pro="generator/generator.pro"
                config="${qtjambi.configuration}"
                qmakebinary="${qmake.binary}"/>
    </target>

    <target name="tools.generator.make" depends="tools.generator.qmake">
        <make dir="generator"/>
    </target>

    <target name="tools.juic.qmake" depends="init">
        <qmake dir="juic" pro="juic/juic.pro" config="${qtjambi.configuration}"
                qmakebinary="${qmake.binary}"/>
    </target>

    <target name="tools.juic.make" depends="tools.juic.qmake">
        <make dir="juic"/>
    </target>

    <macrodef name="dojuic">
        <attribute name="module"/>
        <sequential>
            <mkdir dir="${java.generated.srcdir}/@{module}"/>
            <juic message="Running juic for @{module}..." alwaysupdate="true"
                classnameprefix="" trfunction=""
                classpath="${java.srcdir}/@{module}"
                outputdir="${java.generated.srcdir}/@{module}">
                <include name="**/*.jui"/>
            </juic>
        </sequential>
    </macrodef>

    <!--
        END of tools building
    -->

    <!--
        TODO: the following two targets must go away
        Move them to their real location or something
    -->

    <target name="library.java.bundle" depends="jar.qtjambi">
        <copy file="${jardir}/qtjambi.jar"
            tofile="qtjambi-${qtjambi.version}.jar"/>
    </target>

    <target name="library.designer.bundle" depends="jar.qtjambi-designer">
        <copy file="${jardir}/qtjambi-designer.jar"
            tofile="qtjambi-designer-${qtjambi.version}.jar"/>
    </target>

    <target name="examples.bundle" depends="jar.qtjambi-examples">
        <copy file="${jardir}/qtjambi-examples.jar"
            tofile="qtjambi-examples-${qtjambi.version}.jar"/>
    </target>

    <target name="help" description="Provides detailed help.">
        <echo>
To build Qt Jambi, run ant without parameters.

Edit the build.properties file if you want to change the behaviour of the build system:

* whether you want to build a release bundle or a debug bundle,
* whether you want to use a native jump table (EXPERIMENTAL).

To get a description of all tasks run: ant -projecthelp

You can also see the Qt Jambi intallation document at:
http://doc.trolltech.com/qtjambi/com/trolltech/qt/qtjambi-installation.html
        </echo>
    </target>

</project>
