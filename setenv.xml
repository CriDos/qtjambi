<project name="qtjambi.setenv" default="setenv" basedir=".">

    <!--
        This file will sets various properties necessary for the build process.
        It is called from the main build.xml file.

        NOTE: it needs ant-contrib in your CLASSPATH environment variable.
    -->

    <taskdef resource="net/sf/antcontrib/antlib.xml"/>
    <property file="buildpath.properties"/>
    <property file="antcontrib.properties"/>

    <!--
        We want the environment variables and we want a timestamp for jars.
    -->

    <property environment="env"/>

    <tstamp/>

    <!--
        Macro for creating a timestamp
    -->

    <macrodef name="dostamp">
        <attribute name="stampfile"/>
        <sequential>
            <mkdir dir="${timestamp.dir}"/>
            <touch file="${timestamp.dir}/@{stampfile}"/>
        </sequential>
    </macrodef>

    <!--
         Preliminary: we download and enable ant-contrib tasks, unless a
         timestamp file exists that tells us this is already done.

         As we don't have ant-contrib yet at this stage (obviously), we must
         rely on a proxy task to tell whether the timestamp file exists.
    -->

    <target name="check.antcontrib">
        <available file="${timestamp.dir}/antcontrib" type="file"
            property="antcontrib.done"/>
    </target>

    <target name="get.antcontrib" depends="check.antcontrib"
        unless="antcontrib.done">
        <!--
            Yes, pathnames are hardcoded here. Since this is the only use we
            have for them, there's no need to make properties out of them.
        -->
        <mkdir dir="tmp"/>
        <mkdir dir="extjars"/>
        <!--
            NOTE about the use of <get> below: there is a usetimestamp property
            that can avoid regetting the file if it is considered up to date wrt
            the remote side. Unfortunately, it will not do its job quite
            correctly since it doesn't check for the size... So we don't use it
            here (it is set to "false" by default). Later, we should add some
            kind of timestamp to tell that yes, the file is there, and not
            download it again.
        -->
        <get src="${antcontrib.download.url}" dest="tmp/ant-contrib.zip"
            verbose="true"/>
        <unzip src="tmp/ant-contrib.zip" dest="tmp"/>
        <copy file="tmp/${antcontrib.jar.location}"
            tofile="extjars/ant-contrib.jar"/>
        <!--
            ... And remove the temporary directory, which we don't need anymore.
        -->
        <delete dir="tmp"/>
        <dostamp stampfile="antcontrib"/>
    </target>

    <target name="source.antcontrib" depends="get.antcontrib">
        <!--
            OK, we have extracted the zip file, copied the ant-contrib.jar where
            we expect it to be, we can now import all tasks...
        -->
        <taskdef resource="net/sf/antcontrib/antlib.xml"
            classpath="extjars/ant-contrib.jar"/>
    </target>

    <!--
        Do we have QTDIR set at all?
    -->

    <target name="check-qtdir">
        <fail message="QTDIR is not set">
            <condition>
                <not>
                    <isset property="env.QTDIR"/>
                </not>
            </condition>
        </fail>
        <property name="qtdir" value="${env.QTDIR}"/>
    </target>

    <!--
        Is qmake there?
    -->

    <target name="lookup-qmake" depends="check-qtdir">
        <var name="qtjambi.qmake" value="${env.QTDIR}/bin/qmake"/>
        <if>
            <os family="windows"/>
            <then>
                <var name="qtjambi.qmake" value="${env.QTDIR}/bin/qmake.exe"/>
            </then>
        </if>
        <fail message="Cannot find qmake! Have you configured Qt yet?">
            <condition>
                <not>
                    <available file="${qtjambi.qmake}" type="file"/>
                </not>
            </condition>
        </fail>
    </target>

    <target name="lookup-libsubdir">
        <var name="libsubdir" value="lib"/>
        <if>
            <os family="windows"/>
            <then>
                <var name="libsubdir" value="bin"/>
            </then>
        </if>
    </target>

    <target name="setenv" depends="lookup-libsubdir, lookup-qmake">
        <property name="qtjambi.libsubdir" value="${libsubdir}"/>
        <property name="qtjambi.qtdir" value="${qtdir}"/>
        <property name="qtjambi.qmake" value="${qtjambi.qmake}"/>
    </target>

</project>
