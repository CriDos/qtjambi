<typesystem package="com.trolltech.autotests.generated" default-superclass="com.trolltech.qt.QtJambiObject">

  <inject-code>
        com.trolltech.qt.Utilities.loadQtLibrary("QtCore");
        com.trolltech.qt.Utilities.loadQtLibrary("QtGui");
        com.trolltech.qt.Utilities.loadQtLibrary("QtXml");
        com.trolltech.qt.Utilities.loadQtLibrary("QtNetwork");
        com.trolltech.qt.Utilities.loadQtLibrary("QtSql");
  </inject-code>

  <load-typesystem name="../generator/typesystem_core.xml" generate="no" />
  <load-typesystem name="../generator/typesystem_gui.xml" generate="no" />
  <load-typesystem name="../generator/typesystem_sql.xml" generate="no" />
  <load-typesystem name="../generator/typesystem_xml.xml" generate="no" />
  <load-typesystem name="../generator/typesystem_network.xml" generate="no" />

  <value-type name="Tulip">
    <include file-name="tulip.h" location="local"/>
  </value-type>

  <value-type name="Variants">
    <include file-name="variants.h" location="local"/>
  </value-type>

  <enum-type name="TheGlobalEnum"/>

  <object-type name="General" />

  <object-type name="SignalsAndSlots">
    <include file-name="signalsandslots.h" location="local"/>
  </object-type>

  <object-type name="SenderQObject" />
  <object-type name="StyledItemDelegateSubclass" />
  <object-type name="GraphicsWidgetSubclass" />

  <object-type name="AbstractClass">
    <include file-name="abstractclass.h" location="local"/>
  </object-type>

  <object-type name="CustomPaintEngine" />
  <object-type name="OtherCustomPaintEngine">
    <extra-includes>
        <include file-name="QVarLengthArray" location="global" />
        </extra-includes>
  </object-type>

  <object-type name="AnotherNonAbstractSubclass">
    <include file-name="abstractclass.h" location="local"/>
  </object-type>

  <object-type name="NativePointerTester">
    <include file-name="nativepointertester.h" location="local"/>
  </object-type>

  <object-type name="OrdinarySuperclass" />
  <object-type name="OrdinaryDestroyed">
    <modify-function signature="getObjectJavaOwnership()">
        <modify-argument index="return">
            <define-ownership class="java" owner="java" />
        </modify-argument>
    </modify-function>
    <modify-function signature="getObjectCppOwnership()">
        <modify-argument index="return">
            <define-ownership class="java" owner="c++" />
        </modify-argument>
    </modify-function>
    <modify-function signature="setDefaultOwnership(OrdinaryDestroyed *)">
        <modify-argument index="1">
            <define-ownership class="java" owner="default" />
        </modify-argument>
    </modify-function>
    <modify-function signature="virtualGetObjectJavaOwnership()">
        <modify-argument index="return">
            <define-ownership class="shell" owner="java" />
        </modify-argument>
    </modify-function>
    <modify-function signature="virtualGetObjectCppOwnership()">
        <modify-argument index="return">
            <define-ownership class="shell" owner="c++" />
        </modify-argument>
    </modify-function>
    <modify-function signature="virtualSetDefaultOwnership(OrdinaryDestroyed *)">
        <modify-argument index="1">
            <define-ownership class="shell" owner="default" />
        </modify-argument>
    </modify-function>
    <inject-code class="java">
    public static int disposedCount = 0;
    @Override
    protected void disposed() {
        disposedCount++;

        super.disposed();
    }
    </inject-code>
  </object-type>
  <object-type name="QObjectDestroyed" />
  <object-type name="XmlEntityResolverSubclass" />
  <object-type name="SpinBoxHandler" />
  <object-type name="SpinBoxSubclass" />
  <object-type name="GraphicsSceneSubclass" />
  <object-type name="IODeviceSubclass" />
  <object-type name="XmlReaderSubclass" />
  <object-type name="TextCodecSubclass">
    <modify-function signature="TextCodecSubclass()">
        <modify-argument index="-1">
            <define-ownership class="java" owner="c++" />
        </modify-argument>
    </modify-function>
  </object-type>
  <value-type name="PictureSubclass" />

  <object-type name="SetupLayout" />
  <object-type name="GraphicsItemSubclass" />
  <object-type name="ImageIOHandlerSubclass" />
  <object-type name="AccessibleInterfaceSubclass" />
  <object-type name="SqlTableModelSubclass" />

  <object-type name="Threads"/>

  <object-type name="PolymorphicType">

    <modify-function signature="getButtonStyleOption()">
        <modify-argument index="return">
           <replace-type modified-type="com.trolltech.qt.gui.QStyleOption" />
            <conversion-rule class="native">
                jobject %out = qtjambi_from_object(__jni_env, %in, "QStyleOption", "com/trolltech/qt/gui/", "Lcom_trolltech_qt_gui_QStyleOption_2", true);
            </conversion-rule>
            <conversion-rule class="shell">
                QStyleOption *%out = (QStyleOption *) qtjambi_to_object(__jni_env, %in);
            </conversion-rule>
        </modify-argument>
    </modify-function>

    <modify-function signature="getCustomStyleOption(int)">
        <modify-argument index="return">
           <replace-type modified-type="com.trolltech.qt.gui.QStyleOption" />
            <conversion-rule class="native">
                jobject %out = qtjambi_from_object(__jni_env, %in, "QStyleOption", "com/trolltech/qt/gui/", "Lcom_trolltech_qt_gui_QStyleOption_2", true);
            </conversion-rule>
            <conversion-rule class="shell">
                QStyleOption *%out = (QStyleOption *) qtjambi_to_object(__jni_env, %in);
            </conversion-rule>
        </modify-argument>
    </modify-function>

    <modify-function signature="getUnmappedCustomStyleOption()">
        <modify-argument index="return">
            <replace-type modified-type="com.trolltech.qt.gui.QStyleOption" />
            <conversion-rule class="native">
                jobject %out = qtjambi_from_object(__jni_env, %in, "QStyleOption", "com/trolltech/qt/gui/", "Lcom_trolltech_qt_gui_QStyleOption_2", true);
            </conversion-rule>
            <conversion-rule class="shell">
                QStyleOption *%out = (QStyleOption *) qtjambi_to_object(__jni_env, %in);
            </conversion-rule>
        </modify-argument>
    </modify-function>
  </object-type>

  <object-type name="CustomEvent"
               polymorphic-id-expression="int(%1->type()) == QEvent::User + 1" />

  <object-type name="ValidatorSubclass" />

  <object-type name="SomeQObject" />

  <value-type name="CustomStyleOption"
              polymorphic-id-expression="%1-&gt;type == QStyleOption::SO_CustomBase + 1" />

  <object-type name="TestDialog" />

  <object-type name="MessageHandler"/>

  <object-type name="AccessibleTableInterfaceSubclass" />

  <namespace-type name="NameSpace::NameSpace2" />
  <namespace-type name="NameSpace::NameSpace2::NameSpace3" />
  <object-type name="NameSpace::NameSpace2::NameSpace3::ObjectC" />
  <object-type name="NameSpace::NameSpace2::NameSpace3::ObjectD" />
  <value-type name="NameSpace::NameSpace2::NameSpace3::ValueB" />
  <interface-type name="NameSpace::NameSpace2::NameSpace3::InterfaceA" />

  <namespace-type name="NameSpace">
    <include file-name="namespace.h" location="local"/>
  </namespace-type>

  <object-type name="NameSpace::ObjectA" java-name="ObjectA">
    <include file-name="namespace.h" location="local"/>
  </object-type>

  <object-type name="NameSpace::ObjectB" java-name="ObjectB">
    <include file-name="namespace.h" location="local"/>
  </object-type>

  <value-type name="NameSpace::ValueA" java-name="ValueA">
    <include file-name="namespace.h" location="local"/>
  </value-type>

  <object-type name="AbstractSocketSubclass" />


  <object-type name="QHash_int" />
  <object-type name="QLinkedList_int" />
  <object-type name="QList_int" />
  <object-type name="QMap_int" />
  <object-type name="QQueue_int" />
  <object-type name="QSet_int" />
  <object-type name="QStack_int" />
  <object-type name="QVector_int" />
  <object-type name="PolymorphicObjectType">
    <modify-function signature="invalidateObject(PolymorphicObjectType *)">

    </modify-function>
  </object-type>

</typesystem>
