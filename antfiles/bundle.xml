<project name="qtjambi.bundle" default="library.native.bundle">

    <!--
        ************************************************************
        Library Compilation etc ...
        ************************************************************
    -->

    <!-- 
        Runs qmake for Jambi source
    -->
    <target name="library.native.qmake" depends="init"
        description="Runs qmake on the Qt Jambi native library">
        <mkdir dir="${qtjambi.builddir}"/>
        <qmake recursive="true" dir="${qtjambi.builddir}"
            pro="src/cpp/java.pro"
            config="${qtjambi.configuration} ${qtjambi.config.jumptable}"
            qtconfig="${qtjambi.qtconfig}"
            debugTools="${qtjambi.debug-tools}"
            qmakebinary="${qmake.binary}"/>
    </target>

    <!--
        Runs make for Jambi source
    -->
    <target name="library.native.compile" depends="library.native.qmake"
        description="Compiles the C++ Qt Jambi library">
        <make dir="${qtjambi.builddir}"/>
    </target>

    <target name="library.native.bundle" depends="library.native.compile"
            description="Creates a .jar file file containing native libraries.">

        <qtjambi-platform-jar cacheKey="${qtjambi.compiler}${qtjambi.configuration.dash}-${DSTAMP}-${TSTAMP}"
                              outdir="${outputDir}/platform-output${qtjambi.configuration.dash}">

            <directory name="" rootPath="${qtjambi.macosx.qtmenunib.dir}" destSubdir="lib/Resources" recursive="true" />

            <!-- Qt Libraries -->
            <library name="QtCore"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" />
            <library name="QtGui"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" />
            <library name="QtXml"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" />
            <library name="QtSql"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.sql}"/>
            <library name="QtSvg"                dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.svg}"/>
            <library name="QtNetwork"            dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" />
            <library name="QtHelp"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.help}"/>
            <library name="QtScript"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.script}"/>
            <library name="QtScriptTools"        dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.scripttools}"/>
            <library name="QtMultimedia"         dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.multimedia}"/>
            <library name="QtOpenGL"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.opengl}"/>
            <library name="QtWebKit"             dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.webkit}"/>
            <library name="QtXmlPatterns"        dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.xmlpatterns}"/>
            <library name="QtDeclarative"        dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.declarative}"/>
            <library name="QtDesigner"           dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.designer}"/>
            <library name="QtDesignerComponents" dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.designercomponents}"/>
            <library name="QtCLucene"            dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.clucene}"/>
            <library name="QtDBus"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.dbus}"/>
            <library name="QtTest"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.qt.libdir}"     destSubdir="lib" if="${qtjambi.test}"/>
            <library name="phonon"               dsoVersion="${qt.version.major}"  type="qt"  rootPath="${qtjambi.phonon.libdir}" destSubdir="lib" if="${qtjambi.phonon}"/>

            <library name="phonon_ds9"          type="plugin"
                    rootPath="${qtjambi.phonon.pluginsdir}"
                    subdir="phonon_backend"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.phonon_ds9}"/>
            <library name="phonon_gstreamer"    type="plugin"
                    rootPath="${qtjambi.phonon.pluginsdir}"
                    subdir="phonon_backend"
                    destSubdir="plugins"
                    load="never"
                    kdephonon="${qtjambi.phonon.kdephonon}"
                    if="${qtjambi.phonon_gstreamer}"/>
            <library name="phonon_qt7"          type="plugin"
                    rootPath="${qtjambi.phonon.pluginsdir}"
                    subdir="phonon_backend"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.phonon_qt7}"/>

            <!-- Qt Plugins -->
            <library name="qtaccessiblewidgets" type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="accessible" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.accessible.qtaccessiblewidgets}"/>

            <library name="qsvgicon"            type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="iconengines" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.iconengines.svgicon}"/>

            <library name="qgif"                type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="imageformats" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.imageformats.gif}"/>
            <library name="qico"                type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="imageformats" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.imageformats.ico}"/>
            <library name="qjpeg"               type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="imageformats" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.imageformats.jpeg}"/>
            <library name="qmng"                type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="imageformats" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.imageformats.mng}"/>
            <library name="qpng"               type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="imageformats" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.imageformats.png}"/>
            <library name="qsvg"                type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="imageformats" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.imageformats.svg}"/>
            <library name="qtiff"               type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="imageformats" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.imageformats.tiff}"/>

            <!-- Unicode codecs -->
            <library name="qcncodecs"           type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="codecs" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.codecs.cncodecs}"/>
            <library name="qjpcodecs"           type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="codecs" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.codecs.jpcodecs}"/>
            <library name="qkrcodecs"           type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="codecs" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.codecs.krcodecs}"/>
            <library name="qtwcodecs"           type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="codecs" destSubdir="plugins" load="never"
                    if="${qtjambi.plugins.codecs.twcodecs}"/>

            <library name="qsqlite" type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="sqldrivers"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.plugins.sqldrivers.sqlite}"/>
            <library name="qsqlite2" type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="sqldrivers"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.plugins.sqldrivers.sqlite2}"/>
            <library name="qsqlmysql" type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="sqldrivers"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.plugins.sqldrivers.sqlmysql}"/>
            <library name="qsqlodbc" type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="sqldrivers"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.plugins.sqldrivers.sqlodbc}"/>
            <library name="qsqlpsql" type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="sqldrivers"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.plugins.sqldrivers.sqlpsql}"/>
            <library name="qsqltds" type="plugin"
                    rootPath="${qtjambi.qt.pluginsdir}"
                    subdir="sqldrivers"
                    destSubdir="plugins"
                    load="never"
                    if="${qtjambi.plugins.sqldrivers.sqltds}"/>

            <!-- Designer plugins -->
            <library name="JambiCustomWidget" type="qtjambi-plugin"
                    rootPath="${qtjambi.jambi.pluginsdir}"
                    subdir="designer"
                    destSubdir="plugins-designer"
                    load="never"
                    if="${qtjambi.designer}"/>
            <library name="JambiLanguage"     type="qtjambi-plugin"
                    rootPath="${qtjambi.jambi.pluginsdir}"
                    subdir="designer"
                    destSubdir="plugins-designer"
                    load="never"
                    if="${qtjambi.designer}"/>

            <!-- Additional designer plugin configuration, we absolute path in destSubdir to ignore the source path -->
            <directory name="" rootPath="${basedir}/plugins/qtjambi" destSubdir="/plugins-designer" recursive="true" />


            <library name="qtjambi"                      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" />
            <library name="com_trolltech_qt_core"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" />
            <library name="com_trolltech_qt_gui"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" />
            <library name="com_trolltech_qt_xml"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" />
            <library name="com_trolltech_qt_sql"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.sql}"         />
            <library name="com_trolltech_qt_help"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.help}"        />
            <library name="com_trolltech_qt_script"      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.script}"      />
            <library name="com_trolltech_qt_scripttools" dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.scripttools}" />
            <library name="com_trolltech_qt_multimedia"  dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.multimedia}"  />
            <library name="com_trolltech_qt_svg"         dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.svg}"         />
            <library name="com_trolltech_qt_opengl"      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.opengl}"      />
            <library name="com_trolltech_qt_network"     dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" />
            <library name="com_trolltech_qt_phonon"      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.phonon}"      />
            <library name="com_trolltech_qt_webkit"      dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.webkit}"      />
            <library name="com_trolltech_qt_xmlpatterns" dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.xmlpatterns}" />
            <library name="com_trolltech_qt_declarative" dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.declarative}" />
            <library name="com_trolltech_qt_dbus"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.dbus}"        />
            <library name="com_trolltech_qt_test"        dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.test}"        />
            <library name="com_trolltech_tools_designer" dsoVersion="${qtjambi.soname.version.major}" type="qtjambi-jni" rootPath="${qtjambi.jambi.libdir}" destSubdir="lib" if="${qtjambi.designer}"    />

            <!-- Win32/Win64 MinGW only -->
            <library name="libstdc++-6"     type="system"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.libstdc++-6}"/>
            <!-- Win32 MinGW only -->
            <library name="libgcc_s_dw2-1"  type="system"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.libgcc_s_dw2-1}"/>
            <!-- Win32/Win64 MinGW-W64 only -->
            <library name="libgcc_s_sjlj-1"  type="system"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.libgcc_s_sjlj-1}"/>
            <!-- Win32/Win64 MinGW related but unable to find it required at runtime
                 by current toolchain versions (mingw gcc 4.5.2, mingw-w64 gcc 4.7.0) -->
            <library name="mingwm10"  type="system"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.mingwm10}"/>

            <!-- Win32/Win64 libeay32.dll -->
            <library name="libeay32"        type="dso"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.libeay32}"/>

            <!-- Win32/Win64 libssl32.dll MinGW only -->
            <library name="libssl32"        type="dso"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.libssl32}"/>
            <!-- Win32/Win64 ssleay32.dll MSVC only -->
            <library name="ssleay32"        type="dso"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.ssleay32}"/>

            <!-- Win32/Win64 zlib1.dll -->
            <library name="zlib1"           type="dso"
                    rootPath="${qtjambi.qt.bindir}"
                    destSubdir="lib"
                    load="never"
                    if="${qtjambi.packaging.dso.zlib1}"/>

            <!-- Macosx libdbus-1.3.dylib (this should never have _debug
            since the Qt runtime loader code does not account for that,
            src/dbus/qdbus_symbols.cpp) -->
            <library name="dbus-1"       type="dso"
                    rootPath="${qtjambi.qt.libdir}"
                    destSubdir="lib"
                    load="never"
                    srcPath="${qtjambi.packaging.dso.libdbus-1}"
                    if="${qtjambi.packaging.dso.libdbus-1}"/>

            <plugin path="plugins"/>
            <plugin-designer path="plugins-designer"/>

        </qtjambi-platform-jar>

        <mkdir dir="${outputDir}/platform-output${qtjambi.configuration.dash}/META-INF/com.trolltech.qt.deployment"/>
        <copy file="${outputDir}/platform-output${qtjambi.configuration.dash}/qtjambi-deployment.xml" tofile="${outputDir}/platform-output${qtjambi.configuration.dash}/META-INF/com.trolltech.qt.deployment/${qtjambi.osname}.${qtjambi.compiler}.${qtjambi.configuration}-${qtjambi.version.bundle}.xml"/>

        <property name="destination-file" value="${outputDir}/qtjambi-${qtjambi.osname}-${qtjambi.compiler}-${qtjambi.version.bundle}${qtjambi.configuration.dash}.jar"/>
        <jar destfile="${destination-file}">
            <fileset dir="${outputDir}/platform-output${qtjambi.configuration.dash}"/>
            <manifest>
                <!-- <attribute name="Created-By"              value="${user.name} - ${TODAY}"/>  -->
                <attribute name="Built-By"                value="${user.name} - ${TODAY}"/>
                <!-- <attribute name="Bundle-ActivationPolicy" value="lazy"/> -->
                <!-- <attribute name="Bundle-Activator"        value="com.trolltech.qt.native.${qtjambi.osplatform}.${qtjambi.configuration}.osgi.Activator"/> -->
                <attribute name="Bundle-Classpath"        value="."/>
                <attribute name="Bundle-Description"      value="QtJambi Native Bundle (${qtjambi.osname} ${qtjambi.configuration})"/>
                <attribute name="Bundle-DocURL"           value="http://www.qt-jambi.org/go/osgi/DocURL/com.trolltech.qt.native.${qtjambi.osname}${qtjambi.configuration.osgi};version=${qtjambi.version.bundle}"/>
                <!-- TODO: qtjambi.png -->
                <!-- <attribute name="Bundle-Icon"             value="qtjambi.png"/> -->
                <attribute name="Bundle-License"          value="GNU LESSER GENERAL PUBLIC LICENSE Version 2.1 February 1999 with Nokia Qt LGPL Exception version 1.0"/>
                <!-- <attribute name="Bundle-Localization"     value=""/> -->
                <attribute name="Bundle-ManifestVersion"  value="2"/>
                <attribute name="Bundle-Name"             value="QtJambi Native Bundle (${qtjambi.osname} ${qtjambi.configuration})"/>
                <!-- Need to format Bundle-NativeCode correctly with selectors -->
                <!-- <attribute name="Bundle-NativeCode"       value="lib/**"/> -->
                <attribute name="Bundle-RequiredExecutionEnvironment" value="J2SE-1.5"/>
                <attribute name="Bundle-SymbolicName"     value="com.trolltech.qt.native.${qtjambi.osname}${qtjambi.configuration.osgi};singleton:=true"/>
                <attribute name="Bundle-UpdateLocation"   value="http://www.qt-jambi.org/go/osgi/UpdateLocation/com.trolltech.qt.native.${qtjambi.osname}${qtjambi.configuration.osgi};version=${qtjambi.version.bundle}"/>
                <attribute name="Bundle-Vendor"           value="www.qt-jambi.org"/>
                <!-- <attribute name="DynamicImport-Package"           value=""/> -->
                <attribute name="Bundle-Version"          value="${qtjambi.version.bundle}"/>
                <attribute name="Export-Package"          value="com.trolltech.qt.native.${qtjambi.osplatform}.${qtjambi.oscpu}.${qtjambi.compiler}${qtjambi.configuration.osgi}"/>
<!--                <attribute name="Import-Package"          value="com.trolltech.qt.${qtjambi.osname}${qtjambi.configuration.osgi};version=&quot;[${qt.version.major}.${qt.version.minor},${qt.version.major}.${qt.version.minor.next}]&quot;"/> -->
<!--                <attribute name="Import-Package"          value="com.trolltech.qt;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.extensions;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.extensions.signalhandler;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.images;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.core;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.designer;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.gui;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.help;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.images;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.multimedia;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.network;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.opengl;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.osinfo;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.phonon;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.script;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.scripttools;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.sql;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.svg;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.webkit;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.xml;version=&quot;${qtjambi.version.bundle}&quot;,com.trolltech.qt.xmlpatterns;version=&quot;${qtjambi.version.bundle}&quot;"/> -->
<!-- ,com.trolltech.qt.${qtjambi.osname}${qtjambi.configuration.osgi};version=&quot;${qtjambi.version.bundle}&quot; -->
                <attribute name="X-QtJambi-Arch"          value="${qtjambi.osname}"/>
                <attribute name="X-QtJambi-Build"         value="${qtjambi.configuration}"/><!-- release debug test -->
                <attribute name="X-QtJambi-CacheKey"      value="${qtjambi.compiler}-${DSTAMP}-${TSTAMP}" />
                <attribute name="X-QtJambi-Deployment"    value="/qtjambi-deployment.xml /META-INF/com.trolltech.qt.deployment/${qtjambi.osplatform}.${qtjambi.oscpu}.${qtjambi.compiler}.${qtjambi.configuration}-${qtjambi.version.bundle}.xml"/>
                <attribute name="X-QtJambi-Version"       value="${qtjambi.version.bundle}"/>
            </manifest>
        </jar>
        <copy file="${destination-file}" tofile="${jardir}/qtjambi-native.jar"/>

    </target>
</project>
