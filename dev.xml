<project default="all" basedir=".">

    <taskdef name="juic"      classpath="." classname="com.trolltech.tools.ant.JuicTask"/>
    <taskdef name="qmake"     classpath="." classname="com.trolltech.tools.ant.QMakeTask"/>
    <taskdef name="make"      classpath="." classname="com.trolltech.tools.ant.MakeTask"/>
    <taskdef name="generator" classpath="." classname="com.trolltech.tools.ant.GeneratorTask"/>

    <property environment="env"/> 
    <property name="MailLogger.mailhost" value="smtp.trolltech.com" />
    <property name="MailLogger.from" value="[ant-mail]" />
    <property name="MailLogger.failure.notify" value="true" />
    <property name="MailLogger.success.notify" value="true" />
    <property name="MailLogger.failure.to" value="hfroilan@trolltech.com" />
    <property name="MailLogger.success.to" value="hfroilan@trolltech.com" />

    <tstamp/>

    <target name="init">

    </target>

    <property name="sourceDir" value="." />
    <property name="outputDir" value="classes" />
    <property name="reportDir" value="reports" />
    <property name="htmlDir"   value="/var/www/junit/" />

    <property name="jambiLib" value="./lib" />
    <property name="qt"       value="${env.QTDIR}" />
    <property name="qtLib"    value="${qt}/lib" />
    <property name="config"    value="debug" />

    <property name="deployDir" value="./deploy" />

    <property name="eclipseDir" value="../../eclipse/main" />

    <target name="clean" depends="init">
        <delete dir="${outputDir}" />
    </target>

    <target name="clean.report" depends="init">
         <delete dir="${reportDir}" />
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${outputDir}" />
        <mkdir dir="${outputDir}/com/trolltech/autotests" />
    </target>

    <target name="prepare.report" depends="clean.report">
        <mkdir dir="${reportDir}" />
    </target>

    <target name="sync" depends="init">
        <exec executable="p4">
            <arg line="sync //depot/qtjambi/main/..." />
        </exec>
    </target>

    <target name="sync.qt" depends="init">
        <exec executable="p4">
            <arg line="sync //depot/qt/4.3/..." />
        </exec>
    </target>

    <target name="qmake" depends="init">
        <delete dir="${jambiLib}" />
	<qmake recursive="true" config="${config} sanitycheck"/>
    </target>

    <target name="compile.generator">
        <qmake dir="generator" config="release"/>
        <make dir="generator" target="clean" />
        <make dir="generator" />
	<generator dir="generator" />
    </target>

    <target name="compile.qtjambi" depends="prepare">
	<make />
    </target>

    <target name="juic">
        <juic message="Running Juic for all it is worth"
	      outputDir="${sourceDir}"
	      xmlConfigFile=""
              trFunction=""
              classNamePrefix=""
              alwaysUpdate="true"
	      classpath="." >
	     <include name="com/**/**.jui"/>
        </juic>
    </target>

    <target name="generator.autotests">
	<generator dir="autotestlib"
	           header="global.h"
                   typesystem="build.txt" />
        <qmake dir="autotestlib" recursive="true" config="${config}"/>
	<make dir="autotestlib" target="clean" />
	<make dir="autotestlib" silent="true"/>
    </target>

    <target name="generator.example" >
        <generator dir="generator_example"
	           header="global.h"
                   typesystem="typesystem_generatorexample.txt" />
        <qmake recursive="true" config="${config}" dir="generator_example" />
	<make dir="generator_example" />
    </target>

    <target name="compile" depends="qmake, compile.generator, compile.qtjambi, generator.autotests, generator.example,  compile.java" />

    <target name="configure.qt" depends="init">
        <exec executable="${qt}/configure" dir="${qt}">
            <arg line="-${config} -no-qt3support -fast -release -no-rpath -no-xfixes -fast -shared" />
	</exec>
    </target>

    <target name="compile.qt" depends="init, sync.qt, configure.qt">
	<make dir="${qt}" target="distclean" />
	<make dir="${qt}" />
    </target>

    <target name="compile.java" depends="juic">
        <javac srcdir="${sourceDir}" destdir="${outputDir}">
            <include name="com/**/**.java"/>
            <exclude name="com/trolltech/tools/generator/**/**.java"/>
            <exclude name="com/trolltech/demos/HelloGL.java" />
	    <exclude name="com/trolltech/extensions/**/**.java" />
        </javac>
    </target>

    <target name="compile.autotests" depends="init">
        <javac srcdir="${sourceDir}" destdir="${outputDir}" 
               includes="com/trolltech/autotests/**.java" />
    </target>

    <target name="lrelease" depends="init">
        <exec executable="lrelease">
            <arg line="./com/trolltech/examples/examples_no.ts" />
        </exec>
    </target>

    <target name="deploy.clean" depends="init">
        <delete dir="${deployDir}" />
        <mkdir dir="${deployDir}" />
    </target>

    <target name="deploy.jar" description="JARs the Task" depends="init">
        <jar destfile="${deployDir}/qtjambi.jar">
            <manifest>
                <attribute name="Built-By" value="Trolltech ASA - ${TODAY}"/>
                <attribute name="Main-Class" value="com.trolltech.launcher.Launcher"/>
            </manifest>
            <fileset dir="${outputDir}" />
            <fileset dir="${sourceDir}">
                <include name="com/trolltech/**/*.png" />
                <include name="com/trolltech/**/*.html" />
                <include name="com/trolltech/**/*.svg" />
		<include name="com/trolltech/**/*.qm" />
                <include name="com/trolltech/examples/ResourceSystem.jar" />
            </fileset>
        </jar>
    </target>

    <target name="deploy.linux" depends="deploy.clean, deploy.jar">
        <mkdir dir="${deployDir}/lib" />
	<exec executable="sh">
	    <arg line='-c "cp -d ${jambiLib}/*.so* ${deployDir}/lib/."' />
	</exec>

	<exec executable="sh">
	    <arg line='-c "cp -d ${qtLib}/*.so* ${deployDir}/lib/."' />
	</exec>

        <copy todir="${deployDir}/plugins">
            <fileset dir="./plugins">
                <include name="**" />
            </fileset>
        </copy>
        <copy file="bin/juic" todir="${deployDir}/bin" />

        <copy file="${qt}/bin/designer" todir="${deployDir}/bin" />

        <copy todir="${deployDir}">
            <fileset dir="./dist/linux">
                <include name="*" />
            </fileset>
        </copy>
        <chmod file="${deployDir}/bin/*" perm="+x"/>
        <chmod file="${deployDir}/designer.sh" perm="+x"/>
        <chmod file="${deployDir}/generator_example.sh" perm="+x"/>
        <chmod file="${deployDir}/qtjambi.sh" perm="+x"/>
    </target>

    <target name="deploy.zip" depends="init">
        <zip destfile="jambi-devel.zip"
             basedir="${deployDir}"/>
    </target>

    <target name="deploy.tar.gz">
        <tar tarfile="jambi-devel.tar" basedir="${deployDir}"/>
        <gzip zipfile="jambi-devel.tar.gz" src="jambi-devel.tar"/>
        <delete file="jambi-devel.tar" />
    </target>

    <target name="test" depends="prepare.report" >
        <junit printsummary="yes" haltonfailure="false">
            <!-- comment --> 
            <jvmarg value="-Djava.library.path=${qtLib}:${jambiLib}"/> 
	    <jvmarg value="-Dcom.trolltech.qt.implicit-loading=false" />
	    <jvmarg value="-Dcom.trolltech.qt.debug"/>

            <classpath>
                <pathelement location="${outputDir}" />
                <pathelement location="${sourceDir}" /> 
            </classpath>
            <formatter type="xml"/>
            <batchtest fork="true" todir="${reportDir}">
                <fileset dir=".">
                    <include name="**/autotests//Test*.java"/>
                </fileset>
            </batchtest>

        </junit>

        <junitreport todir="${reportDir}">
            <fileset dir="${reportDir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${htmlDir}"/>
        </junitreport>
    </target>

    <target name="all" depends="sync, compile, lrelease, deploy.linux" />


    <target name="eclipse" depends="eclipse.qt, eclipse.qtdesignerplugins">

    </target>

    <target name="eclipse.qt" depends="init">
        <delete dir="${eclipseDir}/com.trolltech.qt.linux.x86/lib" />
	<!--
        <copy todir="${eclipseDir}/com.trolltech.qt.linux.x86/lib">
            <fileset dir="${qtLib}">
                <include name="libQtCore.so*" />
                <include name="libQtGui.so*" />
                <include name="libQtXml.so*" />
                <include name="libQtScript.so*" />
                <include name="libQtDesigner.so*" />
                <include name="libQtDesignerComponents.so*" />
            </fileset>
        </copy> -->
	<mkdir dir="${eclipseDir}/com.trolltech.qt.linux.x86/lib" />
	<exec executable="sh">
	    <arg line='-c "cp -d ${qtLib}/libQtCore.so* ${eclipseDir}/com.trolltech.qt.linux.x86/lib/."' />
	</exec>
	<exec executable="sh">
	    <arg line='-c "cp -d ${qtLib}/libQtGui.so* ${eclipseDir}/com.trolltech.qt.linux.x86/lib/."' />
	</exec>
	<exec executable="sh">
	    <arg line='-c "cp -d ${qtLib}/libQtXml.so* ${eclipseDir}/com.trolltech.qt.linux.x86/lib/."' />
	</exec>
	<exec executable="sh">
	    <arg line='-c "cp -d ${qtLib}/libQtScript.so* ${eclipseDir}/com.trolltech.qt.linux.x86/lib/."' />
	</exec>
	<exec executable="sh">
	    <arg line='-c "cp -d ${qtLib}/libQtDesigner.so* ${eclipseDir}/com.trolltech.qt.linux.x86/lib/."' />
	</exec>
	<exec executable="sh">
	    <arg line='-c "cp -d ${qtLib}/libQtDesignerComponents.so* ${eclipseDir}/com.trolltech.qt.linux.x86/lib/."' />
	</exec>

    </target>

    <target name="eclipse.qtdesignerplugins" depends="init">
        <delete dir="${eclipseDir}/com.trolltech.qtdesignerplugins" />
        <copy todir="${eclipseDir}/com.trolltech.qtdesignerplugins">
            <fileset dir="./plugins/designer">
                <include name="*" />
            </fileset>
        </copy>
    </target>

    <target name="documentation">
        <exec executable="qdoc3" dir="doc/config">
            <arg line="qtjambi.qdocconf" />
        </exec>
    </target>

</project>
